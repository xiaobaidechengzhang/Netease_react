[{"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\index.js":"1","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\App.js":"2","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\reportWebVitals.js":"3","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Login\\Login.js":"4","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Home.js":"5","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTPUtils.js":"6","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTP.js":"7","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Search\\Search.js":"8","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\IconListItem\\IconListItem.js":"9","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\Carousel\\Carousel.js":"10","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSlider.js":"11","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Router\\router.js":"12","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\PersonalSuggest\\PersonalSuggest.js":"13","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\SubHome\\SubHome.js":"14","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\Playlist.js":"15","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Toplist\\Toplist.js":"16","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\Artists.js":"17","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\NewestSong\\NewestSong.js":"18","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Test\\Test.js":"19","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\ExchangeTime.js":"20","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\index.js":"21","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js":"22","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js":"23","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js":"24","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\fetch.js":"25","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\request.js":"26","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\Cookies.js":"27","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSliderComponent.js":"28","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\BasicSlider.js":"29","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\AudioSlider.js":"30","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\VolumeSlider.js":"31","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\index.js":"32","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\reportWebVitals.js":"33","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\App.js":"34","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Router\\router.js":"35","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Login\\Login.js":"36","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Home.js":"37","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Search\\Search.js":"38","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSlider.js":"39","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\SubHome\\SubHome.js":"40","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js":"41","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\PersonalSuggest\\PersonalSuggest.js":"42","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Test\\Test.js":"43","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\Playlist.js":"44","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\IconListItem\\IconListItem.js":"45","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\Carousel\\Carousel.js":"46","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\AudioSlider.js":"47","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSliderComponent.js":"48","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\VolumeSlider.js":"49","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTPUtils.js":"50","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\ExchangeTime.js":"51","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js":"52","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\index.js":"53","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\BasicSlider.js":"54","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTP.js":"55","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\NewestSong\\NewestSong.js":"56","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\Artists.js":"57","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js":"58","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Toplist\\Toplist.js":"59","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\Cookies.js":"60","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\request.js":"61","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\fetch.js":"62"},{"size":708,"mtime":1618901042059,"results":"63","hashOfConfig":"64"},{"size":1086,"mtime":1625558078410,"results":"65","hashOfConfig":"64"},{"size":362,"mtime":1607493431028,"results":"66","hashOfConfig":"64"},{"size":11520,"mtime":1624004494174,"results":"67","hashOfConfig":"64"},{"size":2317,"mtime":1623146014721,"results":"68","hashOfConfig":"64"},{"size":36484,"mtime":1624605487530,"results":"69","hashOfConfig":"64"},{"size":3422,"mtime":1624605807287,"results":"70","hashOfConfig":"64"},{"size":8189,"mtime":1616138316493,"results":"71","hashOfConfig":"64"},{"size":3189,"mtime":1618804475594,"results":"72","hashOfConfig":"64"},{"size":3365,"mtime":1625018656010,"results":"73","hashOfConfig":"64"},{"size":10620,"mtime":1625881094911,"results":"74","hashOfConfig":"64"},{"size":1589,"mtime":1624610108000,"results":"75","hashOfConfig":"64"},{"size":11174,"mtime":1625023515957,"results":"76","hashOfConfig":"64"},{"size":1721,"mtime":1625284063506,"results":"77","hashOfConfig":"64"},{"size":10581,"mtime":1624608660730,"results":"78","hashOfConfig":"64"},{"size":4811,"mtime":1619768995605,"results":"79","hashOfConfig":"64"},{"size":7561,"mtime":1623144747209,"results":"80","hashOfConfig":"64"},{"size":15924,"mtime":1621822175629,"results":"81","hashOfConfig":"64"},{"size":14573,"mtime":1624610779336,"results":"82","hashOfConfig":"64"},{"size":2226,"mtime":1623036409871,"results":"83","hashOfConfig":"64"},{"size":314,"mtime":1624000760430,"results":"84","hashOfConfig":"64"},{"size":15246,"mtime":1624609153610,"results":"85","hashOfConfig":"64"},{"size":1002,"mtime":1622793131019,"results":"86","hashOfConfig":"64"},{"size":22123,"mtime":1623132622016,"results":"87","hashOfConfig":"64"},{"size":1037,"mtime":1623987594969,"results":"88","hashOfConfig":"64"},{"size":724,"mtime":1624416241598,"results":"89","hashOfConfig":"64"},{"size":1739,"mtime":1624003962234,"results":"90","hashOfConfig":"64"},{"size":8441,"mtime":1625542961092,"results":"91","hashOfConfig":"64"},{"size":5988,"mtime":1625553889213,"results":"92","hashOfConfig":"64"},{"size":2645,"mtime":1625706808771,"results":"93","hashOfConfig":"64"},{"size":633,"mtime":1625824365870,"results":"94","hashOfConfig":"64"},{"size":708,"mtime":1629104513265,"results":"95","hashOfConfig":"96"},{"size":362,"mtime":1607493431028,"results":"97","hashOfConfig":"96"},{"size":1441,"mtime":1629162392682,"results":"98","hashOfConfig":"96"},{"size":1758,"mtime":1629096406464,"results":"99","hashOfConfig":"96"},{"size":11520,"mtime":1624004494174,"results":"100","hashOfConfig":"96"},{"size":2359,"mtime":1629086379514,"results":"101","hashOfConfig":"96"},{"size":8189,"mtime":1616138316493,"results":"102","hashOfConfig":"96"},{"size":10842,"mtime":1629186736438,"results":"103","hashOfConfig":"96"},{"size":1721,"mtime":1629097741536,"results":"104","hashOfConfig":"96"},{"size":15373,"mtime":1629185441881,"results":"105","hashOfConfig":"96"},{"size":11437,"mtime":1629098438188,"results":"106","hashOfConfig":"96"},{"size":14573,"mtime":1624610779336,"results":"107","hashOfConfig":"96"},{"size":10581,"mtime":1624608660730,"results":"108","hashOfConfig":"96"},{"size":3189,"mtime":1618804475594,"results":"109","hashOfConfig":"96"},{"size":3365,"mtime":1625018656010,"results":"110","hashOfConfig":"96"},{"size":2645,"mtime":1625706808771,"results":"111","hashOfConfig":"96"},{"size":8441,"mtime":1625542961092,"results":"112","hashOfConfig":"96"},{"size":633,"mtime":1625824365870,"results":"113","hashOfConfig":"96"},{"size":36484,"mtime":1624605487530,"results":"114","hashOfConfig":"96"},{"size":2226,"mtime":1623036409871,"results":"115","hashOfConfig":"96"},{"size":1002,"mtime":1622793131019,"results":"116","hashOfConfig":"96"},{"size":314,"mtime":1624000760430,"results":"117","hashOfConfig":"96"},{"size":5988,"mtime":1625553889213,"results":"118","hashOfConfig":"96"},{"size":3422,"mtime":1624605807287,"results":"119","hashOfConfig":"96"},{"size":15924,"mtime":1621822175629,"results":"120","hashOfConfig":"96"},{"size":7897,"mtime":1629096410495,"results":"121","hashOfConfig":"96"},{"size":22361,"mtime":1629096719359,"results":"122","hashOfConfig":"96"},{"size":5147,"mtime":1629097656799,"results":"123","hashOfConfig":"96"},{"size":1739,"mtime":1624003962234,"results":"124","hashOfConfig":"96"},{"size":724,"mtime":1624416241598,"results":"125","hashOfConfig":"96"},{"size":1037,"mtime":1623987594969,"results":"126","hashOfConfig":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},"1oi5c58",{"filePath":"131","messages":"132","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"130"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"218"},"z8wmfc",{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"218"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"218"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"218"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"218"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"218"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"218"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"218"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"218"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"218"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"218"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"218"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"218"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"218"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"218"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"218"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"218"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"218"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"218"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"218"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"218"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"218"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"218"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"218"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"218"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\index.js",["288"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { EasyrouteProvider } from 'react-easyroute';\nimport routes from './Router/router';\nimport { HashRouter,  } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter routes={routes}>\n      <App routes={routes}/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["289","290"],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\App.js",["291","292","293","294","295","296","297","298","299","300","301"],"import './App.less';\nimport 'antd/dist/antd.css';\nimport 'moment/locale/zh-cn';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport { Button, } from 'antd'\nimport React, { useEffect } from 'react';\nimport Login from './Login/Login'\nimport Home from './Home/Home'\nimport MusicSlider from './MusicSlider/MusicSlider'\nimport Search from './Search/Search';\nimport IconListItem from './widgets/IconListItem/IconListItem';\nimport Carousel from './widgets/Carousel/Carousel'\nimport { RouterOutlet } from 'react-easyroute';\nimport { withRouter, Switch, Route, } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n\nfunction App(props) {\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <div className=\"App\">\n        {renderRoutes(props.routes)}\n        {/* <Login/> */}\n        {/* <Search/> */}\n        {/* <IconListItem/> */}\n        {/* <Carousel/> */}\n        {/* <MusicSlider /> */}\n        {/* <Home/> */}\n        {/* <RouterOutlet/> */}\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default withRouter(App);\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\reportWebVitals.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Login\\Login.js",["302","303","304","305","306"],"\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Checkbox, Select, Tooltip, message } from 'antd'\r\nimport './Login.less'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FormItem = Form.Item;\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 }\r\n}\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 6, span: 16 }\r\n}\r\nconst loginLayout = {\r\n    wrapperCol: { span: 24 }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @export  登录页面\r\n * @return {*} \r\n */\r\nexport default function Login(props) {\r\n    const formRef = useRef();\r\n    const [isPhoneMode, setIsPhoneMode] = useState('1');             //是否使用手机验证码登录\r\n    const [namePlaceholder, setNamePlaceholder] = useState('请输入手机号码');         //用户名input框placeholder\r\n    const [isOnSendCode, setIsonsendcode] = useState(false);                      //是否处于发送验证码\r\n    const [sendCodeMil, setSendcodeMil] = useState(60);                           //处于发送验证码时间段内, 定时读秒的秒数\r\n\r\n\r\n    /**\r\n     * sendVerifCode和下面的useEffect 是发送验证码相关事件\r\n     */\r\n    /**\r\n     * 处于手机登录状态下, 点击发送验证码, 出现'已发送60秒'\r\n     */\r\n    const sendVerifCode = async () => {\r\n        let currentValue = formRef.current.getFieldsValue()\r\n        console.log(formRef.current.getFieldsValue())\r\n        let phone = currentValue.userName;\r\n        if(!phone) {\r\n            message.error('请先输入手机号');\r\n            return false;\r\n        }\r\n        let params = {\r\n            phone: phone,\r\n        }\r\n        let data = await HTTPUtils.captcha_sent(params);\r\n        console.log(data)\r\n        console.log(data)\r\n        setIsonsendcode(true)\r\n        setSendcodeMil(sendCodeMil)\r\n    }\r\n    /**\r\n     * 处于发送验证码时间段内, 定时读秒, sendcodemil为0时, 恢复显示发送验证码按钮, 并将读秒重置为60s\r\n     * 依赖isOnSendCode和sendCodeMil\r\n     */\r\n    useEffect(() => {\r\n        if(isOnSendCode) {\r\n            let codeTimer = setInterval(() => {\r\n                if(sendCodeMil >0 && sendCodeMil <= 60) {\r\n                    setSendcodeMil(sendCodeMil-1)\r\n                }else if(sendCodeMil == 0) {\r\n                    setIsonsendcode(false)\r\n                    setSendcodeMil(60)\r\n                }\r\n            }, 1000)\r\n            //为了清除codeTimer\r\n            return () => {\r\n                clearInterval(codeTimer)\r\n            }\r\n        }\r\n    }, [isOnSendCode, sendCodeMil])\r\n\r\n\r\n\r\n    /**\r\n     *提交成功\r\n     *\r\n     * @param {value: Object} value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     * isphonemode: true: 用手机登录; false: 邮箱登录\r\n     */\r\n    const onFinish = async (value) => {\r\n        isPhoneMode != '3' ? await loginWithPhone(value) : await loginWithEmail(value);\r\n    }\r\n    /**\r\n     *提交失败\r\n     *\r\n     * @param {*} err\r\n     */\r\n    const onFinishFailed = (err) => {\r\n        console.log(err)\r\n    }\r\n    /**\r\n     * \r\n     * @param {obj: Object} obj : value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     */\r\n    const loginWithPhone = async (obj) => {\r\n        console.log(obj)\r\n        let password = obj['password'];\r\n        let phone = obj['userName']\r\n        if(isPhoneMode == '1') {\r\n            //手机验证码登录\r\n            let params1 = {\r\n                phone,\r\n                captcha: password,\r\n            }\r\n            let data1 = await HTTPUtils.captcha_verify(params1);\r\n            console.log(data1)\r\n        }else {\r\n            //手机密码登录\r\n            let params = {\r\n                phone,\r\n                password,\r\n            }\r\n            let data = await HTTPUtils.login_cellphone(params);\r\n            console.log(data)\r\n        }\r\n        message.success('登录成功')\r\n        props.history.push('/home')\r\n        // let params = {\r\n        //     phone: obj.userName,\r\n        //     password: obj.password,\r\n        //     timestamp: Date.now()\r\n        // }\r\n        // let data = await HTTPUtils.login_cellphone(params);\r\n        // if(data.code !== 200) {\r\n        //     console.log(data)\r\n        //     message.error(data.msg || '请输入正确的用户名或者密码');\r\n        //     return\r\n        // }\r\n        // console.log(data)\r\n\r\n    }\r\n     /**\r\n     * \r\n     * @param {obj: Object} obj : value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     */\r\n    const loginWithEmail = async (obj) => {\r\n        let params = {\r\n            email: obj.userName,\r\n            password: obj.password,\r\n            timestamp: Date.now()\r\n        }\r\n        let data = await HTTPUtils.login(params);\r\n        document.cookie = data.cookie;//登录以后, 要存储cookie, 为的是保持登录状态, 请求需要登录的接口\r\n        props.history.push('/home')\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {val: String} val : 选择手机/邮箱, 设置密码框里的tooltips, 用户名里的placeholder\r\n     */\r\n    const selectedType = (val) => {\r\n        setIsPhoneMode(val);\r\n        let holder = val === '3' ? '请输入邮箱' : '请输入手机号码';\r\n        setNamePlaceholder(holder)\r\n    }\r\n\r\n\r\n\r\n    const getdata = async () => {\r\n        let obj = {\r\n            id: 58100\r\n        }\r\n        let data = await HTTPUtils.video_group(obj);\r\n        console.log('视频')\r\n        console.log(data)\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <div\r\n                className='loginContent'\r\n                draggable='true'\r\n            >\r\n                <Button\r\n                    className='closeBtn'\r\n                >\r\n                    <CloseOutlined className='closeImg' />\r\n                </Button>\r\n                <Form\r\n                    ref={formRef}\r\n                    {...layout}\r\n                    name='loginData'\r\n                    autoComplete='false'\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <FormItem\r\n                        {...loginLayout}\r\n                    >\r\n                        <p\r\n                            style={{ textAlign: 'center', fontSize: '25px', borderBottom: '1px solid #C20C0C', paddingBottom: '10px', color: '#C20C0C' }}\r\n                        >\r\n                            网易云音乐\r\n                        </p>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label='用户名'\r\n                        style={{ width: '500px' }}\r\n                    >\r\n                        <Input.Group compact>\r\n                            <Select\r\n                                defaultValue=\"1\"\r\n                                style={{ width: '35%', height: '50px' }}\r\n                                onSelect={selectedType}\r\n                            >\r\n                                <Option value=\"1\">手机验证码</Option>\r\n                                <Option value=\"2\">手机密码</Option>\r\n                                <Option value=\"3\">邮箱</Option>\r\n                            </Select>\r\n                            <FormItem\r\n                                name='userName'\r\n                                style={{ width: '65%' }}\r\n                                rules={[{ required: true, message: '请输入用户名' }]}\r\n                            >\r\n                                <Input\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder={namePlaceholder}\r\n                                />\r\n                            </FormItem>\r\n                        </Input.Group>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label='密码'\r\n                        name='password'\r\n                        style={{ width: '500px' }}\r\n                        rules={[{ required: true, message: '请输入密码' }]}\r\n                    >\r\n                        {\r\n                            !(isPhoneMode == '1') ?\r\n                                <Input.Password\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder='请输入密码'\r\n                                />\r\n                                :\r\n                                <Input\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder='请输入验证码'\r\n                                    suffix={\r\n                                        <Tooltip\r\n                                            title=\"Extra information\"\r\n                                        >\r\n                                            {\r\n                                                !isOnSendCode ?\r\n                                                    <Button\r\n                                                        type='text'\r\n                                                        style={{ color: '#1890ff' }}\r\n                                                        onClick={sendVerifCode}\r\n                                                    >\r\n                                                        发送验证码\r\n                                                </Button>\r\n                                                    :\r\n                                                    <span\r\n                                                        style={{ color: 'gray' }}\r\n                                                    >\r\n                                                        已发送\r\n                                                    <span\r\n                                                        style={{padding: 5}}\r\n                                                    >\r\n                                                            {sendCodeMil}\r\n                                                        </span>\r\n                                                    秒\r\n                                                </span>\r\n                                            }\r\n                                        </Tooltip>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem\r\n                        name='remember'\r\n                        {...tailLayout}\r\n                        valuePropName='checked'\r\n                    >\r\n                        <Checkbox\r\n                        >\r\n                            记住我\r\n                        </Checkbox>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        wrapperCol={{ offset: 6, span: 12 }}\r\n\r\n                    >\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType='submit'\r\n                            className='subBtn'\r\n                            shape='round'\r\n                        >\r\n                            登录\r\n                        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n            {/* <Button onClick={getdata}>获取登录</Button> */}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Home.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, Slider, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Home.less';\r\nimport PersonalSuggest from './PersonalSuggest/PersonalSuggest';\r\nimport SubHome from './SubHome/SubHome';\r\nimport { RouterOutlet } from 'react-easyroute';\r\nimport { Route, Switch, Link, useParams } from 'react-router-dom'\r\nimport { renderRoutes } from 'react-router-config';\r\nconst paths = {\r\n    '/home/0': 0,\r\n    '/home/1': 1,\r\n    '/home/2': 2,\r\n    '/home/3': 3,\r\n    '/home/4': 4,\r\n}\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Home(props) {\r\n    const [homeTags, setHomeTags] = useState(['个性推荐', '歌单', '排行榜', '歌手', '最新音乐']);       //首页tags\r\n    const [activeHomeTag, setActiveHomeTag] = useState('0');            //当前active的home tag\r\n    useEffect(() => {\r\n        let pathname = props.location.pathname;\r\n        setActiveHomeTag(paths[pathname])\r\n    },)\r\n    /**\r\n     * \r\n     * @param {type: String} type : 0: 个性推荐; 1: 歌单; 2: 排行榜; 3: 歌手; 4: 最新音乐\r\n     */\r\n    const clickHomeTag = (type) => {\r\n        setActiveHomeTag(type)\r\n    }\r\n    return (\r\n        <div\r\n        >\r\n            <div\r\n                className='catHeader'\r\n            >\r\n                {\r\n                    homeTags.map((item, index) => {\r\n                        return (\r\n                            <Link\r\n                                key={index}\r\n                                className={`${activeHomeTag == index ? 'activeCatHeaderItem' : ''} catHeaderItem`}\r\n                                onClick={() => clickHomeTag(index)}\r\n                                to={`/home/${index}`}\r\n                            >\r\n                                {item}\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {renderRoutes(props.route.routes)}\r\n            {/* <Switch>\r\n                <Route exact path='/'>\r\n                    <PersonalSuggest/>\r\n                </Route>\r\n                <Route path='/:id'>\r\n                    <SubHome/>\r\n                </Route>\r\n            </Switch> */}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTPUtils.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTP.js",["322","323","324","325","326"],"import { message, } from 'antd';\r\nimport request from './request'\r\n\r\nlet Http = {};\r\nHttp.Get = function(url, params) {\r\n    const method = 'GET';\r\n    let fetchUrl = url;\r\n    if(params) {\r\n        fetchUrl += stringParams(params);\r\n    }\r\n    //credentials: 'include', 设置此项, 是为了fetch在请求时带上cookie, \r\n    const fetchParams = {method: method, credentials: 'include',};\r\n    return Http.handleFetchData(fetchUrl, fetchParams);\r\n}\r\nHttp.Post = function(url, params = {}) {\r\n    const method = 'POST';\r\n    const body = JSON.stringify(params);\r\n    console.log(body)\r\n    const fetchParams = {\r\n        method: method,\r\n        body: body,\r\n\r\n    }\r\n    console.log(fetchParams)\r\n    return Http.handleFetchData(url, fetchParams);\r\n}\r\nHttp.handleFetchData = (url, fetchParams) => {\r\n    const fetchPromise = new Promise((resolve, reject) => {\r\n        request()(url, fetchParams).then(\r\n            response => {\r\n                response.json().then(jsonBody => {\r\n                    if(response.ok) {\r\n                        if(jsonBody.code != 200) {\r\n                            reject(Http.handleFailedResult(jsonBody))\r\n                        }else {\r\n                            resolve(Http.handleResult(jsonBody));\r\n                        }\r\n                    }else {\r\n                        let msg = '服务器繁忙, 请稍后再试!';\r\n                        if(response.code === 404) {\r\n                            msg = '你访问的页面走丢了'\r\n                        }\r\n                        // resolve(Http.handleResult({fetchStatus: 'error', netStatus: response.status, error: msg}))\r\n                        reject(Http.handleFailedResult({fetchStatus: 'error', netStatus: response.code, error: msg}))\r\n                        message.error(msg);\r\n                    }\r\n                }).catch(e => {\r\n                    const errMsg = e.name + ' ' + e.message;\r\n                    reject(Http.handleFailedResult({fetchStatus: 'error', netStatus: response.code, error: errMsg}))\r\n                    message.error(errMsg);\r\n                })\r\n            }\r\n        ).catch(e => {\r\n            const errMsg = e.name + ' ' + e.message;\r\n            reject(Http.handleFailedResult({fetchStatus: 'error', error: errMsg}))\r\n            message.error(errMsg)\r\n        })\r\n    })\r\n    return Promise.race([fetchPromise])\r\n}\r\n\r\nHttp.handleResult = (result) => {\r\n    if(result.code != 200 && result.data?.code != 200) {\r\n        const errMsg= result.msg || result.message || '服务器开了小差, 请稍后再试!';\r\n        const errStr = `${errMsg} (${result.code})`;\r\n        message.error(errStr)\r\n        return;\r\n    }\r\n    return result;\r\n}\r\n\r\nHttp.handleFailedResult = (result) => {\r\n    if(result.code != 200) {\r\n        const errMsg= result.msg || result.message || '服务器开了小差, 请稍后再试!';\r\n        const errStr = `${errMsg} (${result.code})`;\r\n        message.error(errStr)\r\n        return;\r\n    }\r\n    const errorMsg = 'Uncaught PromiseError: ' + (result.netcode || '') + ' ' + (result.error || result.msg || result.message);\r\n    return errorMsg; \r\n}\r\n\r\n\r\nfunction stringParams(params) {\r\n    let paramsArr = [];\r\n    Object.keys(params).map(item => {\r\n        let str = item + '=' +params[item];\r\n        paramsArr.push(str);\r\n    })\r\n    let paramsStr = '?' + paramsArr.join('&');\r\n    return paramsStr;\r\n}\r\n\r\nexport default Http;","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Search\\Search.js",["327","328","329","330","331","332","333","334","335","336","337"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Search.less';\r\n/**\r\n *\r\n *\r\n * @export 搜索框组件\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Search(props) {\r\n    const searchRef = useRef();\r\n    //state---默认搜索词--placeholder\r\n    const [searchDefault, setSearchDefault] = useState({\r\n        realkeyword: '',\r\n        showKeyword: ''\r\n    })\r\n    //state---搜索keyword\r\n    const [searchKeyword, setSearchKeyword] = useState('')\r\n    //state---热搜列表\r\n    const [searchHot, setSearchHot] = useState([]);\r\n    //state---搜索input是否聚焦\r\n    const [isSearchFocus, setIsSearchFocus] = useState(false);\r\n\r\n    //search focus 时,获取热搜列表\r\n    useEffect(async () => {\r\n        await search_default();\r\n        // searchRef.current.focus();\r\n        // console.log(searchRef.current.onBlur())\r\n    }, [searchDefault.showKeyword]);\r\n\r\n    //search input keyword改变所触发的事件\r\n    useEffect(async () => {\r\n        if (searchKeyword) {\r\n            await search_suggest();\r\n        }else {\r\n            await search_hot();\r\n        }\r\n    }, [searchKeyword])\r\n    //search input focus触发事件\r\n    useEffect(async () => {\r\n        if (isSearchFocus) {\r\n            if (searchKeyword) {\r\n                await search_suggest();\r\n            } else {\r\n                await search_hot();\r\n            }\r\n        }\r\n    }, [isSearchFocus])\r\n    //事件---默认搜索词\r\n    const search_default = async () => {\r\n        let data = await HTTPUtils.search_default();\r\n        // console.log(data)\r\n        setSearchDefault({\r\n            realkeyword: data.data.realkeyword,\r\n            showKeyword: data.data.showKeyword,\r\n        })\r\n    }\r\n\r\n    //事件---热搜列表\r\n    const search_hot = async () => {\r\n        let data = await HTTPUtils.search_hot();\r\n        setSearchHot(data.result.hots)\r\n    }\r\n\r\n    //事件---搜索聚焦\r\n    const searchFocus = async () => {\r\n        setIsSearchFocus(true)\r\n        // await search_hot();\r\n    }\r\n\r\n    //事件---搜索失去焦点\r\n    const searchBlur = async () => {\r\n        // setIsSearchFocus(false)\r\n    }\r\n\r\n    //事件---点击search_list_item\r\n    const list_item_click = async (value) => {\r\n        setSearchKeyword(value)\r\n        setIsSearchFocus(false)\r\n    }\r\n\r\n    //事件---search enter\r\n    const searchEnter = async () => {\r\n        // console.log(searchKeyword)\r\n    }\r\n\r\n    //事件---search input onChange\r\n    const searchChange = async (e) => {\r\n        let value = e.target.value\r\n        setSearchKeyword(value)\r\n    }\r\n\r\n    //事件---请求搜索建议\r\n    const search_suggest = async () => {\r\n        let obj = {\r\n            keywords: searchKeyword,\r\n        }\r\n        let search_hot = [];\r\n        let data = await HTTPUtils.search_suggest(obj)\r\n        // console.log(data.result.playlists)\r\n        console.log(data.result.songs)\r\n        // console.log(data.result.albums)\r\n        // console.log(data.result.artists)\r\n        let res = data.result;\r\n        if (res.songs) {\r\n            let len = search_hot.length;\r\n            search_hot[len] = {}\r\n            search_hot[len].type = 'songs';\r\n            search_hot[len].category = '歌曲';\r\n            search_hot[len].list = [];\r\n            res.songs.map((item, index) => {\r\n                let list_item = {};\r\n                list_item.id = item.id;\r\n                list_item.title = item.name + '-' + item.artists[0].name;\r\n                search_hot[len].list.push(list_item);\r\n            })\r\n        }\r\n        if(res.albums) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'albums';\r\n            item.category = '专辑';\r\n            item.list = [];\r\n            res.albums.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name + '-' + zItem.artist.name;\r\n                // console.log(item)\r\n                // console.log(item.list instanceof Array)\r\n                item.list.push(list_item);\r\n            })\r\n            search_hot[len] = item;\r\n        }\r\n        if(res.artists) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'artists';\r\n            item.category = '歌手';\r\n            item.list = [];\r\n            res.artists.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name;\r\n                item.list.push(list_item)\r\n            })\r\n            search_hot[len] = item;\r\n        }\r\n        if(res.playlists) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'playlists';\r\n            item.category = '歌单';\r\n            item.list = [];\r\n            res.playlists.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name;\r\n                item.list.push(list_item)\r\n            })\r\n            search_hot[len] = item\r\n        }\r\n        setSearchHot(search_hot)\r\n    }\r\n    //渲染---不同情况下的热搜列表\r\n    const renderHotItem = (item) => {\r\n        // console.log(item)\r\n        if (!item.type) {\r\n            return (\r\n                <p\r\n                    style={{ paddingLeft: 10 }}\r\n                    className='p_no_pad p_line_height'\r\n                    onClick={() => list_item_click(item.first)}\r\n                >\r\n                    {item.first}\r\n                </p>\r\n            )\r\n        }\r\n        return (\r\n            <div className='hot_arr_item' style={{ display: 'flex', flexDirection: 'row' }}>\r\n                <p style={{ flex: 1 }} className='p_line_height p_center'>\r\n                    {item.category}\r\n                </p>\r\n                <div style={{ flex: 3, flexDirection: 'column', borderBottom: '1px solid gray' }}>\r\n                    {\r\n                        item.list.length && item.list.map((zItem, zIndex) => {\r\n                            return (\r\n                                <p\r\n                                    key={zItem.id}\r\n                                    style={{ paddingLeft: 10 }}\r\n                                    className='p_no_pad p_line_height'\r\n                                    onClick={() => list_item_click(zItem.title)}\r\n                                >\r\n                                    {zItem.title}\r\n                                </p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                className='header'\r\n            >\r\n                <div className='header_search'>\r\n                    <Input\r\n                        ref={searchRef}\r\n                        placeholder={searchDefault.showKeyword}\r\n                        value={searchKeyword}\r\n                        style={{ width: '350px', height: '40px', borderRadius: '10px' }}\r\n                        allowClear\r\n                        onFocus={searchFocus} onBlur={searchBlur}\r\n                        onChange={searchChange}\r\n                        onPressEnter={searchEnter}\r\n                    />\r\n                    <div className={`header_search_list ${isSearchFocus ? 'header_search_list_active' : null}`}>\r\n                        {\r\n                            searchHot.length > 0 && searchHot.map((item, index) => {\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        className='header_search_list_item'\r\n                                    >\r\n                                        {renderHotItem(item)}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\IconListItem\\IconListItem.js",["338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';\r\nimport './IconListItem.less';\r\n\r\nexport default function IconListItem(props) {\r\n    const [activeIndex, setActiveIndex] = useState('-1');\r\n    const overDiv = (e) => {\r\n        console.log('over')\r\n        console.log(e.target.innerHTML)\r\n        console.log(e.target.id)\r\n        setActiveIndex(e.target.id)\r\n    }\r\n    const outDiv = (e) => {\r\n        console.log('out')\r\n        console.log(e)\r\n        setActiveIndex('-1')\r\n    }\r\n    console.log(activeIndex)\r\n    return (\r\n        <div style={{  }}>\r\n            <div id='0' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '0' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='0' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='0' style={{ flex: '2' }}>2</p>\r\n                    <p id='0' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px'  }} className={`${activeIndex != '-1' ? (activeIndex == '0' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n            <div id='1' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '1' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='1' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='1' style={{ flex: '2' }}>2</p>\r\n                    <p id='1' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px' }} className={`${activeIndex != '-1' ? (activeIndex == '1' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n            <div id='2' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '2' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='2' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='2' style={{ flex: '2' }}>2</p>\r\n                    <p id='2' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px'  }} className={`${activeIndex != '-1' ? (activeIndex == '2' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n            <div id='3' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '3' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='3' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='3' style={{ flex: '2' }}>2</p>\r\n                    <p id='3' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px'  }} className={`${activeIndex != '-1' ? (activeIndex == '3' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\Carousel\\Carousel.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport './Carousel.less';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';;\r\nlet timer = ''\r\nexport default function Carousel(props) {\r\n    const [index, setIndex] = useState('0');\r\n    const [isHover, setIsHover] = useState(false);\r\n    const [left, setLeft] = useState(true)\r\n    const leftClickDiv = () => {\r\n        setLeft(true)\r\n        let dex = parseInt(index);\r\n        if(dex < 3) {\r\n            dex += 1;\r\n        }else {\r\n            dex = 1;\r\n        }\r\n        setIndex(dex.toString())\r\n    }\r\n    const rightClickDiv = () => {\r\n        setLeft(false)\r\n        let dex = parseInt(index);\r\n        if(dex > 1) {\r\n            dex -= 1;\r\n        }else {\r\n            dex = 3;\r\n        }\r\n        setIndex(dex.toString())\r\n    }\r\n    useEffect(() => {\r\n        if(!isHover) {\r\n            timer = setTimeout(leftClickDiv, 3000);\r\n        }\r\n        return () => {\r\n            timer && clearTimeout(timer)\r\n        }\r\n    }, [index])\r\n    const clearMyTimer = () => {\r\n        setIsHover(true)\r\n        clearTimeout(timer)\r\n    }\r\n    const createMyTimer = () => {\r\n        setIsHover(false)\r\n        timer = setTimeout(leftClickDiv, 3000);\r\n    }\r\n    return (\r\n        <div style={{position: 'relative', height: '400px'}} onMouseOver={clearMyTimer} onMouseOut={createMyTimer}>\r\n            {/* <div className='aniDiv' style={{width: '400px', height: '200px', backgroundColor: '#9FEAF9', margin: '10px', position: 'absolute', right: 0, top: 0, boxShadow: '0 0 10px gray'}}>\r\n\r\n            </div>\r\n            <div className='aniDiv' style={{width: '400px', height: '200px', backgroundColor: '#9FEAF9', margin: '10px', position: 'absolute', left: 0, top: 0, boxShadow: '0 0 10px gray'}}>\r\n\r\n            </div> */}\r\n            <div className={ `allT ${index == '1' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : `${index == '2' ? `${left ? 'ani2' : 'ani2Reverse'}` : `${index == '3' ? `${left ? 'anima3' : 'anima3Reverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 && props.data[0].imageUrl} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div className={ `allT1 ${index == '1' ? `${left ? 'ani2' : 'ani2Reverse'}` : `${index == '2' ? `${left ? 'anima3' : 'anima3Reverse'}` : `${index == '3' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 && props.data[1].imageUrl} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div className={ `allT2 ${index == '1' ? `${left ? 'anima3' : 'anima3Reverse'}` : `${index == '2' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : `${index == '3' ? `${left ? 'ani2' : 'ani2Reverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 && props.data[2].imageUrl} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div style={{position: 'absolute', left: 0, top: 0, width: '100%', height: '100%', zIndex: 3, opacity: 0.5, display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{flex: 1, opacity: 0.5, cursor: 'pointer'}} onClick={leftClickDiv}>\r\n\r\n                </div>\r\n                <div style={{flex: 1, opacity: 0.5, cursor: 'pointer'}} onClick={rightClickDiv}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSlider.js",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422"],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Router\\router.js",["423","424"],"import Router from 'react-easyroute';\r\nimport Login from '../Login/Login'\r\nimport Home from '../Home/Home';\r\nimport PersonalSuggest from '../Home/PersonalSuggest/PersonalSuggest';\r\nimport SubHome from '../Home/SubHome/SubHome';\r\nimport Playlist from '../Home/Playlist/Playlist';\r\nimport PlaylistDetail from '../Home/Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Home/Test/Test';\r\n\r\n\r\nconst router = new Router({\r\n    mode: 'hash',\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            component: Login,\r\n            name: 'Login'\r\n        },\r\n        {\r\n            path: '/home',\r\n            component: Home,\r\n            name: 'Home',\r\n            children: [\r\n                {\r\n                    path: '/',\r\n                    component: PersonalSuggest,\r\n                    name: 'PersonalSuggest'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n        routes: [\r\n            {\r\n                path: '/home',\r\n                exact: true,\r\n                component: PersonalSuggest,\r\n            },\r\n            {\r\n                path: '/home/:id',\r\n                exact: true,\r\n                component: SubHome,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/playlist/:id',\r\n        exact: true,\r\n        component: PlaylistDetail,\r\n    },\r\n    {\r\n        path: '/personal/:id',\r\n        exact: true,\r\n        component: Test,\r\n    },\r\n]\r\n\r\nexport default routes;","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\PersonalSuggest\\PersonalSuggest.js",["425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, message, Button, Slider } from \"antd\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./PersonalSuggest.less\";\r\nimport PlayImg from \"../../images/music/play-active.png\";\r\nimport Carousel from \"../../widgets/Carousel/Carousel\";\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*}\r\n */\r\nexport default function PersonalSuggest(props) {\r\n  const [songsData, setSongsData] = useState([]); //推荐音乐\r\n  const [perPlaylists, setPerPlaylists] = useState([]); //推荐歌单数据\r\n  const [videoGroupList, setVideoGroupList] = useState([]); //视频标签列表数据\r\n  const [selGroupID, setSelGroupID] = useState(\"0\"); //选中的视频标签item ID\r\n  const [isSpreadGroupList, setIsSpreadGroupList] = useState(false); //是否展开视频标签列表\r\n  const [perMV, setPerMV] = useState([]); //获取推荐MV数据\r\n  const [allMV, setAllMV] = useState([]); //获取全部MV数据\r\n  const [newMV, setNewMV] = useState([]); //获取最新MV\r\n  const [priContent, setPricontent] = useState([]); //独家放送\r\n  const [priContentList, setPricontentList] = useState([]); //独家放送列表\r\n  const [bannerData, setBannerData] = useState([]); //轮播图数据\r\n\r\n  /**\r\n   * 获取推荐歌曲\r\n   * @returns\r\n   */\r\n  const getPersonlizedSongs = async () => {\r\n    let data = await HTTPUtils.personalized_newsong();\r\n    setSongsData(data.result);\r\n  };\r\n  /**\r\n   * 获取推荐歌单\r\n   * @param {limit: 获取数量, 默认30} obj\r\n   */\r\n  const getPersonlizedPlaylists = async (obj) => {\r\n    let data = await HTTPUtils.personalized(obj);\r\n    setPerPlaylists(data.result);\r\n  };\r\n  const getPersonlizedMV = async () => {\r\n    let data = await HTTPUtils.personalized_mv();\r\n    console.log(data);\r\n    setPerMV(data.result);\r\n  };\r\n  /**\r\n   * 获取独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontent = async () => {\r\n    let data = await HTTPUtils.personalized_privatecontent();\r\n    console.log(\"独家放送1111\");\r\n    console.log(data);\r\n    setPricontent(data.result);\r\n  };\r\n  /**\r\n   * 获取所有独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontentList = async () => {\r\n    let obj = {\r\n      limit: 19,\r\n    };\r\n    let data = await HTTPUtils.personalized_privatecontent_list(obj);\r\n    console.log(\"独家放送列表2222\");\r\n    console.log(data);\r\n    setPricontentList(data.result);\r\n  };\r\n  const getBanner = async () => {\r\n    let obj = {\r\n      type: 0,\r\n    };\r\n    let data = await HTTPUtils.banner(obj);\r\n    console.log(data);\r\n    if (data.code != 200) {\r\n      message.error(data.msg || \"轮播图数据出错\");\r\n      return;\r\n    }\r\n    let list = data.banners;\r\n    list.length = 3;\r\n    console.log(list);\r\n    setBannerData(list);\r\n  };\r\n  /**\r\n   * 页面加载时, 获取推荐系列数据, 只执行一次----------------------------------------|\r\n   */\r\n  useEffect(async () => {\r\n    await getPersonlizedSongs();\r\n    let obj = {\r\n      limit: 12,\r\n    };\r\n    await getPersonlizedPlaylists(obj);\r\n    await getVideoCatList();\r\n    await getplaylistCatlist();\r\n    await getPlaylistCat();\r\n    await getPersonlizedPrivatecontent();\r\n    await getPersonlizedPrivatecontentList();\r\n    await getBanner();\r\n    await getPersonlizedMV();\r\n  }, []);\r\n  /**\r\n   * 需要登录\r\n   * 获取视频系列接口-----------------------------------------------------------------\r\n   */\r\n  //接口---获取视频标签列表\r\n  const getVideoCatList = async () => {\r\n    let data = await HTTPUtils.video_group_list();\r\n    data.data.unshift({ id: \"0\", name: \"全部\" });\r\n    setSelGroupID(data.data[0].id);\r\n    setVideoGroupList(data.data);\r\n  };\r\n  //事件---视频标签item click点击事件\r\n  const selectVideoGroup = async (item) => {\r\n    setSelGroupID(item.id);\r\n    await getVideoGroup(item.id);\r\n  };\r\n  //事件---展开/关闭视频标签列表\r\n  const changeGroupListHeight = () => {\r\n    setIsSpreadGroupList(!isSpreadGroupList);\r\n  };\r\n  //接口---获取相应视频标签下视频列表\r\n  const getVideoGroup = async (id) => {\r\n    if (id == 0) {\r\n      return;\r\n    }\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    console.log(\"id id id\");\r\n    console.log(id);\r\n    let data = await HTTPUtils.video_group(obj);\r\n    console.log(\"视频\");\r\n    console.log(data);\r\n    // let data = await HTTPUtils.video_timeline_all();\r\n  };\r\n\r\n  /**\r\n   * 歌单系列接口--------------------------------------------||\r\n   */\r\n  /**\r\n   * 获取歌单分类列表\r\n   */\r\n  const getplaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    console.log(data);\r\n  };\r\n  const getPlaylistCat = async (obj) => {\r\n    let bb = {\r\n      cat: \"古风\",\r\n      limit: 10,\r\n    };\r\n    let data = await HTTPUtils.top_playlist(bb);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>personalsuggest</div>\r\n      <Carousel data={bannerData} />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"50px 0\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">最新音乐</p>\r\n          </div>\r\n          <div style={{ flex: 1 }}>\r\n            {songsData.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={`personSongsItem \r\n                                ${index == 0 && \"firstImg\"}\r\n                                ${index == 1 && \"secImg\"}\r\n                                ${index == 2 && \"thirdImg\"}\r\n                            `}\r\n                  key={item.id}\r\n                >\r\n                  <p style={{ width: 50 }}>{index}</p>\r\n                  <img src={item.picUrl + \"?param=200y200\"} />\r\n                  <div>\r\n                    {item.name +\r\n                      \" \" +\r\n                      \"-\" +\r\n                      \" \" +\r\n                      item.song.album.artists[0].name}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">推荐歌单</p>\r\n          </div>\r\n          <div className=\"playlist_suggest\">\r\n            {perPlaylists.map((item, index) => {\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"playlistItem min30PlaylistItem\"\r\n                  // onMouseOver={() => playlistOver(item.id, 1)}\r\n                  // onMouseOut={() => playlistOver(item.id, 2)}\r\n                >\r\n                  <div className=\"playlistItemContent\">\r\n                    <img\r\n                      className=\"playlistItemContentImg\"\r\n                      src={item.picUrl + \"?param=200y200\"}\r\n                    />\r\n                    <div className=\"playlistItemContentImgCon\">\r\n                      <img src={PlayImg} />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"playlistItemDes\">{item.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">视频标签列表</p>\r\n      </div>\r\n      <div\r\n        className={`videoGroupList\r\n                    ${isSpreadGroupList ? \"autoHeight\" : \"fixedHeight\"}\r\n                    `}\r\n      >\r\n        {videoGroupList.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={item.id}\r\n              className={`\r\n                                    videoGroupListItem \r\n                                    ${\r\n                                      item.id == selGroupID\r\n                                        ? \"videoGroupListItemActive\"\r\n                                        : null\r\n                                    }\r\n                                `}\r\n              onClick={() => selectVideoGroup(item)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        style={{ borderBottom: \"1px solid red\", cursor: \"pointer\" }}\r\n        onClick={changeGroupListHeight}\r\n      >\r\n        <p style={{ color: \"red\", textAlign: \"right\", padding: \"0 20px\" }}>\r\n          展开\r\n        </p>\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContent.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送列表</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContentList.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">推荐MV</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {perMV.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min20PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\SubHome\\SubHome.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"import React, { useState, useEffect,  } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PersonalSuggest from '../PersonalSuggest/PersonalSuggest'\r\nimport Playlist from '../Playlist/Playlist';\r\nimport Toplist from '../Toplist/Toplist';\r\nimport Artists from '../Artists/Artists';\r\nimport NewestSong from '../NewestSong/NewestSong';\r\nimport PlaylistDetail from '../Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Test/Test';\r\nimport MusicSlider from '../../MusicSlider/MusicSlider'\r\nimport MusicSliderComponent from '../../MusicSlider/MusicSliderComponent';\r\nimport ArtistDetail from '../Artists/ArtistDetail/ArtistDetail'\r\n\r\nexport default function SubHome(props) {\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n    })\r\n\r\n    return (\r\n        <div\r\n            style={{margin: '0 20px'}}\r\n        >\r\n            {\r\n                id == 0 ?\r\n                <PersonalSuggest/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 1 ?\r\n                <Playlist/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 2 ?\r\n                <Toplist/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 3?\r\n                <Artists/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id!= 0 && id != 1 && id !=2 && id != 3 ?\r\n                // <NewestSong/>\r\n                // <PlaylistDetail/>\r\n                // <Test/>\r\n                // <MusicSliderComponent/>\r\n                <MusicSlider/>\r\n                // <ArtistDetail/>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\Playlist.js",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479"],"import React, { useState, useEffect } from \"react\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./Playlist.less\";\r\nimport VipImg from \"../../images/Playlist/vip.png\"; //歌单item---vip图片\r\nimport HeaderImg from \"../../images/Playlist/header.png\"; //歌单item---头像图片\r\nimport PlayImg from \"../../images/Playlist/play.png\"; //歌单item---播放图片\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\"; //歌单item---hover时现实的播放图片\r\nimport LanguageImg from \"../../images/Playlist/language.png\"; //歌单标签下拉列表---语种图片\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction Playlist(props) {\r\n  const [allCatList, setAllCatList] = useState([]); //歌单分类\r\n  const [hotCatList, setHotCatList] = useState([]); //热门歌单分类\r\n  const [allPlaylist, setAllPlayList] = useState([]); //歌单(网友精选碟)\r\n  const [hgquaPlaylist, setHgquaPlaylist] = useState([]); //精品歌单\r\n\r\n  const [catlistHotActiveItem, setCatlistHotActiveItem] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n  }); //当前热门标签item.id---用于active class\r\n  const [expandIndex, setExpandIndex] = useState(-1); //歌单列表item expand\r\n  /**\r\n   * 歌单标签下拉列表数据\r\n   */\r\n  const [showDropCatlist, setShowDropCatlist] = useState(false); //是否显示歌单标签下拉列表\r\n  const [catlistActiveItem, setCatlistActiveItem] = useState({\r\n    id: 0,\r\n    name: \"全部\",\r\n  }); //当前点击item.id--用于active class\r\n\r\n  const playlistDetail = (item) => {\r\n    console.log(\"查看歌单详情\");\r\n    console.log(item)\r\n    console.log(props)\r\n    props.history.push('/playlist/'+item.id)\r\n  };\r\n  const playTheList = (e) => {\r\n    //阻止冒泡\r\n    e.stopPropagation();\r\n    console.log(\"播放歌单\");\r\n  };\r\n\r\n  /**\r\n   * 获取歌单标签列表\r\n   */\r\n  const getPlaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    let allData = [];\r\n    let cats = data.categories;\r\n    let subs = data.sub;\r\n    //为每个子标签加个id, 用于active class\r\n    subs.map((item, index) => {\r\n      item.id = index + 1;\r\n    });\r\n    //重组数据, 重组后结构为[{cat: {id, name}, sub: Array}]\r\n    Object.entries(cats).map((item, index) => {\r\n      let sinData = {};\r\n      let cat = {};\r\n      cat.id = item[0];\r\n      cat.val = item[1];\r\n      let newSub = subs.filter((s) => s.category == cat.id);\r\n      sinData.cat = cat;\r\n      sinData.sub = newSub;\r\n      allData.push(sinData);\r\n    });\r\n    //更新歌单列表\r\n    setAllCatList(allData);\r\n  };\r\n  /**\r\n   * 获取歌单热门标签列表\r\n   */\r\n  const getPlaylistHot = async () => {\r\n    let data = await HTTPUtils.playlist_hot();\r\n    setHotCatList(data.tags);\r\n  };\r\n  /**\r\n   * 获取对应标签下, 歌单列表; 默认全部\r\n   * @param {obj: Object} obj :标签信息\r\n   */\r\n  const getAllPlaylist = async (obj) => {\r\n    let data = await HTTPUtils.top_playlist(obj);\r\n    console.log(\"歌单数据\");\r\n    console.log(data);\r\n    setAllPlayList(data.playlists);\r\n  };\r\n\r\n  const getHGPlaylsit = async (item) => {\r\n    let obj = {\r\n      limit: 1,\r\n    };\r\n    if (item) {\r\n      obj.cat = item.name;\r\n    }\r\n    let data = await HTTPUtils.top_playlist_highquality(obj);\r\n    console.log(data);\r\n    setHgquaPlaylist(data.playlists);\r\n  };\r\n\r\n  /**\r\n   * 页面加载后调用, 只执行一次;\r\n   */\r\n  useEffect(async () => {\r\n    await getPlaylistCatlist();\r\n    await getPlaylistHot();\r\n    await getAllPlaylist();\r\n    await getHGPlaylsit();\r\n  }, []);\r\n\r\n  /**\r\n   * 初始化热门标签列表, 选中对应标签, 获取对应标签歌单列表\r\n   * @param {item: Object} item : 点击的item\r\n   */\r\n  const selectDropItem = async (item) => {\r\n    setCatlistActiveItem(item);\r\n    setCatlistHotActiveItem({ id: 0, name: \"\" });\r\n    let obj = {\r\n      cat: item.name,\r\n    };\r\n    // showAllCatlist();\r\n    await getAllPlaylist(obj);\r\n  };\r\n  /**\r\n   * 初始化所有标签列表, 选中对应热门标签, 获取对应标签歌单列表\r\n   * @param {item: Object} item: 热门标签active的item\r\n   */\r\n  const selectHotItem = async (item) => {\r\n    setCatlistHotActiveItem(item);\r\n    setCatlistActiveItem({ id: 0, name: \"全部\" });\r\n    let obj = {\r\n      cat: item.name,\r\n    };\r\n    await getAllPlaylist(obj);\r\n  };\r\n  /**\r\n   * 开启/关闭所有标签列表dropdown\r\n   */\r\n  const showAllCatlist = () => {\r\n    setShowDropCatlist(!showDropCatlist);\r\n  };\r\n\r\n  /**\r\n   * 当该item处于onmouseover事件中, 改变该item和当前行其他item的宽度, 通过expandindex计算\r\n   * @param {index: Number} index : 歌单列表item的index\r\n   */\r\n  const expandOver = (index) => {\r\n    setExpandIndex(index);\r\n  };\r\n  /**\r\n   * 当该item处于onmouseout事件中, 重置改变该item和当前行其他item的宽度, 设置expandindex为-1即可\r\n   * @param {index: Number} index : 歌单列表item的index\r\n   */\r\n  const expandOut = () => {\r\n    setExpandIndex(-1);\r\n  };\r\n  return (\r\n    <div className=\"allPl\">\r\n      <div className=\"allPlHeader\" style={{ position: \"relative\" }}>\r\n        <img\r\n          src={hgquaPlaylist.length > 0 ? hgquaPlaylist[0].coverImgUrl : \"\"}\r\n          className=\"allPlHeaderBackImg\"\r\n        />\r\n        <div className=\"allPlHeaderFront\">\r\n          <div className=\"allPlHeaderFrontLeft\">\r\n            <img\r\n              className=\"allPlHeaderFrontLeftImg\"\r\n              src={hgquaPlaylist.length > 0 ? hgquaPlaylist[0].coverImgUrl : \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"allPlHeaderFrontRight\">\r\n            <span className=\"allPlHeaderFrontRightTop\">精品歌单</span>\r\n            <p className=\"allPlHeaderFrontRightName\">\r\n              {hgquaPlaylist.length > 0 ? hgquaPlaylist[0].name : \"\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"allPlTags\">\r\n        <div className=\"allPlTagsSelRow\">\r\n          <div className=\"allPlTagsSel\" onClick={showAllCatlist}>\r\n            <span>{catlistActiveItem.name}</span>\r\n          </div>\r\n          {showDropCatlist ? (\r\n            <div className=\"allPlTagsSelDrop\">\r\n              <div className=\"allPlTagsSelDropHeader\">\r\n                <span\r\n                  className={`${\r\n                    catlistActiveItem.id == 0\r\n                      ? \"allPlTagsSelDropRowRightItemActive\"\r\n                      : \"\"\r\n                  }  allPlTagsSelDropHeaderTitle`}\r\n                  onClick={() => selectDropItem({ id: 0, name: \"全部\" })}\r\n                >\r\n                  全部歌单\r\n                </span>\r\n              </div>\r\n              {allCatList.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"allPlTagsSelDropRow\">\r\n                    <div\r\n                      key={index + \"_\" + item.cat.id}\r\n                      className=\"allPlTagsSelDropRowLeft\"\r\n                    >\r\n                      <img\r\n                        src={LanguageImg}\r\n                        style={{ width: 30, height: 30 }}\r\n                      />\r\n                      <span>{item.cat.val} </span>\r\n                    </div>\r\n                    <div className=\"allPlTagsSelDropRowRight\">\r\n                      {item.sub.map((zItem, zIndex) => {\r\n                        return (\r\n                          <p\r\n                            key={zItem.id}\r\n                            className={`${\r\n                              catlistActiveItem.id == zItem.id\r\n                                ? \"allPlTagsSelDropRowRightItemActive\"\r\n                                : \"\"\r\n                            } allPlTagsSelDropRowRightItem`}\r\n                            onClick={() => selectDropItem(zItem)}\r\n                          >\r\n                            {zItem.name}\r\n                          </p>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <ul className=\"allPlTagsHot\">\r\n          {hotCatList.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                className={`${\r\n                  catlistHotActiveItem.id == item.id\r\n                    ? \"allPlTagsHotItemActive\"\r\n                    : \"\"\r\n                } allPlTagsHotItem`}\r\n                onClick={() => selectHotItem(item.playlistTag)}\r\n              >\r\n                {item.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div style={{ padding: 20 }}>\r\n        {allPlaylist.map((item, index) => {\r\n          //Math.floor(expandIndex/5) == Math.floor(index/5)---是否是当前行, 因为默认一行有5个元素\r\n          //expandIndex == index : 是否是当前行, hover元素, 如果是当前元素, 加宽类expand; 如果不是, 缩小宽度类noexpand\r\n          return (\r\n            <div\r\n              key={item.id + \"-\" + index}\r\n              className={`${\r\n                Math.floor(expandIndex / 5) == Math.floor(index / 5)\r\n                  ? expandIndex == index\r\n                    ? \"expand\"\r\n                    : \"noexpand\"\r\n                  : \"\"\r\n              } allPlItem`}\r\n            >\r\n              <div\r\n                className=\"allPlItemImgContainer\"\r\n                onClick={() => playlistDetail(item)}\r\n                onMouseOver={() => expandOver(index)}\r\n                onMouseOut={expandOut}\r\n              >\r\n                <img\r\n                  src={item.coverImgUrl + \"?param=280y280\"}\r\n                  className=\"allPlItemImgConMain\"\r\n                />\r\n                <div className=\"allPlItemImgContainerTL\">\r\n                  <img src={PlayImg} className=\"deImg\" />\r\n                  <span>{item.playCount}</span>\r\n                </div>\r\n                <div className=\"allPlItemImgContainerLB\">\r\n                  <img src={HeaderImg} className=\"deImg\" />\r\n                  <span>{item.creator.nickname}</span>\r\n                  <img src={VipImg} className=\"deImg\" />\r\n                </div>\r\n                <div\r\n                  className=\"allPlItemImgContainerRB\"\r\n                  onClick={(e) => playTheList(e)}\r\n                >\r\n                  <img src={PlayHoverImg} className=\"rbImg\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"allPlItemDesc\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Playlist)","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Toplist\\Toplist.js",["480","481","482","483","484","485","486","487","488","489","490","491","492"],"import React, { useState, useEffect } from \"react\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./Toplist.less\";\r\nimport RightImg from \"../../images/Toplist/right.png\";\r\nimport PauseImg from \"../../images/Playlist/play.png\";\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\";\r\n\r\nexport default function Toplist(props) {\r\n  const [allToplist, setAllToplist] = useState([]); //所有排行榜数据\r\n  const [topFiveData, setTopFiveData] = useState([]); //要显示的top5数据, 以及每个排行榜的top5歌曲\r\n  /**\r\n   * 获取所有排行榜数据\r\n   */\r\n  const getAllToplist = async () => {\r\n    let data = await HTTPUtils.toplist();\r\n    let list = data.list;\r\n    setAllToplist(list);\r\n  };\r\n  /**\r\n   * 获取某个排行榜歌曲数据\r\n   * @param {NUMBER : STRING} id 排行榜id\r\n   * @returns \r\n   */\r\n  const getTopFiveData = async (id) => {\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    let data = await HTTPUtils.playlist_detail(obj);\r\n    return data.playlist;\r\n  };\r\n  //当获取所有排行榜数据, 只要前5个, 循环获取这5个排行榜的热门歌曲, 也只取前5首歌, 然后更新数据---依赖alltoplist\r\n  useEffect(async () => {\r\n    if (allToplist.length == 0) {\r\n      return;\r\n    }\r\n    let newList = JSON.parse(JSON.stringify(allToplist));\r\n    newList.length = 5;\r\n    let arr = [];\r\n    let i = 0;\r\n    while (i < 5) {\r\n      let data = await getTopFiveData(newList[i].id);\r\n      arr.push(data);\r\n      i++;\r\n    }\r\n    setTopFiveData(arr)\r\n  }, [allToplist]);\r\n  //页面加载时, 执行一次获取所有排行榜数据\r\n  useEffect(async () => {\r\n    await getAllToplist();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        className='topfive'\r\n      >\r\n        {topFiveData.map((item, index) => {\r\n            let sub = JSON.parse(JSON.stringify(item.tracks));\r\n            sub.length = 5;\r\n            \r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className='topfiveView'\r\n            >\r\n              <div \r\n                className='topfiveViewLeft'\r\n              >\r\n                <img\r\n                  className='topfiveViewLeftImg'\r\n                  src={item.coverImgUrl}\r\n                />\r\n              </div>\r\n              <div \r\n                className='topfiveViewRight'\r\n              >\r\n                <div>\r\n                  {sub.map((zItem, zIndex) => {\r\n                      let arts = [];\r\n                      zItem.ar && zItem.ar.map((z, i) => {\r\n                          arts.push(z.name)\r\n                      })\r\n                      let artStr = arts.join('/');\r\n                    return (\r\n                      <div\r\n                        key={zItem.id}\r\n                        tabIndex='1'\r\n                        className={`topFiveItem ${\r\n                          zIndex % 2 == 0 ? \"topFiveItemIndex\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <div>\r\n                          <span\r\n                            className={`${\r\n                              zIndex == 0 || zIndex == 1 || zIndex == 2\r\n                                ? \"txtRed\"\r\n                                : \"\"\r\n                            }`}\r\n                          >\r\n                            {zIndex}\r\n                          </span>\r\n                          <span style={{ marginLeft: 10 }}>{zItem.name}</span>\r\n                        </div>\r\n                        <div>\r\n                          <span>{artStr}</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div className='topfiveViewRightMore'>\r\n                  <span>查看全部</span>\r\n                  <img src={RightImg} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        className='toplistView'\r\n      >\r\n        {allToplist.map((item, index) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"toplistItem\">\r\n                <img className=\"toplistItemImg\" src={item.coverImgUrl} />\r\n                <div className=\"toplistItemRight\">\r\n                  <img className=\"toplistItemRightImg\" src={PauseImg} />\r\n                  <span>{Math.floor(item.playCount / 10000) + '万'}</span>\r\n                </div>\r\n                <div className=\"toplistItemCenter\">\r\n                  <img className=\"toplistItemCenterImg\" src={PlayHoverImg} />\r\n                </div>\r\n              </div>\r\n              <div style={{ fontSize: 18, padding: 10, textAlign: \"left\" }}>\r\n                <p>{item.name}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\Artists.js",["493","494","495","496","497","498","499","500","501","502","503","504","505"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Artists.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\n\r\nexport default function Artists(props) {\r\n  const artistsRef = useRef();\r\n  const [types, setTypes] = useState([\r\n    //歌手筛选分类\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"男歌手\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"女歌手\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"乐队组合\",\r\n    },\r\n  ]);\r\n  const [areas, setAreas] = useState([\r\n    //歌手筛选语种\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      name: \"欧美\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"日本\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"韩国\",\r\n    },\r\n    {\r\n      id: 0,\r\n      name: \"其他\",\r\n    },\r\n  ]);\r\n  const [cats, setCats] = useState([\r\n    //筛选名字首字母信息\r\n    { id: -1, name: \"热门\" },\r\n    { id: \"A\", name: \"A\" },\r\n    { id: \"B\", name: \"B\" },\r\n    { id: \"C\", name: \"C\" },\r\n    { id: \"D\", name: \"D\" },\r\n    { id: \"E\", name: \"E\" },\r\n    { id: \"F\", name: \"F\" },\r\n    { id: \"G\", name: \"G\" },\r\n    { id: \"H\", name: \"H\" },\r\n    { id: \"I\", name: \"I\" },\r\n    { id: \"J\", name: \"J\" },\r\n    { id: \"K\", name: \"K\" },\r\n    { id: \"L\", name: \"L\" },\r\n    { id: \"M\", name: \"M\" },\r\n    { id: \"N\", name: \"N\" },\r\n    { id: \"O\", name: \"O\" },\r\n    { id: \"P\", name: \"P\" },\r\n    { id: \"Q\", name: \"Q\" },\r\n    { id: \"R\", name: \"R\" },\r\n    { id: \"S\", name: \"S\" },\r\n    { id: \"T\", name: \"T\" },\r\n    { id: \"U\", name: \"U\" },\r\n    { id: \"V\", name: \"V\" },\r\n    { id: \"W\", name: \"W\" },\r\n    { id: \"X\", name: \"X\" },\r\n    { id: \"Y\", name: \"Y\" },\r\n    { id: \"Z\", name: \"Z\" },\r\n    { id: \"#\", name: \"#\" },\r\n  ]);\r\n  const [activeType, setActiveType] = useState(\"-1\"); //当前active的歌手分类\r\n  const [activeArea, setActiveArea] = useState(\"-1\"); //当前active的歌手语种\r\n  const [activeCat, setActiveCat] = useState(\"-1\"); //当前active的歌手筛选\r\n  const [artistsData, setArtistsData] = useState([]); //歌手分类列表数据\r\n\r\n  /**\r\n   * \r\n   * @param {Number} id : 所选对应类别item的id\r\n   * @param {Number} type : 1为语种; 2位性别和组合; 3为歌手首字母筛选\r\n   */\r\n  const selectCatItem = (id, type) => {\r\n    switch(type) {\r\n      case 1:\r\n        setActiveArea(id);\r\n        break;\r\n      case 2:\r\n        setActiveType(id);\r\n        break;\r\n      case 3:\r\n        setActiveCat(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getArtistsList = async (obj) => {\r\n    let data = await HTTPUtils.artist_list(obj);\r\n    setArtistsData(data.artists)\r\n  }\r\n  //依赖项语种, 男/女/组合, 每次点击都要重新获取数据\r\n  useEffect(async () => {\r\n    let obj = {\r\n      area: activeArea,\r\n      type: activeType,\r\n      initial: activeCat,\r\n    }\r\n    await getArtistsList(obj)\r\n  }, [activeArea, activeType, activeCat])\r\n  //依赖项歌手数据, 每个更新数据, 都要为每个img添加懒加载, \r\n  useEffect(() => {\r\n    let imgs = document.querySelectorAll('.artistsListItemImg');\r\n    imgs.forEach((item, index) => {\r\n      let dataSrc = item.getAttribute('data-imgurl');\r\n      if(item.src != dataSrc) {\r\n        let offsetTop = item.offsetTop;\r\n        let clientHeight = window.innerHeight;\r\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n        if(offsetTop < (clientHeight + scrollTop - 100)) {\r\n          item.src = dataSrc;\r\n        }\r\n      }\r\n    })\r\n  }, [artistsData])\r\n  window.onscroll = () => {\r\n    if(artistsRef) {\r\n      let imgs = document.querySelectorAll('.artistsListItemImg');\r\n      imgs.forEach((item, index) => {\r\n        let dataSrc = item.getAttribute('data-imgurl');\r\n        if(item.src != dataSrc) {\r\n          let offsetTop = item.offsetTop;\r\n          let clientHeight = window.innerHeight;\r\n          let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n          if(offsetTop < (clientHeight + scrollTop - 100)) {\r\n            item.src = dataSrc;\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className='artists'\r\n      ref={artistsRef}\r\n    >\r\n      <div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">语种: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {areas.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeArea == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 1)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= areas.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">分类: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {types.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeType == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 2)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= types.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">筛选: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {cats.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    key={item.id}\r\n                    className={`${\r\n                      activeCat == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 3)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= cats.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='artistsList'\r\n      >\r\n        {\r\n          artistsData.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={item.id+'_'+index}\r\n                className='artistsListItem'\r\n              >\r\n                <div className='artistsListItemImgCon'>\r\n                  <img\r\n                    className='artistsListItemImg'\r\n                    src=''\r\n                    data-imgurl={item.picUrl+'?param=280y280'}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p className='artistsListItemName'>\r\n                    {item.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\NewestSong\\NewestSong.js",["506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./NewestSong.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport PlayActiveImg from \"../../images/music/play-active.png\";\r\nimport SubImg from \"../../images/NewestSong/sub.png\";\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\";\r\n\r\nconst getDate = () => {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let obj = {\r\n    year,\r\n    month,\r\n  };\r\n  return obj;\r\n};\r\nexport default function NewestSong(props) {\r\n  const [activeTab, setActiveTab] = useState(1); //当前选中的tab; 1为新歌速递; 2位新碟上架\r\n  const [areaCat, setAreaCat] = useState([\r\n    {\r\n      id: 0,\r\n      value: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      value: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      value: \"欧美\",\r\n    },\r\n    {\r\n      id: 16,\r\n      value: \"韩国\",\r\n    },\r\n    {\r\n      id: 8,\r\n      value: \"日本\",\r\n    },\r\n  ]);\r\n  const [activeCat, setActiveCat] = useState(0); //当前active的area type\r\n  const [paramsDate, setParamsDate] = useState({\r\n    year: getDate().year,\r\n    month: getDate().month,\r\n  }); //请求新碟上架数据所需要的参数year和month\r\n  const [temMonthData, setTemMonthData] = useState({}); //存储每次数据请求返回的月数据monthData;\r\n  const [allData, setAllData] = useState([]); //所有新碟上架数据\r\n  /**\r\n   *\r\n   * @param {Number} tab : 选择的tab; 1为新歌速递; 2位新碟上架\r\n   */\r\n  const selectTab = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  /**\r\n   *\r\n   * @param {Number} cat :选择的地区;\r\n   */\r\n  const selectCat = (cat) => {\r\n    setActiveCat(cat);\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} item : 新歌速递每个item的数据\r\n   * @returns item的元素element\r\n   */\r\n  const SongsListItem = (item) => {\r\n    return (\r\n      <div tabIndex=\"1\" className=\"songsListItem\">\r\n        <div style={{ flex: 2 }} className=\"padItem lightColorItem centerItem\">\r\n          01\r\n        </div>\r\n        <div\r\n          style={{ flex: 3, position: \"relative\" }}\r\n          className=\"padItem centerItem \"\r\n        >\r\n          <img\r\n            className=\"itemImg\"\r\n            src=\"http://p4.music.126.net/slF9RoIs27y3dR73tkmmEg==/109951165599739964.jpg\"\r\n          />\r\n          <img className=\"centerImg\" src={PlayHoverImg} />\r\n        </div>\r\n        <div style={{ flex: 16 }} className=\"padItem leftItem\">\r\n          Run\r\n        </div>\r\n        <div style={{ flex: 6 }} className=\"padItem leftItem colorItem\">\r\n          OneRepublic\r\n        </div>\r\n        <div style={{ flex: 8 }} className=\"padItem leftItem colorItem\">\r\n          Run\r\n        </div>\r\n        <div style={{ flex: 2 }} className=\"padItem centerItem colorItem\">\r\n          02:49\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} data : 生成指定结构的数据{title: String, year: String, month: String, week: Boolean, list: Array}\r\n   */\r\n  const geneCorStucData = async (data) => {\r\n    //如果是最新数据, 则有weekData数据,\r\n    let tem = data ? data : temMonthData;\r\n    let newTemData = JSON.parse(JSON.stringify(tem));\r\n    let newAllData = JSON.parse(JSON.stringify(allData));\r\n    let isNewest = newTemData.hasOwnProperty(\"weekData\");\r\n    let newData = [];\r\n    let obj = {};\r\n    if (isNewest) {\r\n      if (newAllData.length == 0) {\r\n        obj.title = \"本周新碟\";\r\n        obj.week = true;\r\n        obj.year = paramsDate.year;\r\n        obj.month = paramsDate.month;\r\n        obj.list = [];\r\n        obj.list = newTemData.weekData.splice(0, 20);\r\n        console.log(\"第一次加载\");\r\n        console.log(obj);\r\n        newAllData.push(obj);\r\n      } else {\r\n        if (newAllData[newAllData.length - 1].week) {\r\n          if (newTemData.weekData.length != 0) {\r\n            newAllData[newAllData.length - 1].list = newAllData[\r\n              newAllData.length - 1\r\n            ].list.concat(newTemData.weekData.splice(0, 20));\r\n          } else {\r\n            obj.title = paramsDate.year + \"-\" + paramsDate.month;\r\n            obj.week = false;\r\n            obj.year = paramsDate.year;\r\n            obj.month = paramsDate.month;\r\n            obj.list = [];\r\n            obj.list = newTemData.monthData.splice(0, 20);\r\n            newAllData.push(obj);\r\n          }\r\n        } else {\r\n          if (newTemData.monthData.length != 0) {\r\n            newAllData[newAllData.length - 1].list = newAllData[\r\n              newAllData.length - 1\r\n            ].list.concat(newTemData.monthData.splice(0, 20));\r\n          } else {\r\n            let params = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            let p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n            setParamsDate(p);\r\n            getTopAlbum(params);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      console.log(paramsDate)\r\n      if (\r\n        newAllData[newAllData.length - 1]?.year == paramsDate.year &&\r\n        newAllData[newAllData.length - 1]?.month == paramsDate.month\r\n      ) {\r\n        if (newTemData.monthData.length != 0) {\r\n          newAllData[newAllData.length - 1].list = newAllData[\r\n            newAllData.length - 1\r\n          ].list.concat(newTemData.monthData.splice(0, 20));\r\n        } else {\r\n          let params = {};\r\n          let p = {};\r\n          if(parseInt(paramsDate.month > 1)) {\r\n            params = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n          }else {\r\n            params = {\r\n              year: (parseInt(paramsDate.year)-1).toString,\r\n              month: '12',\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n          }\r\n          setParamsDate(p);\r\n          getTopAlbum(params);\r\n        }\r\n      } else {\r\n        obj.title = paramsDate.year + \"-\" + paramsDate.month;\r\n        obj.week = false;\r\n        obj.year = paramsDate.year;\r\n        obj.month = paramsDate.month;\r\n        obj.list = [];\r\n        obj.list = newTemData.monthData?.splice(0, 20);\r\n        newAllData.push(obj);\r\n      }\r\n    }\r\n    setTemMonthData(newTemData);\r\n    setAllData(newAllData);\r\n    let intersectionObserver = new IntersectionObserver(function(entries) {\r\n      entries.forEach((item, index) => {\r\n        if(item.intersectionRatio > 0) {\r\n          let realUrl = item.target.getAttribute('data-imgurl');\r\n          let temUrl = item.target.src;\r\n          if(temUrl != realUrl) {\r\n            realUrl = realUrl +'?param=140y140';\r\n            item.target.setAttribute('src', realUrl)\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let eles = document.querySelectorAll('#pp');\r\n    eles.forEach((item, index) => {\r\n      intersectionObserver.observe(item)\r\n    })\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} params : 请求新碟数据所需要的参数{limit, type, area, year, month, offset}\r\n   */\r\n  const getTopAlbum = async (params) => {\r\n    let data = await HTTPUtils.top_album(params);\r\n    geneCorStucData(data);\r\n    // setTemMonthData(data);\r\n    // setTemMonthData(async (x) => {\r\n    //   await geneCorStucData(data);\r\n    // })\r\n    // let obj = {a: 1};\r\n    // console.log(data)\r\n    // setTemMonthData(data);\r\n    // await setTemMonthData((x) => {\r\n    //   console.log('临时数据')\r\n    //   console.log(x)\r\n    //   return x;\r\n    // })\r\n    // console.log('444444444444444')\r\n    // await console.log(temMonthData)\r\n  };\r\n  /**\r\n   *\r\n   * @returns 返回新碟上架请求参数area\r\n   */\r\n  const getAlbumArea = () => {\r\n    let val = \"\";\r\n    switch (activeCat) {\r\n      case 0:\r\n        val = \"ALL\";\r\n        break;\r\n      case 7:\r\n        val = \"ZH\";\r\n        break;\r\n      case 96:\r\n        val = \"EA\";\r\n        break;\r\n      case 16:\r\n        val = \"KR\";\r\n        break;\r\n      case 8:\r\n        val = \"JP\";\r\n        break;\r\n      default:\r\n        val = \"ALL\";\r\n        break;\r\n    }\r\n    return val;\r\n  };\r\n  /**\r\n   * 依赖项paramsDate, 每次变化都要重新获取新碟数据(第一次请求或者获取上一月新碟上架数据)\r\n   */\r\n  useEffect(async () => {\r\n    let params = JSON.parse(JSON.stringify(paramsDate));\r\n    params.type = \"new\";\r\n    params.area = getAlbumArea();\r\n    // await getTopAlbum(params)\r\n  }, [paramsDate]);\r\n  /**\r\n   * 依赖项activeCat, 每次变化, 都要将请求参数paramsDate中的year和month更新成最新年月\r\n   */\r\n  useEffect(() => {\r\n    let obj = getDate();\r\n    setParamsDate(obj);\r\n  }, [activeCat]);\r\n  /**\r\n   * 页面加载完成后, 请求数据, 只执行一次\r\n   */\r\n  useEffect(async () => {\r\n    let intersectionObserver = new IntersectionObserver(function(entries) {\r\n      entries.forEach((item, index) => {\r\n        if(item.intersectionRatio > 0) {\r\n          let realUrl = item.target.getAttribute('data-imgurl');\r\n          let temUrl = item.target.src;\r\n          if(temUrl != realUrl) {\r\n            realUrl = realUrl +'?param=280y280';\r\n            item.target.setAttribute('src', realUrl)\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let eles = document.querySelectorAll('#pp');\r\n    eles.forEach((item, index) => {\r\n      intersectionObserver.observe(item)\r\n    })\r\n    let params = {\r\n      limit: \"10\",\r\n      area: \"ALL\",\r\n      type: \"new\",\r\n      year: \"2021\",\r\n      month: \"5\",\r\n    };\r\n    await getTopAlbum(params);\r\n  }, []);\r\n  // window.onscroll = () => {\r\n  //   console.log('滚动 滚动')\r\n  //   let eles = document.querySelectorAll(\"#ele\");\r\n  //   let inh = window.innerHeight;\r\n  //   let sct = document.documentElement.scrollTop || document.body.scrollTop;\r\n  //   // console.log('距离顶部, ', top);\r\n  //   // console.log('可视窗口高度, ', inh);\r\n  //   // console.log('滚动距离, ', sct)\r\n  //   // console.log(eles[0].querySelectorAll('#pp')[0].getAttribute('src'))\r\n  //   // let ele\r\n  //   eles.forEach((ele, index) => {\r\n  //     let top = ele.offsetTop;\r\n  //     let pp = ele.querySelectorAll(\"#pp\")[0];\r\n  //     // console.log(pp)\r\n  //     // console.log(pp.style.src)\r\n  //     // console.log(pp.style['data-imgurl'])\r\n  //     console.log(pp.src)\r\n  //     if (ele.offsetTop < (sct + inh) && (top+350)  > sct) {\r\n  //       if(pp.src != pp.getAttribute('data-imgurl')) {\r\n  //         console.log(pp.getAttribute('data-imgurl'))\r\n  //         pp.src = pp.getAttribute('data-imgurl');\r\n  //       }\r\n  //       // console.log(\"可视区域之内\");\r\n  //       // pp.style.display = \"block\";\r\n  //     } else {\r\n  //       // console.log(\"可视范围以外\");\r\n  //       // pp.style.display = \"none\";\r\n  //     }\r\n  //   })\r\n  // };\r\n  // window.onscroll = () => {\r\n  //   console.log('滚动 滚动')\r\n  // }\r\n  const throttle = (func, delay) => {\r\n    let isValid = false;\r\n    return function () {\r\n      if (isValid) {\r\n        return false;\r\n      }\r\n      isValid = true;\r\n      let timer = setTimeout(() => {\r\n        func();\r\n        isValid = false;\r\n      }, delay);\r\n    };\r\n  };\r\n  const doSomething = () => {\r\n    let scrH =\r\n      document.documentElement.scrollHeight || document.body.scrollHeight;\r\n    let cliH =\r\n      document.documentElement.clientHeight || document.body.clientHeight;\r\n    let scrTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n    if (scrTop + 1000 > scrH - cliH) {\r\n      console.log(\"将要到达底部\");\r\n      geneCorStucData();\r\n    }\r\n  };\r\n  window.onscroll = throttle(doSomething, 500);\r\n  return (\r\n    <div className=\"newestSong\">\r\n      <div className=\"newestSongTabs\">\r\n        <span className=\"newestSongTabsCon\">\r\n          <span\r\n            className={`newestSongTabsConTab ${\r\n              activeTab == 1 ? \"newestSongTabsConTabActive\" : \"\"\r\n            } `}\r\n            onClick={() => selectTab(1)}\r\n          >\r\n            新歌速递\r\n          </span>\r\n          <span\r\n            className={`newestSongTabsConTab ${\r\n              activeTab == 2 ? \"newestSongTabsConTabActive\" : \"\"\r\n            } `}\r\n            onClick={() => selectTab(2)}\r\n          >\r\n            新碟商家\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"newestSongArea\">\r\n        <div className=\"newestSongAreaLeft\">\r\n          {areaCat.map((item, index) => {\r\n            return (\r\n              <span\r\n                key={item.id}\r\n                className={`newestSongAreaLeftItem ${\r\n                  item.id == activeCat ? \"newestSongAreaLeftItemActive\" : \"\"\r\n                }`}\r\n                onClick={() => selectCat(item.id)}\r\n              >\r\n                {item.value}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"newestSongAreaRight\">\r\n          <span className=\"newestSongAreaRightItem newestSongAreaRightItemRed\">\r\n            <img className=\"newestSongAreaRightItemImg\" src={PlayActiveImg} />\r\n            <span>播放全部</span>\r\n          </span>\r\n          <span className=\"newestSongAreaRightItem newestSongAreaRightItemBor\">\r\n            <img className=\"newestSongAreaRightItemImg\" src={SubImg} />\r\n            <span>收藏全部</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"songsList\">\r\n        {allData.map((item, index) => {\r\n          return (\r\n            <div className='songsListNewItem' key={index}>\r\n              <div\r\n                className='songsListNewItemTitleCon'\r\n                >\r\n                <div\r\n                  className='songsListNewItemTitleDiv'\r\n                >\r\n                  <p \r\n                  className='songsListNewItemTitleDivTitle'\r\n                  >\r\n                    {item.title}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className='songsListNewItemRight'\r\n              >\r\n                <div\r\n                  className='songsListNewItemRightCon'\r\n                >\r\n                  {item.list && item.list.map((zItem, zIndex) => {\r\n                    return (\r\n                      <div id=\"ele\" className='songsListNewItemRightItem' key={zItem.id+'-'+zIndex}>\r\n                        <div\r\n                          className='songsListNewItemRightItemImgCon'\r\n                        >\r\n                          <img\r\n                            id=\"pp\"\r\n                            className='songsListNewItemRightItemImgSrc'\r\n                            src='https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2879430259,1145403574&fm=26&gp=0.jpg'\r\n                            data-imgurl={zItem.picUrl}\r\n                          />\r\n                          <img\r\n                            className='songsListNewItemRightItemImgStatic'\r\n                            src={PlayHoverImg}\r\n                          />\r\n                        </div>\r\n                        <div className='songsListNewItemRightItemDescCon'>\r\n                          <p className='songsListNewItemRightItemDescName'>\r\n                            {zItem.name}\r\n                          </p>\r\n                          <p className='songsListNewItemRightItemDescArtist'>\r\n                            {zItem.artist.name}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n           );\r\n        })} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Test\\Test.js",["531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router';\r\nimport { Cookies } from \"../../Utils\";\r\nimport \"./Test.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PlayNoActivePng from \"@/images/music/play-no-active.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport GenderMail from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport AddWhite from \"@/images/Playlist/addWhite.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { exchangeTime, exchagneDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nfunction Test(props) {\r\n  //用户id, 创建时间信息\r\n  const [account, setAccount] = useState({});\r\n  //用户详细信息\r\n  const [profile, setProfile] = useState({});\r\n  //用户等级信息\r\n  const [userLV, setUserLV] = useState({});\r\n  //用户各种收藏信息\r\n  const [userSubs, setUserSubs] = useState({});\r\n  //用户关注列表总数\r\n  const [userFollowsCount, setUserFollowsCount] = useState(0);\r\n  //用户关注列表数据\r\n  const [userFollowsData, setUserFollowsData] = useState([]);\r\n  //用户粉丝列表总数\r\n  const [userFollowedsCount, setUserFollowedsCount] = useState(0);\r\n  //用户粉丝列表数据\r\n  const [userFollowedsData, setUserFollowedsData] = useState([]);\r\n  //用户动态列表总数\r\n  const [userEventCount, setUserEventCount] = useState(0);\r\n  //用户动态列表数\r\n  const [userEvents, setUserEvents] = useState([]);\r\n  //用户创建的歌单\r\n  const [userCreatePlaylists, setUserCreatePlaylists] = useState([]);\r\n  //用户收藏的歌单\r\n  const [userSubPlaylists, setUserSubPlaylists] = useState([]);\r\n\r\n  //获取用户账户信息\r\n  const getUserAccount = async () => {\r\n    let data = await HTTPUtils.user_account();\r\n    setAccount(data.account);\r\n    setProfile(data.profile);\r\n  };\r\n  //获取用户等级\r\n  const getUserLV = async () => {\r\n    let data = await HTTPUtils.user_level();\r\n    setUserLV(data.data);\r\n  };\r\n  //获取用户信息, 歌单, 收藏, mv, dj数量\r\n  const getUserSubcount = async () => {\r\n    let data = await HTTPUtils.user_subcount();\r\n    setUserSubs(data);\r\n  };\r\n  //获取用户关注列表\r\n  const getUserFollows = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_follows(params);\r\n    setUserFollowsCount(data.follow?.length || 0);\r\n    setUserFollowsData(data.follow);\r\n  };\r\n  //获取用户粉丝列表\r\n  const getUserFolloweds = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_followeds(params);\r\n    setUserFollowedsCount(data.size);\r\n    setUserFollowedsData(data.followeds);\r\n  };\r\n  //获取用户动态列表\r\n  const getUserEvent = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_event(params);\r\n    setUserEventCount(data.size);\r\n  };\r\n  //获取用户歌单\r\n  const getUserPlaylists = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_playlist(params);\r\n    let createPlaylists = data.playlist.filter(\r\n      (item) => item.subscribed == false\r\n    );\r\n    let subPlaylists = data.playlist.filter((item) => item.subscribed == true);\r\n    setUserCreatePlaylists(createPlaylists);\r\n    setUserSubPlaylists(subPlaylists);\r\n  };\r\n  //上传图片\r\n  const headerPictureChange = async (props) => {\r\n    console.log('图片')\r\n    console.log(props)\r\n    let file = props.target.files[0];\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n      let url = e.target.result;\r\n      let profileCopy = JSON.parse(JSON.stringify(profile));\r\n      profileCopy.avatarUrl = url;\r\n      setProfile(profileCopy)\r\n    }\r\n    fileReader.readAsDataURL(file)\r\n  }\r\n  //关注/取消关注\r\n  const followsUser = async (userId, followed) => {\r\n    let params = {\r\n      userId,\r\n    };\r\n    params.t = followed ? 0 : 1;\r\n    let data = await HTTPUtils.follow(params);\r\n  };\r\n  //事件--进入歌单详情\r\n  const navigateDetail = (item) => {\r\n    props.history.push('/playlist/'+item.id)\r\n  }\r\n  //事件--进入个人中心\r\n  const navigatePersonalCenter = (item) => {\r\n    console.log(item)\r\n    props.history.push('/personal/'+item.userId)\r\n  }\r\n  //粉丝列表/关注列表item\r\n  const FocusListItem = ({ data }) => {\r\n    return (\r\n      <div className=\"focus-list-item\" onClick={() => navigatePersonalCenter(data)}>\r\n        <div className=\"focus-list-item-image-con\">\r\n          <img\r\n            src={data.avatarUrl + \"?param=120y120\"}\r\n            alt=\"http://p2.music.126.net/vkAMXteRw5GHV0VNFoNxrA==/109951164751196732.jpg?param=120y120\"\r\n            className=\"focus-list-item-image\"\r\n          />\r\n        </div>\r\n        <div className=\"focus-list-item-detail\">\r\n          <ul className=\"focus-list-name-gender\">\r\n            <li>{data.nickname}</li>\r\n            <li>\r\n              <img\r\n                src={data.gender == \"0\" ? GenderFemale : GenderMail}\r\n                style={{\r\n                  width: 30,\r\n                  height: 30,\r\n                  objectFit: \"cover\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <ul className=\"focus-list-all-count\">\r\n            <li>动态 {data.eventCount}</li>\r\n            <li>关注 {data.follows}</li>\r\n            <li>粉丝 {data.followeds}</li>\r\n          </ul>\r\n          <p className=\"focus-list-desc\">{data.signature}</p>\r\n        </div>\r\n        <div className=\"focus-list-item-btn\">\r\n          <div className=\"btn-container\">\r\n            <button\r\n              className=\"btn-define\"\r\n              onClick={() => followsUser(data.userId, data.followed)}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  height: \"100%\",\r\n                  lineHeight: \"40px\",\r\n                }}\r\n              >\r\n                <span style={{ float: \"left\" }}>\r\n                  <img\r\n                    src={AddWhite}\r\n                    style={{\r\n                      width: 30,\r\n                      height: 30,\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span style={{ float: \"left\" }}>\r\n                  {data.followed ? \"已关注\" : \"关注\"}\r\n                </span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //歌单列表item\r\n  const PlaylistItem = ({ data }) => {\r\n    return (\r\n      <div className=\"my-create-playlist-item\" onClick={() => navigateDetail(data)}>\r\n        <div>\r\n          <div className=\"my-create-playlist-item-main\">\r\n            <img\r\n              src={data.coverImgUrl + \"?param=250y250\"}\r\n              alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=250y250\"\r\n              className=\"item-main-image\"\r\n            />\r\n            <ul className=\"item-main-desc-row\">\r\n              <li className=\"item-main-desc-count\">{data.playCount}</li>\r\n              <li className=\"item-main-desc-play\">\r\n                <img\r\n                  src={PlayNoActivePng}\r\n                  style={{\r\n                    width: 15,\r\n                    height: 15,\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <p className=\"my-create-playlist-item-name\">{data.name}</p>\r\n      </div>\r\n    );\r\n  };\r\n  //有了用户信息后, 获取用户的动态, 关注, 粉丝\r\n  useEffect(async () => {\r\n    await getUserEvent();\r\n    await getUserFollows();\r\n    await getUserFolloweds();\r\n    await getUserPlaylists();\r\n  }, [profile]);\r\n  useEffect(async () => {\r\n    await getUserAccount();\r\n    await getUserLV();\r\n    await getUserSubcount();\r\n  }, []);\r\n  return (\r\n    <div className=\"personal-center\">\r\n      <div className=\"personal-center-header\">\r\n        <div className=\"header-head-picture\">\r\n          <img\r\n            src={profile.avatarUrl}\r\n            // src={profile.avatarUrl + \"?param=180y180\"}\r\n            alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=180y180\"\r\n            className=\"head-picture-img\"\r\n          />\r\n          <div className='header-head-hover'>\r\n            <input type='file' onChange={headerPictureChange}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-detail-desc\">\r\n          <div className=\"header-desc-name-lv\">\r\n            <span className=\"desc-name\">{profile.nickname}</span>\r\n            <span className=\"desc-lv\">LV.{userLV.level}</span>\r\n            <span className=\"desc-edit\">编辑个人资料</span>\r\n          </div>\r\n          <ul className=\"header-desc-all-count\">\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userEventCount}</p>\r\n              <p className=\"all-count-item-cat\">动态</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowsCount}</p>\r\n              <p className=\"all-count-item-cat\">关注</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowedsCount}</p>\r\n              <p className=\"all-count-item-cat\">粉丝</p>\r\n            </li>\r\n          </ul>\r\n          <p className=\"header-desc-region\">所在地区: 河北石家庄市</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"listen-rank\">\r\n        <ul className=\"listen-rank-header\">\r\n          <li className=\"listen-rank-header-item\">\r\n            <span className=\"fontsize20\">听歌排行</span>\r\n            <span style={{ marginLeft: 10 }}>累计听歌20首</span>\r\n          </li>\r\n          <li className=\"listen-rank-header-item header-right-item\">\r\n            <span\r\n              className=\"right-item-active\"\r\n              style={{\r\n                marginRight: 10,\r\n                padding: \"0 10px\",\r\n                borderRight: \"1px solid #aaa\",\r\n              }}\r\n            >\r\n              最近一周\r\n            </span>\r\n            <span className=\"right-item-active\">所有时间</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"listen-rank-list\">\r\n          {[1, 2, 3, 4, 5].map((item, index) => {\r\n            return (\r\n              <ul className=\"listen-rank-list-row\" key={index}>\r\n                <li className=\"listen-rank-list-item flex3\">\r\n                  <ul>\r\n                    <li className=\"listen-rank-list-item\">\r\n                      {index < 10 ? \"0\" + (index + 1) : index}\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">\r\n                      <img\r\n                        src={PlayNoActivePng}\r\n                        style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n                      />\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10 boldTxt\">\r\n                      不只是想你\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">梦然</li>\r\n                  </ul>\r\n                </li>\r\n                <li\r\n                  className=\"listen-rank-list-item flex1\"\r\n                  style={{ borderRadius: 5, position: \"relative\" }}\r\n                >\r\n                  <div className=\"bgblue\" style={{ height: \"100%\" }}></div>\r\n                  <span className=\"list-item-count\">6次</span>\r\n                </li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n        <p className=\"list-rank-look-all\">查看全部>></p>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我创建的歌单\r\n            {userSubs.createdPlaylistCount && userSubs.createdPlaylistCount > 0\r\n              ? `(${userSubs.createdPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userCreatePlaylists.length > 0 &&\r\n              userCreatePlaylists.map((item, index) => {\r\n                return (\r\n                  <PlaylistItem key={item.id} data={item}/>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我收藏的歌单\r\n            {userSubs.subPlaylistCount && userSubs.subPlaylistCount > 0\r\n              ? `(${userSubs.subPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userSubPlaylists.length > 0 &&\r\n              userSubPlaylists.map((item, index) => {\r\n                return <PlaylistItem key={item.id} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">关注列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowsData &&\r\n              userFollowsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">粉丝列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowedsData &&\r\n              userFollowedsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Test)","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\ExchangeTime.js",["561"],"/**\r\n * \r\n * @param {String} time : 传过来的毫秒数\r\n * @param {Number} type : undefined返回2021-05-12 07:25:21; 1返回2021-05-12\r\n * @returns 几秒前/几分钟前/几小时前/具体时间\r\n */\r\nfunction exchangeTime(time, type) {\r\n  let differTime = Date.now() - time;\r\n  let onesecTime = 1000;\r\n  let oneminTime = 60*1000;\r\n  let onehourTime = 3600000;\r\n  let onedayTime = 60*60*24*1000;\r\n  let title = ''\r\n  if(differTime<= oneminTime) {\r\n      title = Math.floor(differTime/onesecTime) + '秒前';\r\n  }else if(differTime > oneminTime && differTime<onehourTime) {\r\n      title = Math.floor(differTime/oneminTime) + '分钟前';\r\n  }else if(differTime >= onehourTime && differTime < onedayTime) {\r\n      title = Math.floor(differTime/onehourTime) + '小时前';\r\n  }else {\r\n      //具体时间\r\n      let date = new Date(time);\r\n      let year = date.getFullYear();\r\n      let month = date.getMonth() + 1;\r\n      month = month < 10 ? '0'+month : month;\r\n      let day = date.getDate();\r\n      day = day < 10 ? '0'+day : day;\r\n      let hour = date.getHours();\r\n      hour = hour < 10 ? '0'+hour : hour;\r\n      let min = date.getMinutes();\r\n      min = min < 10 ? '0'+min : min;\r\n      let sec = date.getSeconds();\r\n      sec = sec < 10 ? '0'+sec : sec;\r\n      title = !type ?  year + ' - ' + month + ' - ' + day + ' ' + hour + ' : ' + min + ' : ' +sec : year + ' - ' + month + ' - ' + day;\r\n  }\r\n  return title;\r\n}\r\n/**\r\n * 返回音乐/视频/MV时间duration\r\n * @param {Number | String} time : 例如212000毫秒数\r\n * @returns 05:36:25 || 05:36\r\n */\r\nfunction exchagneDuration(time) {\r\n    time = parseInt(time);\r\n    let dur = 212000;\r\n    time = time / 1000;\r\n    if(time < 1){\r\n        return '小于1s';\r\n    }\r\n    if(time > 24*60*60) {\r\n        return '大于一天'\r\n    }\r\n    let h,\r\n        m,\r\n        sec,\r\n        allMin;\r\n    allMin = Math.floor(time / 60);\r\n    sec = time - allMin*60;\r\n    sec = sec < 10 ? '0'+sec : sec;\r\n    h = Math.floor(time / 3600);\r\n    m = h < 1 ? Math.floor(time / 60) : (time - h*3600 - sec)/60;\r\n    m = m<10 ? '0'+m : m;\r\n    let title = '';\r\n    title = h < 1 ? m + ':' + sec : h+':'+m+':'+sec;\r\n    return title;\r\n}\r\nexport { exchangeTime, exchagneDuration };","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\index.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js",["562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"import React, { useState, useEffect,  } from \"react\";\r\nimport { Input } from 'antd'\r\nimport { useParams } from 'react-router-dom'\r\nimport \"./PlaylistDetail.less\";\r\nimport HTTPUtils from \"../../../HTTPUtils/HTTPUtils\";\r\nimport { exchangeTime } from \"@/Utils\";\r\n// import {AddWhitePng, PlayPng, SharePng, DownloadPng, DownPng, UpPng, ShoucangPng, NoShoucangPng, NoZanPng, ZanPng, ShareRound, CommentRoundPng, GenderMale, GenderFemale,  } from '../../../images/Playlist'\r\nimport AddPng from \"@/images/music/musicListItem/no-add.png\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport AddWhitePng from \"@/images/Playlist/addWhite.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport SharePng from \"@/images/Playlist/share.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport ShoucangPng from \"@/images/Playlist/shoucang.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ZanPng from \"@/images/Playlist/zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport GenderMale from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport MyTextarea from './MyTextarea';\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction PlaylistDetail(props) {\r\n  //歌单id: 6781111608\r\n  const {id} = useParams()\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //数据---歌单详情--评论--评论输入框val\r\n  const [commentVal, setCommentVal] = useState(\"\");\r\n  //数据---歌单tab index  1:歌曲列表; 2: 评论列表; 3: 收藏列表\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  const [basicData, setBasicData] = useState({}); //歌单基本信息(封面, 描述, 创建者etc)\r\n  const [songsData, setSongsData] = useState([]); //获取歌单中的歌曲列表\r\n  const [subscribersData, setSubscriberData] = useState([]); //收藏者数据\r\n  const [hotCommentData, setHotCommentData] = useState([]); //精彩评论数据\r\n  const [comments, setComments] = useState([]); //最新评论数据\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n\r\n  //事件---歌单列表相关数据\r\n  const getPlaylistDetail = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n      offset: '100'\r\n    };\r\n    let data = await HTTPUtils.playlist_detail(params);\r\n    setBasicData(data?.playlist);\r\n    setSongsData(data?.playlist?.tracks);\r\n    setSubscriberData(data?.playlist?.subscribers);\r\n  };\r\n  //事件--歌单评论数据\r\n  const getPlaylistComments = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n    };\r\n    let data = await HTTPUtils.comment_playlist(params);\r\n    setHotCommentData(data.hotComments);\r\n    setComments(data.comments);\r\n  };\r\n  //事件--改变tab index, 切换标签 歌曲列表, 评论列表, 收藏列表\r\n  const changeTabIndex = (event) => {\r\n    console.log(module);\r\n    if (event.target.id) {\r\n      console.log(typeof event.target.id);\r\n      let id = event.target.id;\r\n      setTabIndex(id);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 事件---歌单评论相关事件\r\n   */\r\n  //歌单评论--header输入框输入change事件\r\n  const commentValChange = (event) => {\r\n    // console.log(val.)\r\n    let val = event.target.value;\r\n    // console.log(event.target.blur())\r\n    setCommentVal(val);\r\n  };\r\n  //事件---提交评论\r\n  const submitComment = (val) => {\r\n    console.log('提交评论')\r\n    console.log(val)\r\n  }\r\n  //歌单评论---header评论按钮事件\r\n  const headerComment = () => {};\r\n\r\n  //进入页面, useEffect事件--只调用一次\r\n  useEffect(async () => {\r\n    console.log(exchangeTime(1621262717313));\r\n    console.log('传过来id')\r\n    console.log(id)\r\n    await getPlaylistDetail();\r\n    await getPlaylistComments();\r\n  }, []);\r\n\r\n  //渲染--渲染歌单列表item\r\n  const ListItem = ({ data, index }) => {\r\n    index += 1;\r\n    index = index < 10 ? \"0\" + index : index;\r\n    return (\r\n      <ul\r\n        className={`content-header fontsize18 canSelectItem ${\r\n          (index - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex={index}\r\n      >\r\n        <li className=\"content-header-item flex4\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{data?.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">\r\n          {data?.ar.map((z, i) => {\r\n            if (i == data?.ar.length - 1) {\r\n              return z.name;\r\n            }\r\n            return z.name + \"/\";\r\n          })}\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">\r\n          {data?.al?.name}\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">44</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---评论列表item\r\n  const CommentItem = ({ data }) => {\r\n    return (\r\n      <div className=\"list-item\">\r\n        <div className=\"list-item-left\" style={{ margin: \"5px 0\" }}>\r\n          <img src={data.user.avatarUrl + \"?param=50y50\"} />\r\n        </div>\r\n        <ul className=\"list-item-right\">\r\n          <li style={{ margin: \"5px 0\" }}>\r\n            {data.user.nickname}: {data.content}\r\n          </li>\r\n          {data.beReplied.length > 0 ? (\r\n            <li\r\n              style={{\r\n                padding: \"5px 10px\",\r\n                backgroundColor: \"lightgray\",\r\n                borderRadius: 10,\r\n                margin: \"5px 0\",\r\n              }}\r\n            >\r\n              {data.beReplied[0]?.user?.nickname}: {data.beReplied[0]?.content}\r\n            </li>\r\n          ) : null}\r\n          <li className=\"list-item-date\">\r\n            <div>{exchangeTime(data.time)}</div>\r\n            <div>\r\n              <span className=\"tipoff marginHon10\">举报</span>\r\n              <img src={NoZanPng} className=\"commentImg marginHon10\" />\r\n              <span>{data.likedCount}</span>\r\n              <img src={ShareRound} className=\"commentImg marginHon10\" />\r\n              <img src={CommentRoundPng} className=\"commentImg marginHon10\" />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染---收藏列表item\r\n  const CollectionItem = ({ data }) => {\r\n    return (\r\n      <div className=\"collectin-item-container\">\r\n        <div className=\"collection-item\">\r\n          <img\r\n            src={data?.avatarUrl + \"?param=100y100\"}\r\n            className=\"collection-item-head-portrait marginHon5\"\r\n          />\r\n          <p className=\"marginHon5\">{data?.nickname}</p>\r\n          {data.gender == 1 ? (\r\n            <img\r\n              src={GenderMale}\r\n              className=\"collection-item-gender marginHon5\"\r\n            />\r\n          ) : null}\r\n          {data.gender == 2 ? (\r\n            <img\r\n              src={GenderFemale}\r\n              className=\"collection-item-gender marginHon5\"\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //渲染--歌单详情主要内容\r\n  const RenderContent = () => {\r\n    switch (tabIndex) {\r\n      case \"1\":\r\n        return <Content />;\r\n      case \"2\":\r\n        return <Comment/>;\r\n      case \"3\":\r\n        return <Collection/>;\r\n    }\r\n  };\r\n  //渲染--歌曲列表\r\n  const Content = () => {\r\n    return (\r\n      <div className=\"content\">\r\n        <ul className=\"content-header\">\r\n          <li className=\"content-header-item txtCenter flex4 txtLightGray\">\r\n            音乐标题\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            歌手\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            专辑\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            时长\r\n          </li>\r\n        </ul>\r\n        {songsData.map((item, index) => {\r\n          return <ListItem key={item.id} data={item} index={index} />;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //评论页面\r\n  const Comment = () => {\r\n    return (\r\n      <div className=\"comment\">\r\n        <MyTextarea comment={submitComment}/>\r\n        <div className=\"comment-list\">\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>精彩评论</p>\r\n          <div>\r\n            {hotCommentData.map((item, index) => {\r\n              return <CommentItem key={item.commentId} data={item} />;\r\n            })}\r\n          </div>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>最新评论</p>\r\n          <div>\r\n            {comments.map((item, index) => {\r\n              return <CommentItem key={item.id} data={item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //收藏者页面\r\n  const Collection = () => {\r\n    return (\r\n      <div className=\"collection\">\r\n        {subscribersData.map((item, index) => {\r\n          return <CollectionItem key={item.userId} data={item} />;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //歌单详情页面\r\n  return (\r\n    <div className=\"playlist-detail\">\r\n      <div className=\"playlist-detail-header\">\r\n        <div className=\"header-left headerPadding5\">\r\n          <img\r\n            className=\"header-left-img border-radius-20\"\r\n            src={basicData.coverImgUrl}\r\n          />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <span\r\n              className=\"border-text headerPadding5\"\r\n              style={{ borderRadius: 5 }}\r\n            >\r\n              歌单\r\n            </span>\r\n            <span className=\"playlist-name headerPadding5\">\r\n              {basicData.name}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <img\r\n              src={basicData.creator?.avatarUrl}\r\n              style={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n            />\r\n            <span className=\"headerPadding5\">\r\n              {basicData.creator?.nickname}\r\n            </span>\r\n            <span className=\"headerPadding5\">\r\n              {exchangeTime(basicData.createTime, 1)}创建\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row \">\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 bkCommonColor marginVer5 whiteCol\">\r\n              <img src={PlayPng} className=\"img25 marginHon5\" />\r\n              <span className=\"height25Vertical padding5\">播放全部</span>\r\n              <img src={AddWhitePng} className=\"img25 marginHon5\" />\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer \">\r\n              <img src={SubPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                收藏({subscribersData?.length})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={SharePng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                分享({basicData.shareCount})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={DownloadPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">下载全部</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>标签:</span>\r\n            <span style={{ padding: \"0 10px\" }}>\r\n              {basicData.tags?.map((item, index) => {\r\n                return (\r\n                  <span key={index} style={{ padding: \"0 5px\" }}>\r\n                    {index == basicData.tags?.length - 1\r\n                      ? item\r\n                      : item + \" \" + \"/\"}\r\n                  </span>\r\n                );\r\n              })}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>歌曲数目: {basicData.trackCount}首</span>\r\n            <span className=\"marginHon10\">\r\n              播放量: {parseInt(basicData.playCount / 10000)}万\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 20 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              {basicData.description}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"playlist-detail-content\">\r\n        <ul className=\"tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            id=\"1\"\r\n            className={`tab ${tabIndex === \"1\" ? \"tab-active\" : null}`}\r\n          >\r\n            歌曲列表\r\n          </li>\r\n          <li\r\n            id=\"2\"\r\n            className={`tab ${tabIndex === \"2\" ? \"tab-active\" : null}`}\r\n          >\r\n            评论({basicData.commentCount})\r\n          </li>\r\n          <li\r\n            id=\"3\"\r\n            className={`tab ${tabIndex === \"3\" ? \"tab-active\" : null}`}\r\n          >\r\n            收藏者\r\n          </li>\r\n        </ul>\r\n        <RenderContent />\r\n        {/* <Comment/> */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PlaylistDetail)\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js",["595"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function MyTextarea(props) {\r\n  const [commentVal, setCommentVal] = useState(\"\");\r\n\r\n  const commentValChange = (event) => {\r\n    let val = event.target.value;\r\n    setCommentVal(val);\r\n    // props.onChange(event);\r\n  };\r\n  const headerComment = () => {\r\n    props.comment(commentVal)\r\n    setCommentVal('')\r\n  }\r\n  return (\r\n    <div className=\"comment-header\">\r\n      <div className=\"comment-header-textarea\">\r\n        <textarea\r\n          rows=\"10\"\r\n          className=\"comment-textarea\"\r\n          maxLength=\"140\"\r\n          value={commentVal}\r\n          onChange={commentValChange}\r\n        />\r\n        <span className=\"comment-surplus-length\">\r\n          {140 - commentVal.length}\r\n        </span>\r\n      </div>\r\n      <div className=\"comment-header-bottom\">\r\n        <p>9999</p>\r\n        <button className=\"bottom-right-btn\" onClick={headerComment}>\r\n          评论\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js",["596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./ArtistDetail.less\";\r\nimport HTTPUtils from \"@/HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\n\r\nconst { exchangeTime, exchagneDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nexport default function Test(props) {\r\n  //歌手详情中 tabs 选中哪个标签  1->4; 专辑->相似歌手\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  //专辑列表浏览模式--1->3; 图列模式->列表模式->大图模式\r\n  const [modalIndex, setModalIndex] = useState(\"1\");\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //歌手详情--歌手数据\r\n  const [artistDetailData, setArtistDetailData] = useState({});\r\n  //歌手详情--相似歌手数据\r\n  const [simiArtistData, setSimiArtistData] = useState([]);\r\n  //歌手详情--获取歌手详细描述\r\n  const [artistDetailDesc, setArtistDetailDest] = useState({});\r\n  //歌手详情--获取歌手MV数据\r\n  const [artistMV, setArtistMV] = useState([]);\r\n  //歌手详情--获取歌手专辑列表\r\n  const [hotAlbumsData, setHotAlbumsData] = useState([]);\r\n  //歌手详情-专辑列表-展开全部歌曲数组 [...{id: false}]\r\n  const [expandAlbumsArr, setExpandAlbumsArr] = useState([]);\r\n  //歌手详情-专辑列表--请求数据offset, 默认为0\r\n  const [albumsOffset, setAlbumOffset] = useState(0);\r\n  //歌手详情--专辑列表--是否还有更多\r\n  const [hasMore, setHasMore] = useState(true);\r\n  //歌手详情-MV列表--请求数据offset, 默认为0\r\n  const [mvsOffset, setMVOffset] = useState(0);\r\n  //歌手详情--MV列表--是否还有更多\r\n  const [hasMVMore, setHasMVMore] = useState(true);\r\n  //歌手详情-整个页面ref\r\n  const artistDetailRef = useRef();\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n\r\n  //切换tab index事件\r\n  const changeTabIndex = (event) => {\r\n    if (event.target.id) {\r\n      setTabIndex(event.target.id);\r\n    }\r\n  };\r\n\r\n  //事件---切换专辑列表浏览模式\r\n  const changeModalIndex = (event) => {\r\n    if (event.target.id || event.target.parentNode.id) {\r\n      setModalIndex(event.target.id || event.target.parentNode.id);\r\n    }\r\n  };\r\n\r\n  //事件---获取歌手详情数据 例如id='3684';\r\n  const getArtistDetail = async () => {\r\n    let params = {\r\n      id: \"3684\",\r\n    };\r\n    let data = await HTTPUtils.artist_detail(params);\r\n    setArtistDetailData(data.data?.artist);\r\n  };\r\n\r\n  //事件--获取歌手详情中相似歌手 例如id='3684'\r\n  const getSimiArtist = async () => {\r\n    let params = {\r\n      id: \"3684\",\r\n    };\r\n    let data = await HTTPUtils.simi_artist(params);\r\n    setSimiArtistData(data.artists);\r\n  };\r\n\r\n  //事件--获取歌手详细描述\r\n  const getArtistDetailDesc = async () => {\r\n    let params = {\r\n      id: \"3684\",\r\n    };\r\n    let data = await HTTPUtils.artist_desc(params);\r\n    setArtistDetailDest(data);\r\n  };\r\n\r\n  //获取歌手MV数据\r\n  const getArtistMV = async () => {\r\n    if (!hasMVMore) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      id: \"3684\",\r\n      limit: \"10\",\r\n      offset: mvsOffset * 10,\r\n    };\r\n    let data = await HTTPUtils.artist_mv(params);\r\n    if (!data.hasMore) {\r\n      setHasMVMore(false);\r\n    }\r\n    let newMVS = artistMV.length == 0 ? data.mvs : artistMV.concat(data.mvs);\r\n    setArtistMV(newMVS);\r\n  };\r\n\r\n  //事件--获取歌手专辑列表\r\n  const getArtistAlbum = async () => {\r\n    if (!hasMore) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      id: \"3684\",\r\n      limit: \"5\",\r\n      offset: albumsOffset * 5,\r\n    };\r\n    let data = await HTTPUtils.artist_album(params);\r\n    let hotalbums = data.hotAlbums;\r\n    if (!data.more) {\r\n      setHasMore(false);\r\n    }\r\n    if (hotalbums.length == 0) {\r\n      return false;\r\n    }\r\n    //存储每个请求专辑详细内容的promise请求\r\n    let arr = [];\r\n    //存储每个专辑列表是否expand\r\n    let expandArr = [];\r\n    hotalbums.map(async (item, index) => {\r\n      arr.push(\r\n        new Promise(async (resolve, reject) => {\r\n          let data = await getAlbumDetail(item);\r\n          return resolve(data);\r\n        })\r\n      );\r\n      expandArr[index] = {};\r\n      expandArr[index][item.id] = false;\r\n    });\r\n    Promise.all(arr).then((res) => {\r\n      hotalbums.map((item, index) => {\r\n        let filterArr = res.filter((zItem) => zItem.album?.id == item.id);\r\n        let filterItem = filterArr[0];\r\n        item.songs = filterItem.songs;\r\n      });\r\n      let newHotAlbumsData = hotAlbumsData.concat(hotalbums);\r\n      let newExpandArr =\r\n        expandAlbumsArr.length == 0\r\n          ? expandArr\r\n          : expandAlbumsArr?.concat(expandArr);\r\n      setExpandAlbumsArr(newExpandArr);\r\n      setHotAlbumsData(newHotAlbumsData);\r\n    });\r\n  };\r\n  //事件--获取专辑具体内容\r\n  const getAlbumDetail = async (item) => {\r\n    let params = {\r\n      id: item.id,\r\n    };\r\n    let data = await HTTPUtils.album(params);\r\n    return data;\r\n  };\r\n  const expandAlbum = (item, index) => {\r\n    let expandArr = JSON.parse(JSON.stringify(expandAlbumsArr));\r\n    if (expandArr[index]) {\r\n      let isExpand = expandArr[index][item.id];\r\n      isExpand = !isExpand;\r\n      expandArr[index][item.id] = isExpand;\r\n    }\r\n    setExpandAlbumsArr(expandArr);\r\n  };\r\n  //页面进入--只进行一次渲染\r\n  useEffect(async () => {\r\n    await getArtistDetail();\r\n    await getSimiArtist();\r\n    await getArtistDetailDesc();\r\n    await getArtistMV();\r\n    await getArtistAlbum();\r\n    //不能用addEventListener,\r\n    window.onscroll = throttle(scrollBottomLoadingAlbum, 1000);\r\n  }, []);\r\n  //节流-节流\r\n  const throttle = (func, delay) => {\r\n    let valid = true;\r\n    return function () {\r\n      if (!valid) {\r\n        return false;\r\n      }\r\n      valid = false;\r\n      setTimeout(() => {\r\n        func();\r\n        valid = true;\r\n      }, delay);\r\n    };\r\n  };\r\n  //事件--滚动到离底部100px时, 修改专辑列表依赖的offset\r\n  const scrollBottomLoadingAlbum = async () => {\r\n    if (artistDetailRef) {\r\n      let scrollTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let clientHeight = window.innerHeight;\r\n      let clientScrollHeight = artistDetailRef.current.scrollHeight;\r\n      if (scrollTop + clientHeight > clientScrollHeight - 100) {\r\n        setAlbumOffset((offset) => offset + 1);\r\n      }\r\n    }\r\n  };\r\n  //事件--滚动到离底部100px时, 修改MV列表依赖的offset\r\n  const scrollBottomLoadingMV = async () => {\r\n    if (artistDetailRef) {\r\n      let scrollTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let clientHeight = window.innerHeight;\r\n      let clientScrollHeight = artistDetailRef.current.scrollHeight;\r\n      if (scrollTop + clientHeight > clientScrollHeight - 100) {\r\n        setMVOffset((offset) => offset + 1);\r\n      }\r\n    }\r\n  };\r\n  //依赖albumsOffset, 属性值变化, 会重新获取专辑列表\r\n  useEffect(async () => {\r\n    await getArtistAlbum();\r\n  }, [albumsOffset]);\r\n  //依赖mvsOffset, 属性值变化, 会重新获取专辑列表\r\n  useEffect(async () => {\r\n    await getArtistMV();\r\n  }, [mvsOffset]);\r\n  //依赖tabIndex--不同tab, 切换不同的滑动底部加载\r\n  useEffect(() => {\r\n    if (artistDetailRef) {\r\n      if (tabIndex == \"2\") {\r\n        window.onscroll = throttle(scrollBottomLoadingMV, 1000);\r\n      } else if (tabIndex == \"1\") {\r\n        window.onscroll = throttle(scrollBottomLoadingAlbum, 1000);\r\n      } else {\r\n        window.onscroll = null;\r\n      }\r\n    }\r\n  }, [tabIndex]);\r\n  //渲染--专辑列表图列模式--item\r\n  const PicListModalItem = ({ item, index }) => {\r\n    index = index + 1 < 10 ? \"0\" + (index + 1) : index + 1;\r\n    return (\r\n      <ul\r\n        // className={`content-header fontsize18 canSelectItem`}\r\n        className={`content-header fontsize18 canSelectItem ${\r\n          (parseInt(index) - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex=\"1\"\r\n      >\r\n        <li className=\"content-header-item flex6\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{item.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">44</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染--专辑列表--图列模式--内容\r\n  const PiclistModal = ({ item, index }) => {\r\n    return (\r\n      <div style={{ position: \"relative\" }} className=\"piclistModal\">\r\n        <div className=\"header-left\">\r\n          <img\r\n            key={item.picId_str}\r\n            src={item.picUrl + \"?param=150y150\"}\r\n            className=\"img150\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`header-right list-right ${\r\n            !(expandAlbumsArr[index] && expandAlbumsArr[index][item.id])\r\n              ? \"list-right-750\"\r\n              : \"list-right-height-auto\"\r\n          } `}\r\n        >\r\n          <ul className=\"list-right-tabs\">\r\n            <li className=\"list-right-tab font-weight-20\">{item.name}</li>\r\n            <li className=\"list-right-tab\">播放</li>\r\n            <li className=\"list-right-tab\">收藏</li>\r\n          </ul>\r\n          {item.songs.map((zItem, zIndex) => {\r\n            if (\r\n              zIndex == 10 &&\r\n              !(expandAlbumsArr[index] && expandAlbumsArr[index][item.id])\r\n            ) {\r\n              return (\r\n                <p\r\n                  key={zIndex}\r\n                  style={{\r\n                    textAlign: \"right\",\r\n                    height: 60,\r\n                    lineHeight: \"60px\",\r\n                    paddingRight: 20,\r\n                  }}\r\n                  className=\"backGray txtLightGray\"\r\n                  onClick={() => expandAlbum(item, index)}\r\n                >\r\n                  查看全部{item.songs.length}首\r\n                </p>\r\n              );\r\n            }\r\n            return (\r\n              <PicListModalItem\r\n                key={zItem.id + \"_\" + zIndex}\r\n                item={zItem}\r\n                index={zIndex}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--专辑列表--列表模式-item\r\n  const ListModalItem = ({ item, index }) => {\r\n    return (\r\n      <li\r\n        className={`listModal-list-item canSelectItem ${\r\n          index % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex={index}\r\n      >\r\n        <ul className=\"listModal-list-item-container\">\r\n          <li className=\"list-item list-item-left\">\r\n            <img\r\n              src={item.picUrl + \"?param=100y100\"}\r\n              className=\"list-item-img\"\r\n            />\r\n            <p className=\"list-item-left-title\">{item.name}</p>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <p className=\"list-item-center-title\">{item.songs?.length}</p>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <p className=\"list-item-center-title\">\r\n              发行时间: {exchangeTime(item.publishTime, 1)}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    );\r\n  };\r\n  //渲染--专辑列表--列表模式-内容\r\n  const ListModal = () => {\r\n    return (\r\n      <ul className=\"listModal-lists\">\r\n        {hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <ListModalItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染--专辑列表--大图模式--item\r\n  const PicModalItem = ({ item, index }) => {\r\n    return (\r\n      <li className=\"picmodal-list-item\">\r\n        <div className=\"picmodal-list-item-container\">\r\n          <img src={item.picUrl + \"?param=250y150\"} className=\"list-item-img\" />\r\n          <p className=\"list-item-title\">{item.name}</p>\r\n          <p className=\"list-item-subtitle\">{exchangeTime(item.publishTime)}</p>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n  //渲染--专辑列表--大图模式--内容\r\n  const PicModal = (props) => {\r\n    return (\r\n      <ul className=\"picmodal-lists\">\r\n        {hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <PicModalItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---专辑列表\r\n  const RenderContent = () => {\r\n    let View = null;\r\n    switch (modalIndex) {\r\n      case \"1\":\r\n        View = hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <PiclistModal\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        });\r\n        break;\r\n      case \"2\":\r\n        View = <ListModal />;\r\n        break;\r\n      case \"3\":\r\n        View = <PicModal />;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"artist-detail-header artist-detail-lists\">{View}</div>\r\n    );\r\n  };\r\n  //渲染--MV列表--item\r\n  const MVListItem = ({ item, index }) => {\r\n    return (\r\n      <div className=\"mv-list\">\r\n        <div className=\"mv-list-item-container\">\r\n          <div className=\"mv-list-item\">\r\n            <img\r\n              src={item.imgurl + \"?param=200y200\"}\r\n              className=\"list-item-img\"\r\n            />\r\n            <div className=\"list-item-count\">\r\n              <img\r\n                src={PlayPng}\r\n                style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n              />\r\n              <span>\r\n                {item.playCount > 100000\r\n                  ? Math.floor(item.playCount / 10000) + \"万\"\r\n                  : item.playCount}\r\n              </span>\r\n            </div>\r\n            <div className=\"list-item-time\">\r\n              {exchagneDuration(item.duration)}\r\n            </div>\r\n          </div>\r\n          <p className=\"mv-list-item-name\">{item.name}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--MV列表--内容\r\n  const MVList = (props) => {\r\n    return (\r\n      <div className=\"mv-lists\">\r\n        {artistMV.map((item, index) => {\r\n          return (\r\n            <MVListItem key={item.id + \"_\" + index} item={item} index={index} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--歌手详情页面\r\n  const DetailDesc = () => {\r\n    return (\r\n      <div className=\"detail-desc\">\r\n        <p className=\"detail-desc-jianjie detail-desc-title fongsize20\">\r\n          {artistDetailData.name}简介\r\n        </p>\r\n        <p className=\"desc-jianjie-content jianjie-indent-content\">\r\n          {artistDetailDesc.briefDesc}\r\n        </p>\r\n        {artistDetailDesc.introduction?.map((item, index) => {\r\n          let strArr = item.txt.split(\"●\");\r\n          strArr.splice(0, 1);\r\n          let newStrArr = strArr.map((i, j) => (i = \"●\" + i));\r\n          return (\r\n            <div key={index * 10}>\r\n              <p className=\"detail-desc-title fongsize20\">{item.ti}</p>\r\n              {newStrArr.map((str, strIndex) => (\r\n                <p\r\n                  key={index * 10 + \"_\" + strIndex}\r\n                  className=\"desc-jianjie-content\"\r\n                >\r\n                  {str}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--相似歌手--item\r\n  const SimilarListItem = ({ item, index }) => {\r\n    return (\r\n      <div className=\"similar-artist-list\">\r\n        <div className=\"list-item\">\r\n          <img\r\n            key={item.picId_str}\r\n            src={item.picUrl + \"?param=380y380\"}\r\n            className=\"list-item-img\"\r\n          />\r\n          <p className=\"list-item-title\">{item.name}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--相似歌手--内容\r\n  const SimilarList = (props) => {\r\n    return (\r\n      <div className=\"similar-artist-lists\">\r\n        {simiArtistData.map((item, index) => {\r\n          return (\r\n            <SimilarListItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"artist-detail\" ref={artistDetailRef}>\r\n      <div className=\"artist-detail-header\">\r\n        <div className=\"header-left\">\r\n          <img src={artistDetailData.cover} className=\"img200\" />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <p className=\"header-right-title\">{artistDetailData.name}</p>\r\n          <p className=\"header-right-subtitle\">jj lin</p>\r\n          <button className=\"defineButton\">收藏</button>\r\n          <ul className=\"right-line\">\r\n            <li className=\"right-line-item\">\r\n              单曲数: {artistDetailData.musicSize}\r\n            </li>\r\n            <li className=\"right-line-item\">\r\n              专辑数: {artistDetailData.albumSize}\r\n            </li>\r\n            <li className=\"right-line-item\">MV数: {artistDetailData.mvSize}</li>\r\n          </ul>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 30 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              简介: {artistDetailData.briefDesc}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"artist-detail-tabs-container\">\r\n        <ul className=\"artist-detail-tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"1\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"1\"\r\n          >\r\n            专辑\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"2\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"2\"\r\n          >\r\n            MV\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"3\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"3\"\r\n          >\r\n            歌手详情\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"4\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"4\"\r\n          >\r\n            相似歌手\r\n          </li>\r\n        </ul>\r\n        {tabIndex == \"1\" ? (\r\n          <ul className=\"right-imgs\" onClick={changeModalIndex}>\r\n            <li\r\n              id=\"3\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"3\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"3\" ? PicActivePng : PicNoActivePng}\r\n              />\r\n            </li>\r\n            <li\r\n              id=\"2\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"2\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"2\" ? ListActivePng : ListNoActivePng}\r\n              />\r\n            </li>\r\n            <li\r\n              id=\"1\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"1\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"1\" ? PicListActivePng : PicListNoActivePng}\r\n              />\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n      {tabIndex == \"1\" ? <RenderContent /> : null}\r\n      {tabIndex == \"2\" ? <MVList /> : null}\r\n      {tabIndex == \"3\" ? <DetailDesc /> : null}\r\n      {tabIndex == \"4\" ? <SimilarList /> : null}\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\fetch.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\request.js",["641","642","643","644","645"],"import c_fetch from './fetch';\r\n\r\nc_fetch.interceptors.request.use(\r\n  function(url, config) {\r\n    //发送请求前, 为每个请求添加timestamp;\r\n    let is_have_timestamp = url.indexOf('timestamp');\r\n    let is_have_wenhao = url.indexOf('?');\r\n    if(is_have_wenhao == -1) {\r\n      url += '?' + 'timestamp=' + Date.now();\r\n    }else {\r\n      url += '&' + 'timestamp=' + Date.now();\r\n    }\r\n    return {url, config};\r\n  }\r\n)\r\n//返回数据前, 处理数据, \r\nc_fetch.interceptors.response.use(function(res) {\r\n  if(res.status == 301) {\r\n    console.log('需要重新登录')\r\n    //这里可以reject, 不返回数据\r\n  }\r\n  return res;\r\n});\r\n\r\nconst request = () => {\r\n  return c_fetch;\r\n}\r\nexport default request;","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\Cookies.js",["646","647"],"\r\nconst Cookies = {\r\n  getItem: function(name) {\r\n    let cookie_str = document.cookie;\r\n    //首先, 看有没有对应的name\r\n    let is_have = cookie_str.indexOf(name);\r\n    console.log(is_have)\r\n    if(is_have != -1) {\r\n      //如果存在, 截取位置以后的字符串\r\n      let str = cookie_str.substring(is_have);\r\n      //分割后, 取第一个值, \r\n      let str_arr = str.split(';');\r\n      let cookie = str_arr[0];\r\n      //截取该cookie等号后面的值\r\n      let cookie_val = cookie.substring(name.length+1);\r\n      //分割字符串, 第一个就是需要的value\r\n      console.log(cookie_val.split(';')[0])\r\n      let val = cookie_val.split(';')[0];\r\n      return val;\r\n    }\r\n    //如果不存在, 返回-1;\r\n    return -1;\r\n  },\r\n  setItem: function(name, value, expire) {\r\n    let str = name+'='+value+';';\r\n    switch(expire.constructor) {\r\n      //Number: 默认以小时为单位\r\n      case Number:\r\n        let expires = new Date(Date.now() + expire * 60 * 60 * 1000);\r\n        str += 'expires=' + expires;\r\n        break;\r\n      case Date:\r\n        str += 'expires=' + expire;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    document.cookie = str;\r\n  },\r\n  hasItem: function(name) {\r\n    //是否存在某cookie\r\n    let cookie_str = document.cookie;\r\n    let is_have = cookie_str.indexOf(name);\r\n    return is_have == -1 ? false : true;\r\n  },\r\n  removeItem: function(name) {\r\n    //首先检查是否存在\r\n    let is_have = this.hasItem(name);\r\n    if(is_have) {\r\n      let val = this.getItem(name);\r\n      this.setItem(name, val, new Date(1970, 1, 1));\r\n      //存在返回true;\r\n      return true;\r\n    }\r\n    //不存在返回false\r\n    return false;\r\n  }\r\n};\r\n\r\nexport {Cookies};\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSliderComponent.js",["648","649","650","651","652","653","654"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nlet startDistance = \"\"; //拖动开始位置\r\nlet is_moving = false; //是否开始滚动\r\nlet is_mine_ref = \"\"; //是否是本组件\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function MusicSliderComponent(props) {\r\n  const SliderRef = useRef(); //滑动条Ref\r\n  const SliderBackRef = useRef(); //已滑动条Ref\r\n  const SliderRoundBtnRef = useRef(); //圆形按钮ref\r\n  const [backWidth, setBackWidth] = useState(\"0%\"); //已滑动滚动条宽度\r\n  const [sliderRoundLeft, setSliderRoundLeft] = useState(\"0%\"); //滑动条上按钮距离左边距离\r\n  const [play, setPlay] = useState(false); //歌曲是否开始播放\r\n  const [time, setTime] = useState(\"0\"); //歌曲总时长\r\n  const [isReset, setIsReset] = useState(false); //是否重置\r\n  //设置滑动宽度\r\n  const setWidth = (width) => {\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    let percent = (width / slider.scrollWidth) * 100;\r\n    percent = percent.toFixed(2);\r\n    percent = parseFloat(percent);\r\n    //获取背景滑动条宽度, 数值, 半分比\r\n    let back_width = sliderBack.style.width;\r\n    //获取圆形按钮绝对定位left,\r\n    // let round_btn_position = sliderRoundBtn.style.left;\r\n    //因为back_width是百分比, 所以要转为Number\r\n    back_width = parseFloat(back_width);\r\n    //percent有可能是正值/负值, 所以需要用原来的值直接相加,\r\n    back_width += percent;\r\n    //如果相加后百分比>100; 则最大取100%\r\n    if (parseFloat(back_width) > 100) {\r\n      back_width = \"100\";\r\n    } else if (parseFloat(back_width) < 0) {\r\n      //同理, 相加后百分比<0, 则最小取0\r\n      back_width = \"0\";\r\n    }\r\n    back_width += \"%\";\r\n    //背景条/圆形拖动按钮, 百分比相同,\r\n    // console.log(\"component\", back_width);\r\n    setBackWidth(back_width);\r\n    setSliderRoundLeft(back_width);\r\n    props.onChange(back_width);\r\n  };\r\n  //只加载一次\r\n  useEffect(() => {\r\n    //取得相应ref所对应的组件\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    sliderRoundBtn.addEventListener(\"click\", (e) => {\r\n      //阻止冒泡\r\n      e.stopPropagation() || (e.cancelBubble = true);\r\n    });\r\n    //鼠标在圆形按钮上开始拖动\r\n    sliderRoundBtn.addEventListener(\"mousedown\", (e) => {\r\n      clearTimeout(interval_id);\r\n      //记录拖动开始位置, 初始化所需的属性\r\n      startDistance = e.clientX;\r\n      //是否开始移动\r\n      is_moving = true;\r\n      //是否是拖动的组件,(一个页面有可能有多个MusicSliderComponent)\r\n      is_mine_ref = SliderRef;\r\n    });\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        interval_id && clearTimeout(interval_id);\r\n        //计算出移动距离, 并更新startDistance,\r\n        //便于计算\r\n        //当然也可以不用更新startDistance, 那么setWidth中back_width就不用与percent相加了\r\n        let moveDistance = e.clientX - startDistance;\r\n        startDistance = e.clientX;\r\n        setWidth(moveDistance);\r\n      }\r\n    });\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      //放开鼠标, 重置拖动过程中所需的属性\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        is_moving = false;\r\n        is_mine_ref = null;\r\n        startDistance = 0;\r\n      }\r\n    });\r\n    document.addEventListener(\"dragstart\", (e) => {\r\n      //为了配合dragend事件\r\n      is_moving = true;\r\n      is_mine_ref = SliderRef;\r\n      document.onselectstart = function () {\r\n        return false;\r\n      };\r\n    });\r\n    document.addEventListener(\"dragend\", (e) => {\r\n      //不能只用moveup事件, 因为鼠标在拖动过程中, 不会触发mouseup事件, , 但是滑动条还是能滑动, 这个时候会触发dragend事件, 在这里可以处理一下\r\n      if (is_moving && SliderRef == is_mine_ref) {\r\n        //获取移动距离\r\n        let moveX = e.clientX - startDistance;\r\n        //将最终距离赋值给startDistance\r\n        startDistance = e.clientX;\r\n        setWidth(moveX);\r\n        is_moving = false;\r\n        is_mine_ref = \"\";\r\n        document.onselectstart = function () {\r\n          return true;\r\n        };\r\n      }\r\n    });\r\n    slider.addEventListener(\"click\", (e) => {\r\n      //点击滑动条, 改变已滑动条宽度\r\n      let slider_back_width = e.offsetX;\r\n      let slider_width = slider.scrollWidth;\r\n      let percent = (slider_back_width / slider_width) * 100;\r\n      percent = percent.toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //可以作为值, 传回组件onchange事件,\r\n      if (percent > 100) {\r\n        percent = \"100\";\r\n      } else if (percent < 0) {\r\n        percent = \"0\";\r\n      }\r\n      let percentStr = percent + \"%\";\r\n      //实际情况应该是: 先暂停播放, 获取加载资源, 加载完毕, 继续播放; 如果处于加载状态下, 暂停播放\r\n      // interval_id && clearInterval(interval_id)\r\n      setBackWidth(percentStr);\r\n      setSliderRoundLeft(percentStr);\r\n      props.onChange(percentStr);\r\n    });\r\n  }, []);\r\n  //重置滑动条\r\n  const reset = () => {\r\n    let back_width = \"0%\";\r\n    //暂停播放\r\n    setPlay(false);\r\n    //滑动条背景条归0\r\n    setBackWidth(back_width);\r\n    //滑动条圆形按钮归0\r\n    setSliderRoundLeft(back_width);\r\n    setIsReset(false);\r\n  };\r\n  //重置isReset状态改变, 执行reset方法, 重置MusicSliderComponent状态\r\n  useEffect(() => {\r\n    // console.log(\"is reset - \", isReset);\r\n    if (isReset) {\r\n      reset();\r\n    }\r\n  }, [isReset]);\r\n  //事件--当滑动条到达100%后需要处理的事件\r\n  useEffect(() => {\r\n    let back_width = parseFloat(backWidth);\r\n    if (back_width >= 100 && !is_moving) {\r\n      setIsReset(true);\r\n    }\r\n  }, [backWidth]);\r\n  //事件--处理定时进度条每隔一秒 更新一次进度条\r\n  const handleBackWidth = () => {\r\n    let sliderBack = SliderBackRef.current;\r\n    let back_width = sliderBack.style.width;\r\n    back_width = parseFloat(back_width);\r\n    if (back_width >= 100) {\r\n      //如果back_width已经到达100%,则直接reset()--造成这样情况有以下\r\n      //1: 直接拖动滑动条到达100%, 这样直接reset\r\n      setIsReset(true);\r\n    } else {\r\n      //这里150是歌曲的时间, 1/150获取每秒移动的百分比\r\n      let percent = ((1 / parseFloat(time)) * 100).toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //与原来的百分比相加, 得到新的百分比\r\n      back_width = back_width + percent;\r\n      //如果超过100%, 清除定时器\r\n      if (back_width >= 100) {\r\n        back_width = 100;\r\n        setPlay(false);\r\n        props.hasOwnProperty(\"onEndReached\") && props.onEndReached();\r\n      }\r\n      back_width += \"%\";\r\n      //更新滑动条\r\n      setBackWidth(back_width);\r\n      setSliderRoundLeft(back_width);\r\n      // props.onChange(back_width)\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (play) {\r\n      //这里要用一个单独的方法处理进度条, 不能用() => {}, 这样容易形成值backWidth不变化\r\n      interval_id = setInterval(handleBackWidth, 1000);\r\n    } else {\r\n      //暂停播放状态下, 清除定时器\r\n      interval_id && clearInterval(interval_id);\r\n    }\r\n  }, [play]);\r\n  //play播放状态依赖传过来的props.play\r\n  useEffect(() => {\r\n    setPlay(props.play);\r\n  }, [props.play]);\r\n  useEffect(() => {\r\n    setTime(props.duration);\r\n    setIsReset(true)\r\n  }, [props.duration]);\r\n  return (\r\n    <div\r\n      id=\"slider\"\r\n      ref={SliderRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: 5,\r\n        backgroundColor: \"#ccc\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        id=\"sliderBack\"\r\n        ref={SliderBackRef}\r\n        style={{ width: backWidth, height: 5, backgroundColor: \"#DD001B\" }}\r\n      ></div>\r\n      <div\r\n        id=\"sliderRoundBtn\"\r\n        ref={SliderRoundBtnRef}\r\n        style={{\r\n          width: 10,\r\n          height: 10,\r\n          borderRadius: \"50%\",\r\n          backgroundColor: \"#DD001B\",\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          transform: \"translateY(-50%)\",\r\n          left: sliderRoundLeft,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\BasicSlider.js",["655","656","657","658","659","660"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nlet startDistance = \"\"; //拖动开始位置\r\nlet is_moving = false; //是否开始滚动\r\nlet is_mine_ref = \"\"; //是否是本组件\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function BasicSlider(props) {\r\n  const SliderRef = useRef(); //滑动条Ref\r\n  const SliderBackRef = useRef(); //已滑动条Ref\r\n  const SliderRoundBtnRef = useRef(); //圆形按钮ref\r\n  const [backWidth, setBackWidth] = useState(\"0%\"); //已滑动滚动条宽度\r\n  const [sliderRoundLeft, setSliderRoundLeft] = useState(\"0%\"); //滑动条上按钮距离左边距离\r\n  //设置滑动宽度\r\n  const setWidth = (width) => {\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    let percent = (width / slider.scrollWidth) * 100;\r\n    percent = percent.toFixed(2);\r\n    percent = parseFloat(percent);\r\n    //获取背景滑动条宽度, 数值, 半分比\r\n    let back_width = sliderBack.style.width;\r\n    //获取圆形按钮绝对定位left,\r\n    // let round_btn_position = sliderRoundBtn.style.left;\r\n    //因为back_width是百分比, 所以要转为Number\r\n    back_width = parseFloat(back_width);\r\n    //percent有可能是正值/负值, 所以需要用原来的值直接相加,\r\n    back_width += percent;\r\n    //如果相加后百分比>100; 则最大取100%\r\n    if (parseFloat(back_width) > 100) {\r\n      back_width = \"100\";\r\n    } else if (parseFloat(back_width) < 0) {\r\n      //同理, 相加后百分比<0, 则最小取0\r\n      back_width = \"0\";\r\n    }\r\n    back_width += \"%\";\r\n    //背景条/圆形拖动按钮, 百分比相同,\r\n    // console.log(\"component\", back_width);\r\n    setBackWidth(back_width);\r\n    setSliderRoundLeft(back_width);\r\n    props.onChange(back_width);\r\n  };\r\n\r\n  //props.value变化\r\n  useEffect(() => {\r\n    setBackWidth(props.value);\r\n    setSliderRoundLeft(props.value);\r\n  }, [props.value])\r\n\r\n  //只加载一次\r\n  useEffect(() => {\r\n    //取得相应ref所对应的组件\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    sliderRoundBtn.addEventListener(\"click\", (e) => {\r\n      //阻止冒泡\r\n      e.stopPropagation() || (e.cancelBubble = true);\r\n    });\r\n    //鼠标在圆形按钮上开始拖动\r\n    sliderRoundBtn.addEventListener(\"mousedown\", (e) => {\r\n      clearTimeout(interval_id);\r\n      //记录拖动开始位置, 初始化所需的属性\r\n      startDistance = e.clientX;\r\n      //是否开始移动\r\n      is_moving = true;\r\n      //是否是拖动的组件,(一个页面有可能有多个MusicSliderComponent)\r\n      is_mine_ref = SliderRef;\r\n    });\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        interval_id && clearTimeout(interval_id);\r\n        //计算出移动距离, 并更新startDistance,\r\n        //便于计算\r\n        //当然也可以不用更新startDistance, 那么setWidth中back_width就不用与percent相加了\r\n        let moveDistance = e.clientX - startDistance;\r\n        startDistance = e.clientX;\r\n        setWidth(moveDistance);\r\n      }\r\n    });\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      //放开鼠标, 重置拖动过程中所需的属性\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        is_moving = false;\r\n        is_mine_ref = null;\r\n        startDistance = 0;\r\n      }\r\n    });\r\n    document.addEventListener(\"dragstart\", (e) => {\r\n      //为了配合dragend事件\r\n      is_moving = true;\r\n      is_mine_ref = SliderRef;\r\n      document.onselectstart = function () {\r\n        return false;\r\n      };\r\n    });\r\n    document.addEventListener(\"dragend\", (e) => {\r\n      //不能只用moveup事件, 因为鼠标在拖动过程中, 不会触发mouseup事件, , 但是滑动条还是能滑动, 这个时候会触发dragend事件, 在这里可以处理一下\r\n      if (is_moving && SliderRef == is_mine_ref) {\r\n        //获取移动距离\r\n        let moveX = e.clientX - startDistance;\r\n        //将最终距离赋值给startDistance\r\n        startDistance = e.clientX;\r\n        setWidth(moveX);\r\n        is_moving = false;\r\n        is_mine_ref = \"\";\r\n        document.onselectstart = function () {\r\n          return true;\r\n        };\r\n      }\r\n    });\r\n    slider.addEventListener(\"click\", (e) => {\r\n      //点击滑动条, 改变已滑动条宽度\r\n      let slider_back_width = e.offsetX;\r\n      let slider_width = slider.scrollWidth;\r\n      let percent = (slider_back_width / slider_width) * 100;\r\n      percent = percent.toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //可以作为值, 传回组件onchange事件,\r\n      if (percent > 100) {\r\n        percent = \"100\";\r\n      } else if (percent < 0) {\r\n        percent = \"0\";\r\n      }\r\n      let percentStr = percent + \"%\";\r\n      //实际情况应该是: 先暂停播放, 获取加载资源, 加载完毕, 继续播放; 如果处于加载状态下, 暂停播放\r\n      // interval_id && clearInterval(interval_id)\r\n      setBackWidth(percentStr);\r\n      setSliderRoundLeft(percentStr);\r\n      props.onChange(percentStr);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      id=\"slider\"\r\n      ref={SliderRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: 5,\r\n        backgroundColor: \"#ccc\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        id=\"sliderBack\"\r\n        ref={SliderBackRef}\r\n        style={{ width: backWidth, height: 5, backgroundColor: \"#DD001B\" }}\r\n      ></div>\r\n      <div\r\n        id=\"sliderRoundBtn\"\r\n        ref={SliderRoundBtnRef}\r\n        style={{\r\n          width: 10,\r\n          height: 10,\r\n          borderRadius: \"50%\",\r\n          backgroundColor: \"#DD001B\",\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          transform: \"translateY(-50%)\",\r\n          left: sliderRoundLeft,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\AudioSlider.js",["661","662","663","664","665","666","667","668"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BasicSlider from './BasicSlider';\r\n\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function AudioSlider(props) {\r\n\r\n  const [value, setValue] = useState('0%')\r\n  const [play, setPlay] = useState(false); //歌曲是否开始播放\r\n  const [time, setTime] = useState(\"0\"); //歌曲总时长\r\n  const [isReset, setIsReset] = useState(false); //是否重置\r\n\r\n  /**\r\n    * BasicSlider事件\r\n    */\r\n   //onChange事件\r\n   const handleBasicSliderChange = (percent) => {\r\n    console.log('basic slider change --', percent)\r\n    props.onChange(percent)\r\n  }\r\n\r\n  ////事件--处理定时进度条每隔一秒 更新一次进度条\r\n  // const handleBackWidth = () => {\r\n  //   console.log('handle back width')\r\n  //   console.log(value)\r\n  //   let back_width = value;\r\n  //   back_width = parseFloat(back_width);\r\n  //   if (back_width >= 100) {\r\n  //     //如果back_width已经到达100%,则直接reset()--造成这样情况有以下\r\n  //     //1: 直接拖动滑动条到达100%, 这样直接reset\r\n  //     setIsReset(true);\r\n  //   } else {\r\n  //     //这里150是歌曲的时间, 1/150获取每秒移动的百分比\r\n  //     let percent = ((1 / parseFloat(time)) * 100).toFixed(2);\r\n  //     percent = parseFloat(percent);\r\n  //     //与原来的百分比相加, 得到新的百分比\r\n  //     back_width = back_width + percent;\r\n  //     //如果超过100%, 清除定时器\r\n  //     if (back_width >= 100) {\r\n  //       back_width = 100;\r\n  //       setPlay(false);\r\n  //       // props.hasOwnProperty(\"onEndReached\") && props.onEndReached();\r\n  //     }\r\n  //     back_width += \"%\";\r\n  //     setValue(back_width)\r\n  //     //更新滑动条\r\n  //     // setBackWidth(back_width);\r\n  //     // setSliderRoundLeft(back_width);\r\n  //     // props.onChange(back_width)\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   if (play) {\r\n  //     //这里要用一个单独的方法处理进度条, 不能用() => {}, 这样容易形成值backWidth不变化\r\n  //     interval_id = setInterval(handleBackWidth, 1000);\r\n  //   } else {\r\n  //     //暂停播放状态下, 清除定时器\r\n  //     interval_id && clearInterval(interval_id);\r\n  //   }\r\n  // }, [play]);\r\n  //play播放状态依赖传过来的props.play\r\n  // useEffect(() => {\r\n  //   setPlay(props.play);\r\n  // }, [props.play]);\r\n  // useEffect(() => {\r\n  //   setTime(props.duration);\r\n  //   setIsReset(true)\r\n  // }, [props.duration]);\r\n  useEffect(() => {\r\n    setValue(props.value)\r\n  }, [props.value])\r\n  return (\r\n    <BasicSlider value={value} onChange={handleBasicSliderChange}/>\r\n  )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\VolumeSlider.js",["669"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BasicSlider from './BasicSlider';\r\n\r\nexport default function VolumeSlider(props) {\r\n  const [volume, setVolume] = useState('0%')\r\n  const handleVolumeChange = (percent) => {\r\n    //音量是小数点格式, 例如0.52\r\n    let volume = parseFloat(percent)/100;\r\n    volume = volume.toFixed(2);\r\n    volume = parseFloat(volume)//有没有这行都可以\r\n    props.onChange(volume)\r\n  }\r\n  useEffect(() => {\r\n    setVolume(props.value)\r\n  }, [props.value])\r\n  return (\r\n    <div>\r\n      <BasicSlider value={volume} onChange={handleVolumeChange}/>\r\n    </div>\r\n  )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\index.js",["670"],["671","672"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\reportWebVitals.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\App.js",["673","674","675","676","677","678","679","680","681","682"],"import './App.less';\nimport 'antd/dist/antd.css';\nimport 'moment/locale/zh-cn';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport { Button, } from 'antd'\nimport React, { useEffect } from 'react';\nimport Login from './Login/Login'\nimport Home from './Home/Home'\nimport MusicSlider from './MusicSlider/MusicSlider'\nimport Search from './Search/Search';\nimport IconListItem from './widgets/IconListItem/IconListItem';\nimport Carousel from './widgets/Carousel/Carousel'\nimport { RouterOutlet } from 'react-easyroute';\nimport { withRouter, Switch, Route, } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n\nfunction App(props) {\n  useEffect(() => {\n    console.log('app props');\n    console.log(props.routes);\n  }, [])\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <div className=\"App\" style={{position: 'relative'}}>\n        {renderRoutes(props.routes)}\n        {/* <Login/> */}\n        {/* <Search/> */}\n        {/* <IconListItem/> */}\n        {/* <Carousel/> */}\n        {/* <MusicSlider /> */}\n        {/* <Home/> */}\n        {/* <RouterOutlet/> */}\n        <div style={{height: 100}}>\n\n        </div>\n        <div style={{position: 'fixed', width: '100%', height: 100, backgroundColor: 'blue', bottom: '0', left: 0, boxShadow: '0 0 5px #ccc'}}>\n        <MusicSlider/>\n        </div>\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default withRouter(App);\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Router\\router.js",["683","684"],"import Router from 'react-easyroute';\r\nimport Login from '../Login/Login'\r\nimport Home from '../Home/Home';\r\nimport PersonalSuggest from '../Home/PersonalSuggest/PersonalSuggest';\r\nimport SubHome from '../Home/SubHome/SubHome';\r\nimport Playlist from '../Home/Playlist/Playlist';\r\nimport PlaylistDetail from '../Home/Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Home/Test/Test';\r\nimport ArtistDetail from '../Home/Artists/ArtistDetail/ArtistDetail'\r\n\r\n\r\nconst router = new Router({\r\n    mode: 'hash',\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            component: Login,\r\n            name: 'Login'\r\n        },\r\n        {\r\n            path: '/home',\r\n            component: Home,\r\n            name: 'Home',\r\n            children: [\r\n                {\r\n                    path: '/',\r\n                    component: PersonalSuggest,\r\n                    name: 'PersonalSuggest'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n        routes: [\r\n            {\r\n                path: '/home',\r\n                exact: true,\r\n                component: PersonalSuggest,\r\n            },\r\n            {\r\n                path: '/home/:id',\r\n                exact: true,\r\n                component: SubHome,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/playlist/:id',\r\n        exact: true,\r\n        component: PlaylistDetail,\r\n    },\r\n    {\r\n        path: '/personal/:id',\r\n        exact: true,\r\n        component: Test,\r\n    },\r\n    {\r\n        path: '/artist/:id',\r\n        exact: true,\r\n        component: ArtistDetail\r\n    }\r\n]\r\n\r\nexport default routes;","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Login\\Login.js",["685","686","687","688","689"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Home.js",["690","691","692","693","694","695","696","697","698","699","700","701","702","703","704"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, Slider, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Home.less';\r\nimport PersonalSuggest from './PersonalSuggest/PersonalSuggest';\r\nimport SubHome from './SubHome/SubHome';\r\nimport { RouterOutlet } from 'react-easyroute';\r\nimport { Route, Switch, Link, useParams } from 'react-router-dom'\r\nimport { renderRoutes } from 'react-router-config';\r\nconst paths = {\r\n    '/home/0': 0,\r\n    '/home/1': 1,\r\n    '/home/2': 2,\r\n    '/home/3': 3,\r\n    '/home/4': 4,\r\n}\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Home(props) {\r\n    const [homeTags, setHomeTags] = useState(['个性推荐', '歌单', '排行榜', '歌手', '最新音乐']);       //首页tags\r\n    const [activeHomeTag, setActiveHomeTag] = useState('0');            //当前active的home tag\r\n    useEffect(() => {\r\n        console.log(props.route.routes);\r\n        let pathname = props.location.pathname;\r\n        setActiveHomeTag(paths[pathname])\r\n    },)\r\n    /**\r\n     * \r\n     * @param {type: String} type : 0: 个性推荐; 1: 歌单; 2: 排行榜; 3: 歌手; 4: 最新音乐\r\n     */\r\n    const clickHomeTag = (type) => {\r\n        setActiveHomeTag(type)\r\n    }\r\n    return (\r\n        <div\r\n        >\r\n            <div\r\n                className='catHeader'\r\n            >\r\n                {\r\n                    homeTags.map((item, index) => {\r\n                        return (\r\n                            <Link\r\n                                key={index}\r\n                                className={`${activeHomeTag == index ? 'activeCatHeaderItem' : ''} catHeaderItem`}\r\n                                onClick={() => clickHomeTag(index)}\r\n                                to={`/home/${index}`}\r\n                            >\r\n                                {item}\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {renderRoutes(props.route.routes)}\r\n            {/* <Switch>\r\n                <Route exact path='/'>\r\n                    <PersonalSuggest/>\r\n                </Route>\r\n                <Route path='/:id'>\r\n                    <SubHome/>\r\n                </Route>\r\n            </Switch> */}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Search\\Search.js",["705","706","707","708","709","710","711","712","713","714","715"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSlider.js",["716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, message, Button, Slider } from \"antd\";\r\nimport HTTPUtils from \"../HTTPUtils/HTTPUtils\";\r\nimport \"./MusicSlider.less\";\r\n// const mp3Path = require('../Sounds/test.mp3')\r\n//测试本地mp3地址\r\nimport mp3Path from \"../Sounds/test.mp3\";\r\nimport hongyanPath from \"../Sounds/hongyan.mp3\";\r\n//播放/暂停img\r\nimport playActive from \"../images/music/play-active.png\";\r\nimport playNoActive from \"../images/music/play-no-active.png\";\r\nimport pauseActive from \"../images/music/pause-active.png\";\r\nimport pauseNoActive from \"../images/music/pause-no-active.png\";\r\n//上一首\r\nimport forwardActive from \"../images/music/forward-active.png\";\r\nimport forwardNoActive from \"../images/music/forward-no-active.png\";\r\n//下一首\r\nimport lastActive from \"../images/music/last-active.png\";\r\nimport lastNoActive from \"../images/music/last-no-active.png\";\r\n//快进\r\nimport fastActive from \"../images/music/fast-active.png\";\r\nimport fastNoActive from \"../images/music/fast-no-active.png\";\r\n//快退\r\nimport backFastActive from \"../images/music/back-fast-active.png\";\r\nimport backFastNoActive from \"../images/music/back-fast-no-active.png\";\r\n//音量\r\nimport volumeActive from \"../images/music/volume-active.png\";\r\nimport volumeNoActive from \"../images/music/volume-no-active.png\";\r\n//静音\r\nimport mutedActive from \"../images/music/muted-active.png\";\r\nimport mutedNoActive from \"../images/music/muted-no-active.png\";\r\n//播放列表\r\nimport listActive from \"../images/music/list-active.png\";\r\nimport listNoActive from \"../images/music/list-no-active.png\";\r\n//循环\r\n///列表循环\r\nimport allLoopActive from \"../images/music/all-loop-active.png\";\r\nimport allLoopNoActive from \"../images/music/all-loop-no-active.png\";\r\n///单曲循环\r\nimport singleLoopActive from \"../images/music/single-loop-active.png\";\r\nimport singleLoopNoActive from \"../images/music/single-loop-no-active.png\";\r\n///无循环\r\nimport noLoopActive from \"../images/music/none-loop-active.png\";\r\nimport noLoopNoActive from \"../images/music/none-loop-no-active.png\";\r\n\r\n//音乐列表item图片\r\n///加入播放列表\r\nimport add from \"../images/music/musicListItem/add.png\";\r\nimport noAdd from \"../images/music/musicListItem/no-add.png\";\r\n///下一首播放\r\nimport joinNext from \"../images/music/musicListItem/join-next.png\";\r\nimport noJoinNext from \"../images/music/musicListItem/no-join-next.png\";\r\n///收藏like\r\nimport like from \"../images/music/musicListItem/like.png\";\r\nimport noLike from \"../images/music/musicListItem/no-like.png\";\r\n///播放\r\nimport itemPlay from \"../images/music/musicListItem/play.png\";\r\n//MV\r\nimport MV from \"../images/music/musicListItem/mv.png\";\r\n\r\nimport MusicSliderComponent from \"./MusicSliderComponent\";\r\nimport AudioSlider from \"./AudioSlider\";\r\nimport VolumeSlider from \"./VolumeSlider\";\r\n\r\n//时间转换--秒转为00:00格式,例如150 -->> 02:30\r\nconst covertTime = (time) => {\r\n  let min = time / 60;\r\n  min = Math.floor(min);\r\n  min = isNaN(min) ? 0 : min;\r\n  min = min >= 10 ? min : \"0\" + min;\r\n  let sec = time % 60;\r\n  sec = isNaN(sec) ? 0 : sec;\r\n  sec = sec >= 10 ? sec : \"0\" + sec;\r\n  return min + \":\" + sec;\r\n};\r\nexport default function MusicSlider(props) {\r\n  const [musicPath, setMuscipath] = useState(\"\"); //歌曲地址\r\n  const [sliderPause, setSliderPause] = useState(false); //是否正在播放musicSliderComponent\r\n  const [sliderEnd, setSliderEnd] = useState(false); //musicSldierComponent是否播放完毕\r\n  const ownAudioRef = useRef(); //配合MusicSliderComponent的audio\r\n  const [duration, setDuration] = useState(\"0\"); //歌曲总时长\r\n  const [currentAudioTime, setCurrentAudioTime] = useState(\"0%\");\r\n  const [isFirst, setIsFirst] = useState(0); //是否切换歌曲, isFirst== 1时, 表明是切换歌曲, 设置完事件后, 再将isFirst重置为0\r\n\r\n  //action--图片相关变量\r\n  const [forwardImg, setForwardImg] = useState(forwardNoActive); //上一首\r\n  const [playImg, setPlayImg] = useState(playNoActive); //播放/暂停\r\n  const [lastImg, setLastImg] = useState(lastNoActive); //下一首\r\n  const [volumeImg, setVolumeImg] = useState(volumeNoActive);\r\n  //action--音量条变量\r\n  const [sliderVolume, setSliderVolume] = useState(\"20%\");\r\n\r\n  //获取父元素类为name的ele\r\n  const getMusicacbtnEle = (e, name) => {\r\n    if (e.className == name) {\r\n      return e;\r\n    }\r\n    if (e.parentNode.className == name) {\r\n      return e.parentNode;\r\n    }\r\n    return getMusicacbtnEle(e.parentNode, name);\r\n  };\r\n  //MusicSliderComponent播放/暂停\r\n  const handleSliderPause = () => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    let time = audioCurrent.duration;\r\n    setDuration(time);\r\n    setSliderPause(!sliderPause);\r\n  };\r\n  //播放状态--也要更新audio的播放状态\r\n  useEffect(() => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    if (sliderPause) {\r\n      setPlayImg(pauseNoActive);\r\n      audioCurrent.play();\r\n    } else {\r\n      setPlayImg(playNoActive);\r\n      audioCurrent.pause();\r\n    }\r\n  }, [sliderPause]);\r\n\r\n  //播放结束事件--暂停播放, 重置audio当前时间为0\r\n  useEffect(() => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    setSliderPause(false);\r\n    audioCurrent.currentTime = 0;\r\n  }, [sliderEnd]);\r\n  //切换歌曲\r\n  const switchSongs = () => {\r\n    setSliderPause(false);\r\n    //测试切换歌曲\r\n    if (musicPath == mp3Path) {\r\n      setMuscipath(hongyanPath);\r\n    } else {\r\n      setMuscipath(mp3Path);\r\n    }\r\n    setIsFirst(1);\r\n    console.log(\"switch songs\");\r\n  };\r\n  //在ownAudioRef能够播放时, 获取总时长,\r\n  const handleAudioCanPlay = () => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    setDuration(audioCurrent.duration);\r\n  };\r\n\r\n  //ownAudioRef总时长变化后, 播放musicSliderComponent\r\n  useEffect(() => {\r\n    if (isFirst == 1) {\r\n      setSliderPause(true);\r\n      setIsFirst(0);\r\n    }\r\n  }, [duration]);\r\n  /**\r\n   * ownAudioRef 静音事件\r\n   */\r\n\r\n  const mutedAudio = () => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    let volume = audioCurrent.volume;\r\n    if (volume) {\r\n      audioCurrent.volume = 0;\r\n    } else {\r\n      audioCurrent.volume = 0.2;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * AudioSlider事件\r\n   */\r\n  //ownAudioRef每次更新progress\r\n  const handleAudioUpdate = () => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    let audioTime = audioCurrent.currentTime;\r\n    let percent =\r\n      ((parseFloat(audioTime) / parseFloat(duration)) * 100).toFixed(2) + \"%\";\r\n    setCurrentAudioTime(percent);\r\n  };\r\n  //进度条变化onChange事件\r\n  const handleAudioSliderChange = (percent) => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    percent = parseFloat(percent);\r\n    let audioDuration = audioCurrent.duration;\r\n    let time = (audioDuration * percent) / 100;\r\n    percent += \"%\";\r\n    audioCurrent.currentTime = time;\r\n    setCurrentAudioTime(percent);\r\n  };\r\n\r\n  /**\r\n   * 各种按钮事件\r\n   */\r\n  //按钮点击事件\r\n  const handleActionClick = (event) => {\r\n    let id = event.target.id;\r\n    switch (id) {\r\n      case \"forward\":\r\n        switchSongs();\r\n        break;\r\n      case \"play\":\r\n        handleSliderPause();\r\n        break;\r\n      case \"last\":\r\n        switchSongs();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //按钮hover事件 type: 1为mouseOver; 2: mouseOut\r\n  const handleActionHover = (type, event) => {\r\n    let id = event.target.id;\r\n    switch (id) {\r\n      case \"forward\":\r\n        type == 1\r\n          ? setForwardImg(forwardActive)\r\n          : setForwardImg(forwardNoActive);\r\n        break;\r\n      case \"play\":\r\n        if (sliderPause) {\r\n          type == 1 ? setPlayImg(pauseActive) : setPlayImg(pauseNoActive);\r\n        } else {\r\n          type == 1 ? setPlayImg(playActive) : setPlayImg(playNoActive);\r\n        }\r\n        break;\r\n      case \"last\":\r\n        type == 1 ? setLastImg(lastActive) : setLastImg(lastNoActive);\r\n        break;\r\n      case \"volume\":\r\n        type == 1 ? setVolumeImg(volumeActive) : setVolumeImg(volumeNoActive);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //音量条change事件\r\n  const handleVolumeSliderChange = (vol) => {\r\n    //vol是小数, 例如0.52\r\n    let audioRef = ownAudioRef.current;\r\n    audioRef.volume = vol;\r\n    let percent = vol * 100 + \"%\";\r\n    setSliderVolume(percent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMuscipath(mp3Path);\r\n  }, []);\r\n  return (\r\n    <div id={props.id}>\r\n      <audio\r\n        ref={ownAudioRef}\r\n        id=\"audio\"\r\n        src={musicPath}\r\n        onCanPlay={handleAudioCanPlay}\r\n        onTimeUpdate={handleAudioUpdate}\r\n      ></audio>\r\n      {/* <button onClick={handleSliderPause}>开始播放</button>\r\n      <button onClick={switchSongs}>切换歌曲</button>\r\n      <button onClick={mutedAudio}>静音</button> */}\r\n      <div className=\"audioSlider\">\r\n        <AudioSlider\r\n          value={currentAudioTime}\r\n          onChange={handleAudioSliderChange}\r\n        />\r\n        <div className=\"sliderActions\">\r\n          <div className=\"actionRowContainer\">\r\n            <ul\r\n              className=\"actionRow\"\r\n              onClick={handleActionClick}\r\n              onMouseOver={(event) => handleActionHover(1, event)}\r\n              onMouseOut={(event) => handleActionHover(2, event)}\r\n            >\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id=\"forward\"\r\n                  src={forwardImg}\r\n                />\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg50 marginHon10\"\r\n                  id=\"play\"\r\n                  src={playImg}\r\n                />\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id=\"last\"\r\n                  src={lastImg}\r\n                />\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id=\"volume\"\r\n                  src={volumeImg}\r\n                />\r\n                <div style={{ backgroundColor: \"red\", width: 100, display: 'inline-block' }}>\r\n                  <VolumeSlider\r\n                    value={sliderVolume}\r\n                    onChange={handleVolumeSliderChange}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id='list'\r\n                  src={listNoActive}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\SubHome\\SubHome.js",["762","763","764","765","766","767","768","769","770","771","772","773","774","775"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js",["776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],"import React, { useState, useEffect,  } from \"react\";\r\nimport { Input } from 'antd'\r\nimport { useParams } from 'react-router-dom'\r\nimport \"./PlaylistDetail.less\";\r\nimport HTTPUtils from \"../../../HTTPUtils/HTTPUtils\";\r\nimport { exchangeTime } from \"@/Utils\";\r\n// import {AddWhitePng, PlayPng, SharePng, DownloadPng, DownPng, UpPng, ShoucangPng, NoShoucangPng, NoZanPng, ZanPng, ShareRound, CommentRoundPng, GenderMale, GenderFemale,  } from '../../../images/Playlist'\r\nimport AddPng from \"@/images/music/musicListItem/no-add.png\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport AddWhitePng from \"@/images/Playlist/addWhite.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport SharePng from \"@/images/Playlist/share.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport ShoucangPng from \"@/images/Playlist/shoucang.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ZanPng from \"@/images/Playlist/zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport GenderMale from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport MyTextarea from './MyTextarea';\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction PlaylistDetail(props) {\r\n  //歌单id: 6781111608\r\n  const {id} = useParams()\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //数据---歌单详情--评论--评论输入框val\r\n  const [commentVal, setCommentVal] = useState(\"\");\r\n  //数据---歌单tab index  1:歌曲列表; 2: 评论列表; 3: 收藏列表\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  const [basicData, setBasicData] = useState({}); //歌单基本信息(封面, 描述, 创建者etc)\r\n  const [songsData, setSongsData] = useState([]); //获取歌单中的歌曲列表\r\n  const [subscribersData, setSubscriberData] = useState([]); //收藏者数据\r\n  const [hotCommentData, setHotCommentData] = useState([]); //精彩评论数据\r\n  const [comments, setComments] = useState([]); //最新评论数据\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n\r\n  //事件---歌单列表相关数据\r\n  const getPlaylistDetail = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n      offset: '100'\r\n    };\r\n    let data = await HTTPUtils.playlist_detail(params);\r\n    setBasicData(data?.playlist);\r\n    setSongsData(data?.playlist?.tracks);\r\n    setSubscriberData(data?.playlist?.subscribers);\r\n  };\r\n  //事件--歌单评论数据\r\n  const getPlaylistComments = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n    };\r\n    let data = await HTTPUtils.comment_playlist(params);\r\n    setHotCommentData(data.hotComments);\r\n    setComments(data.comments);\r\n  };\r\n  //事件--改变tab index, 切换标签 歌曲列表, 评论列表, 收藏列表\r\n  const changeTabIndex = (event) => {\r\n    console.log(module);\r\n    if (event.target.id) {\r\n      console.log(typeof event.target.id);\r\n      let id = event.target.id;\r\n      setTabIndex(id);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 事件---歌单评论相关事件\r\n   */\r\n  //歌单评论--header输入框输入change事件\r\n  const commentValChange = (event) => {\r\n    // console.log(val.)\r\n    let val = event.target.value;\r\n    // console.log(event.target.blur())\r\n    setCommentVal(val);\r\n  };\r\n  //事件---提交评论\r\n  const submitComment = (val) => {\r\n    console.log('提交评论')\r\n    console.log(val)\r\n  }\r\n  //歌单评论---header评论按钮事件\r\n  const headerComment = () => {};\r\n\r\n  //进入页面, useEffect事件--只调用一次\r\n  useEffect(async () => {\r\n    console.log(exchangeTime(1621262717313));\r\n    console.log('传过来id')\r\n    console.log(id)\r\n    await getPlaylistDetail();\r\n    await getPlaylistComments();\r\n  }, []);\r\n\r\n  //渲染--渲染歌单列表item\r\n  const ListItem = ({ data, index }) => {\r\n    index += 1;\r\n    index = index < 10 ? \"0\" + index : index;\r\n    return (\r\n      <ul\r\n        className={`content-header fontsize18 canSelectItem ${\r\n          (index - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex={index}\r\n      >\r\n        <li className=\"content-header-item flex4\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{data?.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">\r\n          {data?.ar.map((z, i) => {\r\n            if (i == data?.ar.length - 1) {\r\n              return z.name;\r\n            }\r\n            return z.name + \"/\";\r\n          })}\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">\r\n          {data?.al?.name}\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">44</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---评论列表item\r\n  const CommentItem = ({ data }) => {\r\n    return (\r\n      <div className=\"list-item\">\r\n        <div className=\"list-item-left\" style={{ margin: \"5px 0\" }}>\r\n          <img src={data.user.avatarUrl + \"?param=50y50\"} />\r\n        </div>\r\n        <ul className=\"list-item-right\">\r\n          <li style={{ margin: \"5px 0\" }}>\r\n            {data.user.nickname}: {data.content}\r\n          </li>\r\n          {data.beReplied.length > 0 ? (\r\n            <li\r\n              style={{\r\n                padding: \"5px 10px\",\r\n                backgroundColor: \"lightgray\",\r\n                borderRadius: 10,\r\n                margin: \"5px 0\",\r\n              }}\r\n            >\r\n              {data.beReplied[0]?.user?.nickname}: {data.beReplied[0]?.content}\r\n            </li>\r\n          ) : null}\r\n          <li className=\"list-item-date\">\r\n            <div>{exchangeTime(data.time)}</div>\r\n            <div>\r\n              <span className=\"tipoff marginHon10\">举报</span>\r\n              <img src={NoZanPng} className=\"commentImg marginHon10\" />\r\n              <span>{data.likedCount}</span>\r\n              <img src={ShareRound} className=\"commentImg marginHon10\" />\r\n              <img src={CommentRoundPng} className=\"commentImg marginHon10\" />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染---收藏列表item\r\n  const CollectionItem = ({ data }) => {\r\n    return (\r\n      <div className=\"collectin-item-container\">\r\n        <div className=\"collection-item\">\r\n          <img\r\n            src={data?.avatarUrl + \"?param=100y100\"}\r\n            className=\"collection-item-head-portrait marginHon5\"\r\n          />\r\n          <p className=\"marginHon5\">{data?.nickname}</p>\r\n          {data.gender == 1 ? (\r\n            <img\r\n              src={GenderMale}\r\n              className=\"collection-item-gender marginHon5\"\r\n            />\r\n          ) : null}\r\n          {data.gender == 2 ? (\r\n            <img\r\n              src={GenderFemale}\r\n              className=\"collection-item-gender marginHon5\"\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //渲染--歌单详情主要内容\r\n  const RenderContent = () => {\r\n    switch (tabIndex) {\r\n      case \"1\":\r\n        return <Content />;\r\n      case \"2\":\r\n        return <Comment/>;\r\n      case \"3\":\r\n        return <Collection/>;\r\n    }\r\n  };\r\n  //渲染--歌曲列表\r\n  const Content = () => {\r\n    return (\r\n      <div className=\"content\">\r\n        <ul className=\"content-header\">\r\n          <li className=\"content-header-item txtCenter flex4 txtLightGray\">\r\n            音乐标题\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            歌手\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            专辑\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            时长\r\n          </li>\r\n        </ul>\r\n        {songsData.map((item, index) => {\r\n          return <ListItem key={item.id} data={item} index={index} />;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //评论页面\r\n  const Comment = () => {\r\n    return (\r\n      <div className=\"comment\">\r\n        <MyTextarea comment={submitComment}/>\r\n        <div className=\"comment-list\">\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>精彩评论</p>\r\n          <div>\r\n            {hotCommentData.map((item, index) => {\r\n              return <CommentItem key={item.commentId} data={item} />;\r\n            })}\r\n          </div>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>最新评论</p>\r\n          <div>\r\n            {comments.map((item, index) => {\r\n              return <CommentItem key={item.id} data={item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //收藏者页面\r\n  const Collection = () => {\r\n    return (\r\n      <div className=\"collection\">\r\n        {subscribersData.map((item, index) => {\r\n          return <CollectionItem key={item.userId} data={item} />;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 事件\r\n   */\r\n  const addPlaylist = () => {\r\n    console.log('add to play list');\r\n  }\r\n\r\n  //歌单详情页面\r\n  return (\r\n    <div className=\"playlist-detail\">\r\n      <div className=\"playlist-detail-header\">\r\n        <div className=\"header-left headerPadding5\">\r\n          <img\r\n            className=\"header-left-img border-radius-20\"\r\n            src={basicData.coverImgUrl}\r\n          />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <span\r\n              className=\"border-text headerPadding5\"\r\n              style={{ borderRadius: 5 }}\r\n            >\r\n              歌单\r\n            </span>\r\n            <span className=\"playlist-name headerPadding5\">\r\n              {basicData.name}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <img\r\n              src={basicData.creator?.avatarUrl}\r\n              style={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n            />\r\n            <span className=\"headerPadding5\">\r\n              {basicData.creator?.nickname}\r\n            </span>\r\n            <span className=\"headerPadding5\">\r\n              {exchangeTime(basicData.createTime, 1)}创建\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row \">\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 bkCommonColor marginVer5 whiteCol\" onClick={addPlaylist}>\r\n              <img src={PlayPng} className=\"img25 marginHon5\" />\r\n              <span className=\"height25Vertical padding5\">播放全部</span>\r\n              <img src={AddWhitePng} className=\"img25 marginHon5\" />\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer \">\r\n              <img src={SubPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                收藏({subscribersData?.length})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={SharePng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                分享({basicData.shareCount})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={DownloadPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">下载全部</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>标签:</span>\r\n            <span style={{ padding: \"0 10px\" }}>\r\n              {basicData.tags?.map((item, index) => {\r\n                return (\r\n                  <span key={index} style={{ padding: \"0 5px\" }}>\r\n                    {index == basicData.tags?.length - 1\r\n                      ? item\r\n                      : item + \" \" + \"/\"}\r\n                  </span>\r\n                );\r\n              })}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>歌曲数目: {basicData.trackCount}首</span>\r\n            <span className=\"marginHon10\">\r\n              播放量: {parseInt(basicData.playCount / 10000)}万\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 20 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              {basicData.description}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"playlist-detail-content\">\r\n        <ul className=\"tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            id=\"1\"\r\n            className={`tab ${tabIndex === \"1\" ? \"tab-active\" : null}`}\r\n          >\r\n            歌曲列表\r\n          </li>\r\n          <li\r\n            id=\"2\"\r\n            className={`tab ${tabIndex === \"2\" ? \"tab-active\" : null}`}\r\n          >\r\n            评论({basicData.commentCount})\r\n          </li>\r\n          <li\r\n            id=\"3\"\r\n            className={`tab ${tabIndex === \"3\" ? \"tab-active\" : null}`}\r\n          >\r\n            收藏者\r\n          </li>\r\n        </ul>\r\n        <RenderContent />\r\n        {/* <Comment/> */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PlaylistDetail)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\PersonalSuggest\\PersonalSuggest.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, message, Button, Slider } from \"antd\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./PersonalSuggest.less\";\r\nimport PlayImg from \"../../images/music/play-active.png\";\r\nimport Carousel from \"../../widgets/Carousel/Carousel\";\r\nimport { withRouter } from \"react-router\";\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*}\r\n */\r\nfunction PersonalSuggest(props) {\r\n  const [songsData, setSongsData] = useState([]); //推荐音乐\r\n  const [perPlaylists, setPerPlaylists] = useState([]); //推荐歌单数据\r\n  const [videoGroupList, setVideoGroupList] = useState([]); //视频标签列表数据\r\n  const [selGroupID, setSelGroupID] = useState(\"0\"); //选中的视频标签item ID\r\n  const [isSpreadGroupList, setIsSpreadGroupList] = useState(false); //是否展开视频标签列表\r\n  const [perMV, setPerMV] = useState([]); //获取推荐MV数据\r\n  const [allMV, setAllMV] = useState([]); //获取全部MV数据\r\n  const [newMV, setNewMV] = useState([]); //获取最新MV\r\n  const [priContent, setPricontent] = useState([]); //独家放送\r\n  const [priContentList, setPricontentList] = useState([]); //独家放送列表\r\n  const [bannerData, setBannerData] = useState([]); //轮播图数据\r\n\r\n  /**\r\n   * 获取推荐歌曲\r\n   * @returns\r\n   */\r\n  const getPersonlizedSongs = async () => {\r\n    let data = await HTTPUtils.personalized_newsong();\r\n    setSongsData(data.result);\r\n  };\r\n  /**\r\n   * 获取推荐歌单\r\n   * @param {limit: 获取数量, 默认30} obj\r\n   */\r\n  const getPersonlizedPlaylists = async (obj) => {\r\n    let data = await HTTPUtils.personalized(obj);\r\n    setPerPlaylists(data.result);\r\n  };\r\n  const getPersonlizedMV = async () => {\r\n    let data = await HTTPUtils.personalized_mv();\r\n    console.log(data);\r\n    setPerMV(data.result);\r\n  };\r\n  /**\r\n   * 获取独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontent = async () => {\r\n    let data = await HTTPUtils.personalized_privatecontent();\r\n    console.log(\"独家放送1111\");\r\n    console.log(data);\r\n    setPricontent(data.result);\r\n  };\r\n  /**\r\n   * 获取所有独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontentList = async () => {\r\n    let obj = {\r\n      limit: 19,\r\n    };\r\n    let data = await HTTPUtils.personalized_privatecontent_list(obj);\r\n    console.log(\"独家放送列表2222\");\r\n    console.log(data);\r\n    setPricontentList(data.result);\r\n  };\r\n  const getBanner = async () => {\r\n    let obj = {\r\n      type: 0,\r\n    };\r\n    let data = await HTTPUtils.banner(obj);\r\n    console.log(data);\r\n    if (data.code != 200) {\r\n      message.error(data.msg || \"轮播图数据出错\");\r\n      return;\r\n    }\r\n    let list = data.banners;\r\n    list.length = 3;\r\n    console.log(list);\r\n    setBannerData(list);\r\n  };\r\n  /**\r\n   * 页面加载时, 获取推荐系列数据, 只执行一次----------------------------------------|\r\n   */\r\n  useEffect(async () => {\r\n    await getPersonlizedSongs();\r\n    let obj = {\r\n      limit: 12,\r\n    };\r\n    await getPersonlizedPlaylists(obj);\r\n    await getVideoCatList();\r\n    await getplaylistCatlist();\r\n    await getPlaylistCat();\r\n    await getPersonlizedPrivatecontent();\r\n    await getPersonlizedPrivatecontentList();\r\n    await getBanner();\r\n    await getPersonlizedMV();\r\n  }, []);\r\n  /**\r\n   * 需要登录\r\n   * 获取视频系列接口-----------------------------------------------------------------\r\n   */\r\n  //接口---获取视频标签列表\r\n  const getVideoCatList = async () => {\r\n    let data = await HTTPUtils.video_group_list();\r\n    data.data.unshift({ id: \"0\", name: \"全部\" });\r\n    setSelGroupID(data.data[0].id);\r\n    setVideoGroupList(data.data);\r\n  };\r\n  //事件---视频标签item click点击事件\r\n  const selectVideoGroup = async (item) => {\r\n    setSelGroupID(item.id);\r\n    await getVideoGroup(item.id);\r\n  };\r\n  //事件---展开/关闭视频标签列表\r\n  const changeGroupListHeight = () => {\r\n    setIsSpreadGroupList(!isSpreadGroupList);\r\n  };\r\n  //接口---获取相应视频标签下视频列表\r\n  const getVideoGroup = async (id) => {\r\n    if (id == 0) {\r\n      return;\r\n    }\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    console.log(\"id id id\");\r\n    console.log(id);\r\n    let data = await HTTPUtils.video_group(obj);\r\n    console.log(\"视频\");\r\n    console.log(data);\r\n    // let data = await HTTPUtils.video_timeline_all();\r\n  };\r\n\r\n\r\n  /**\r\n   * 进入歌单详情\r\n   */\r\n  const navigateDetail = (item) => {\r\n    props.history.push('/playlist/'+item.id)\r\n  }\r\n\r\n\r\n  /**\r\n   * 歌单系列接口--------------------------------------------||\r\n   */\r\n  /**\r\n   * 获取歌单分类列表\r\n   */\r\n  const getplaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    console.log(data);\r\n  };\r\n  const getPlaylistCat = async (obj) => {\r\n    let bb = {\r\n      cat: \"古风\",\r\n      limit: 10,\r\n    };\r\n    let data = await HTTPUtils.top_playlist(bb);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>personalsuggest</div>\r\n      <Carousel data={bannerData} />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"50px 0\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">最新音乐</p>\r\n          </div>\r\n          <div style={{ flex: 1 }}>\r\n            {songsData.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={`personSongsItem \r\n                                ${index == 0 && \"firstImg\"}\r\n                                ${index == 1 && \"secImg\"}\r\n                                ${index == 2 && \"thirdImg\"}\r\n                            `}\r\n                  key={item.id}\r\n                >\r\n                  <p style={{ width: 50 }}>{index}</p>\r\n                  <img src={item.picUrl + \"?param=200y200\"} />\r\n                  <div>\r\n                    {item.name +\r\n                      \" \" +\r\n                      \"-\" +\r\n                      \" \" +\r\n                      item.song.album.artists[0].name}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">推荐歌单</p>\r\n          </div>\r\n          <div className=\"playlist_suggest\">\r\n            {perPlaylists.map((item, index) => {\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"playlistItem min30PlaylistItem\"\r\n                  // onMouseOver={() => playlistOver(item.id, 1)}\r\n                  // onMouseOut={() => playlistOver(item.id, 2)}\r\n                  onClick={() => navigateDetail(item)}\r\n                >\r\n                  <div className=\"playlistItemContent\">\r\n                    <img\r\n                      className=\"playlistItemContentImg\"\r\n                      src={item.picUrl + \"?param=200y200\"}\r\n                    />\r\n                    <div className=\"playlistItemContentImgCon\">\r\n                      <img src={PlayImg} />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"playlistItemDes\">{item.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">视频标签列表</p>\r\n      </div>\r\n      <div\r\n        className={`videoGroupList\r\n                    ${isSpreadGroupList ? \"autoHeight\" : \"fixedHeight\"}\r\n                    `}\r\n      >\r\n        {videoGroupList.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={item.id}\r\n              className={`\r\n                                    videoGroupListItem \r\n                                    ${\r\n                                      item.id == selGroupID\r\n                                        ? \"videoGroupListItemActive\"\r\n                                        : null\r\n                                    }\r\n                                `}\r\n              onClick={() => selectVideoGroup(item)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        style={{ borderBottom: \"1px solid red\", cursor: \"pointer\" }}\r\n        onClick={changeGroupListHeight}\r\n      >\r\n        <p style={{ color: \"red\", textAlign: \"right\", padding: \"0 20px\" }}>\r\n          展开\r\n        </p>\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContent.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送列表</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContentList.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">推荐MV</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {perMV.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min20PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PersonalSuggest)","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Test\\Test.js",["833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\Playlist.js",["863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\IconListItem\\IconListItem.js",["880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\Carousel\\Carousel.js",["902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\AudioSlider.js",["920","921","922","923","924","925","926","927"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSliderComponent.js",["928","929","930","931","932","933","934"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\VolumeSlider.js",["935"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTPUtils.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\ExchangeTime.js",["936"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js",["937"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\index.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\BasicSlider.js",["938","939","940","941","942","943"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTP.js",["944","945","946","947","948"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\NewestSong\\NewestSong.js",["949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\Artists.js",["974","975","976","977","978","979","980","981","982","983","984","985","986"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Artists.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction Artists(props) {\r\n  const artistsRef = useRef();\r\n  const [types, setTypes] = useState([\r\n    //歌手筛选分类\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"男歌手\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"女歌手\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"乐队组合\",\r\n    },\r\n  ]);\r\n  const [areas, setAreas] = useState([\r\n    //歌手筛选语种\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      name: \"欧美\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"日本\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"韩国\",\r\n    },\r\n    {\r\n      id: 0,\r\n      name: \"其他\",\r\n    },\r\n  ]);\r\n  const [cats, setCats] = useState([\r\n    //筛选名字首字母信息\r\n    { id: -1, name: \"热门\" },\r\n    { id: \"A\", name: \"A\" },\r\n    { id: \"B\", name: \"B\" },\r\n    { id: \"C\", name: \"C\" },\r\n    { id: \"D\", name: \"D\" },\r\n    { id: \"E\", name: \"E\" },\r\n    { id: \"F\", name: \"F\" },\r\n    { id: \"G\", name: \"G\" },\r\n    { id: \"H\", name: \"H\" },\r\n    { id: \"I\", name: \"I\" },\r\n    { id: \"J\", name: \"J\" },\r\n    { id: \"K\", name: \"K\" },\r\n    { id: \"L\", name: \"L\" },\r\n    { id: \"M\", name: \"M\" },\r\n    { id: \"N\", name: \"N\" },\r\n    { id: \"O\", name: \"O\" },\r\n    { id: \"P\", name: \"P\" },\r\n    { id: \"Q\", name: \"Q\" },\r\n    { id: \"R\", name: \"R\" },\r\n    { id: \"S\", name: \"S\" },\r\n    { id: \"T\", name: \"T\" },\r\n    { id: \"U\", name: \"U\" },\r\n    { id: \"V\", name: \"V\" },\r\n    { id: \"W\", name: \"W\" },\r\n    { id: \"X\", name: \"X\" },\r\n    { id: \"Y\", name: \"Y\" },\r\n    { id: \"Z\", name: \"Z\" },\r\n    { id: \"#\", name: \"#\" },\r\n  ]);\r\n  const [activeType, setActiveType] = useState(\"-1\"); //当前active的歌手分类\r\n  const [activeArea, setActiveArea] = useState(\"-1\"); //当前active的歌手语种\r\n  const [activeCat, setActiveCat] = useState(\"-1\"); //当前active的歌手筛选\r\n  const [artistsData, setArtistsData] = useState([]); //歌手分类列表数据\r\n\r\n  /**\r\n   * \r\n   * @param {Number} id : 所选对应类别item的id\r\n   * @param {Number} type : 1为语种; 2位性别和组合; 3为歌手首字母筛选\r\n   */\r\n  const selectCatItem = (id, type) => {\r\n    switch(type) {\r\n      case 1:\r\n        setActiveArea(id);\r\n        break;\r\n      case 2:\r\n        setActiveType(id);\r\n        break;\r\n      case 3:\r\n        setActiveCat(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getArtistsList = async (obj) => {\r\n    let data = await HTTPUtils.artist_list(obj);\r\n    setArtistsData(data.artists)\r\n  }\r\n  //依赖项语种, 男/女/组合, 每次点击都要重新获取数据\r\n  useEffect(async () => {\r\n    let obj = {\r\n      area: activeArea,\r\n      type: activeType,\r\n      initial: activeCat,\r\n    }\r\n    await getArtistsList(obj)\r\n  }, [activeArea, activeType, activeCat])\r\n  //依赖项歌手数据, 每个更新数据, 都要为每个img添加懒加载, \r\n  useEffect(() => {\r\n    let imgs = document.querySelectorAll('.artistsListItemImg');\r\n    imgs.forEach((item, index) => {\r\n      let dataSrc = item.getAttribute('data-imgurl');\r\n      if(item.src != dataSrc) {\r\n        let offsetTop = item.offsetTop;\r\n        let clientHeight = window.innerHeight;\r\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n        if(offsetTop < (clientHeight + scrollTop - 100)) {\r\n          item.src = dataSrc;\r\n        }\r\n      }\r\n    })\r\n  }, [artistsData])\r\n\r\n\r\n  /**\r\n   * 歌手列表系列事件\r\n   */\r\n  const navigateDetail = (item) => {\r\n    console.log(props);\r\n    console.log(item);\r\n    props.history.push('/artist/' + item.id)\r\n  }\r\n\r\n\r\n  //滚动加载图片\r\n  window.onscroll = () => {\r\n    if(artistsRef) {\r\n      let imgs = document.querySelectorAll('.artistsListItemImg');\r\n      imgs.forEach((item, index) => {\r\n        let dataSrc = item.getAttribute('data-imgurl');\r\n        if(item.src != dataSrc) {\r\n          let offsetTop = item.offsetTop;\r\n          let clientHeight = window.innerHeight;\r\n          let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n          if(offsetTop < (clientHeight + scrollTop - 100)) {\r\n            item.src = dataSrc;\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className='artists'\r\n      ref={artistsRef}\r\n    >\r\n      <div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">语种: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {areas.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeArea == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 1)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= areas.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">分类: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {types.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeType == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 2)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= types.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">筛选: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {cats.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    key={item.id}\r\n                    className={`${\r\n                      activeCat == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 3)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= cats.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='artistsList'\r\n      >\r\n        {\r\n          artistsData.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={item.id+'_'+index}\r\n                className='artistsListItem'\r\n                onClick={() => navigateDetail(item)}\r\n              >\r\n                <div className='artistsListItemImgCon'>\r\n                  <img\r\n                    className='artistsListItemImg'\r\n                    src=''\r\n                    data-imgurl={item.picUrl+'?param=280y280'}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p className='artistsListItemName'>\r\n                    {item.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Artists)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js",["987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, withRouter } from 'react-router-dom'\r\nimport \"./ArtistDetail.less\";\r\nimport HTTPUtils from \"@/HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\n\r\nconst { exchangeTime, exchagneDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nfunction ArtistDetail(props) {\r\n  //歌手数据\r\n  const { id } = useParams();\r\n  //歌手详情中 tabs 选中哪个标签  1->4; 专辑->相似歌手\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  //专辑列表浏览模式--1->3; 图列模式->列表模式->大图模式\r\n  const [modalIndex, setModalIndex] = useState(\"1\");\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //歌手详情--歌手数据\r\n  const [artistDetailData, setArtistDetailData] = useState({});\r\n  //歌手详情--相似歌手数据\r\n  const [simiArtistData, setSimiArtistData] = useState([]);\r\n  //歌手详情--获取歌手详细描述\r\n  const [artistDetailDesc, setArtistDetailDest] = useState({});\r\n  //歌手详情--获取歌手MV数据\r\n  const [artistMV, setArtistMV] = useState([]);\r\n  //歌手详情--获取歌手专辑列表\r\n  const [hotAlbumsData, setHotAlbumsData] = useState([]);\r\n  //歌手详情-专辑列表-展开全部歌曲数组 [...{id: false}]\r\n  const [expandAlbumsArr, setExpandAlbumsArr] = useState([]);\r\n  //歌手详情-专辑列表--请求数据offset, 默认为0\r\n  const [albumsOffset, setAlbumOffset] = useState(0);\r\n  //歌手详情--专辑列表--是否还有更多\r\n  const [hasMore, setHasMore] = useState(true);\r\n  //歌手详情-MV列表--请求数据offset, 默认为0\r\n  const [mvsOffset, setMVOffset] = useState(0);\r\n  //歌手详情--MV列表--是否还有更多\r\n  const [hasMVMore, setHasMVMore] = useState(true);\r\n  //歌手详情-整个页面ref\r\n  const artistDetailRef = useRef();\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n\r\n  //切换tab index事件\r\n  const changeTabIndex = (event) => {\r\n    if (event.target.id) {\r\n      setTabIndex(event.target.id);\r\n    }\r\n  };\r\n\r\n  //事件---切换专辑列表浏览模式\r\n  const changeModalIndex = (event) => {\r\n    if (event.target.id || event.target.parentNode.id) {\r\n      setModalIndex(event.target.id || event.target.parentNode.id);\r\n    }\r\n  };\r\n\r\n  //事件---获取歌手详情数据 例如id='3684';\r\n  const getArtistDetail = async () => {\r\n    let params = {\r\n      id: id,\r\n    };\r\n    let data = await HTTPUtils.artist_detail(params);\r\n    setArtistDetailData(data.data?.artist);\r\n  };\r\n\r\n  //事件--获取歌手详情中相似歌手 例如id='3684'\r\n  const getSimiArtist = async () => {\r\n    let params = {\r\n      id: id,\r\n    };\r\n    let data = await HTTPUtils.simi_artist(params);\r\n    setSimiArtistData(data.artists);\r\n  };\r\n\r\n  //事件--获取歌手详细描述\r\n  const getArtistDetailDesc = async () => {\r\n    let params = {\r\n      id: id,\r\n    };\r\n    let data = await HTTPUtils.artist_desc(params);\r\n    setArtistDetailDest(data);\r\n  };\r\n\r\n  //获取歌手MV数据\r\n  const getArtistMV = async () => {\r\n    if (!hasMVMore) {\r\n      return false;\r\n    }\r\n    console.log(props);\r\n    let params = {\r\n      id: id,\r\n      limit: \"10\",\r\n      offset: mvsOffset * 10,\r\n    };\r\n    let data = await HTTPUtils.artist_mv(params);\r\n    if (!data.hasMore) {\r\n      setHasMVMore(false);\r\n    }\r\n    let newMVS = artistMV.length == 0 ? data.mvs : artistMV.concat(data.mvs);\r\n    setArtistMV(newMVS);\r\n  };\r\n\r\n  //事件--获取歌手专辑列表\r\n  const getArtistAlbum = async () => {\r\n    //如果没有更多数据, 直接返回, 不进行操作\r\n    if (!hasMore) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      id: id,\r\n      limit: \"5\",\r\n      offset: albumsOffset * 5,\r\n    };\r\n    let data = await HTTPUtils.artist_album(params);\r\n    let hotalbums = data.hotAlbums;\r\n    if (!data.more) {\r\n      setHasMore(false);\r\n    }\r\n    if (hotalbums.length == 0) {\r\n      return false;\r\n    }\r\n    //存储每个请求专辑详细内容的promise请求\r\n    let arr = [];\r\n    //存储每个专辑列表是否expand\r\n    let expandArr = [];\r\n    hotalbums.map(async (item, index) => {\r\n      arr.push(\r\n        new Promise(async (resolve, reject) => {\r\n          let data = await getAlbumDetail(item);\r\n          return resolve(data);\r\n        })\r\n      );\r\n      expandArr[index] = {};\r\n      expandArr[index][item.id] = false;\r\n    });\r\n    Promise.all(arr).then((res) => {\r\n      hotalbums.map((item, index) => {\r\n        let filterArr = res.filter((zItem) => zItem.album?.id == item.id);\r\n        let filterItem = filterArr[0];\r\n        item.songs = filterItem.songs;\r\n      });\r\n      let newHotAlbumsData = hotAlbumsData.concat(hotalbums);\r\n      let newExpandArr =\r\n        expandAlbumsArr.length == 0\r\n          ? expandArr\r\n          : expandAlbumsArr?.concat(expandArr);\r\n      setExpandAlbumsArr(newExpandArr);\r\n      setHotAlbumsData(newHotAlbumsData);\r\n    });\r\n  };\r\n  //事件--获取专辑具体内容\r\n  const getAlbumDetail = async (item) => {\r\n    let params = {\r\n      id: item.id,\r\n    };\r\n    let data = await HTTPUtils.album(params);\r\n    return data;\r\n  };\r\n  const expandAlbum = (item, index) => {\r\n    let expandArr = JSON.parse(JSON.stringify(expandAlbumsArr));\r\n    if (expandArr[index]) {\r\n      let isExpand = expandArr[index][item.id];\r\n      isExpand = !isExpand;\r\n      expandArr[index][item.id] = isExpand;\r\n    }\r\n    setExpandAlbumsArr(expandArr);\r\n  };\r\n  //页面进入--只进行一次渲染\r\n  useEffect(async () => {\r\n    await getArtistDetail();\r\n    await getSimiArtist();\r\n    await getArtistDetailDesc();\r\n    await getArtistMV();\r\n    await getArtistAlbum();\r\n    //不能用addEventListener,\r\n    window.onscroll = throttle(scrollBottomLoadingAlbum, 1000);\r\n  }, []);\r\n  //节流-节流\r\n  const throttle = (func, delay) => {\r\n    let valid = true;\r\n    return function () {\r\n      if (!valid) {\r\n        return false;\r\n      }\r\n      valid = false;\r\n      setTimeout(() => {\r\n        func();\r\n        valid = true;\r\n      }, delay);\r\n    };\r\n  };\r\n  //事件--滚动到离底部100px时, 修改专辑列表依赖的offset\r\n  const scrollBottomLoadingAlbum = async () => {\r\n    if (artistDetailRef) {\r\n      let scrollTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let clientHeight = window.innerHeight;\r\n      let clientScrollHeight = artistDetailRef.current && artistDetailRef.current.scrollHeight;\r\n      if (scrollTop + clientHeight > clientScrollHeight - 100) {\r\n        setAlbumOffset((offset) => offset + 1);\r\n      }\r\n    }\r\n  };\r\n  //事件--滚动到离底部100px时, 修改MV列表依赖的offset\r\n  const scrollBottomLoadingMV = async () => {\r\n    if (artistDetailRef) {\r\n      let scrollTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let clientHeight = window.innerHeight;\r\n      let clientScrollHeight = artistDetailRef.current.scrollHeight;\r\n      if (scrollTop + clientHeight > clientScrollHeight - 100) {\r\n        setMVOffset((offset) => offset + 1);\r\n      }\r\n    }\r\n  };\r\n  //依赖albumsOffset, 属性值变化, 会重新获取专辑列表\r\n  useEffect(async () => {\r\n    await getArtistAlbum();\r\n  }, [albumsOffset]);\r\n  //依赖mvsOffset, 属性值变化, 会重新获取专辑列表\r\n  useEffect(async () => {\r\n    await getArtistMV();\r\n  }, [mvsOffset]);\r\n  //依赖tabIndex--不同tab, 切换不同的滑动底部加载\r\n  useEffect(() => {\r\n    if (artistDetailRef) {\r\n      if (tabIndex == \"2\") {\r\n        window.onscroll = throttle(scrollBottomLoadingMV, 1000);\r\n      } else if (tabIndex == \"1\") {\r\n        window.onscroll = throttle(scrollBottomLoadingAlbum, 1000);\r\n      } else {\r\n        window.onscroll = null;\r\n      }\r\n    }\r\n  }, [tabIndex]);\r\n  //渲染--专辑列表图列模式--item\r\n  const PicListModalItem = ({ item, index }) => {\r\n    index = index + 1 < 10 ? \"0\" + (index + 1) : index + 1;\r\n    return (\r\n      <ul\r\n        // className={`content-header fontsize18 canSelectItem`}\r\n        className={`content-header fontsize18 canSelectItem ${\r\n          (parseInt(index) - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex=\"1\"\r\n      >\r\n        <li className=\"content-header-item flex6\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{item.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">44</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染--专辑列表--图列模式--内容\r\n  const PiclistModal = ({ item, index }) => {\r\n    return (\r\n      <div style={{ position: \"relative\" }} className=\"piclistModal\">\r\n        <div className=\"header-left\">\r\n          <img\r\n            key={item.picId_str}\r\n            src={item.picUrl + \"?param=150y150\"}\r\n            className=\"img150\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`header-right list-right ${\r\n            !(expandAlbumsArr[index] && expandAlbumsArr[index][item.id])\r\n              ? \"list-right-750\"\r\n              : \"list-right-height-auto\"\r\n          } `}\r\n        >\r\n          <ul className=\"list-right-tabs\">\r\n            <li className=\"list-right-tab font-weight-20\">{item.name}</li>\r\n            <li className=\"list-right-tab\">播放</li>\r\n            <li className=\"list-right-tab\">收藏</li>\r\n          </ul>\r\n          {item.songs.map((zItem, zIndex) => {\r\n            if (\r\n              zIndex == 10 &&\r\n              !(expandAlbumsArr[index] && expandAlbumsArr[index][item.id])\r\n            ) {\r\n              return (\r\n                <p\r\n                  key={zIndex}\r\n                  style={{\r\n                    textAlign: \"right\",\r\n                    height: 60,\r\n                    lineHeight: \"60px\",\r\n                    paddingRight: 20,\r\n                  }}\r\n                  className=\"backGray txtLightGray\"\r\n                  onClick={() => expandAlbum(item, index)}\r\n                >\r\n                  查看全部{item.songs.length}首\r\n                </p>\r\n              );\r\n            }\r\n            return (\r\n              <PicListModalItem\r\n                key={zItem.id + \"_\" + zIndex}\r\n                item={zItem}\r\n                index={zIndex}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--专辑列表--列表模式-item\r\n  const ListModalItem = ({ item, index }) => {\r\n    return (\r\n      <li\r\n        className={`listModal-list-item canSelectItem ${\r\n          index % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex={index}\r\n      >\r\n        <ul className=\"listModal-list-item-container\">\r\n          <li className=\"list-item list-item-left\">\r\n            <img\r\n              src={item.picUrl + \"?param=100y100\"}\r\n              className=\"list-item-img\"\r\n            />\r\n            <p className=\"list-item-left-title\">{item.name}</p>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <p className=\"list-item-center-title\">{item.songs?.length}</p>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <p className=\"list-item-center-title\">\r\n              发行时间: {exchangeTime(item.publishTime, 1)}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    );\r\n  };\r\n  //渲染--专辑列表--列表模式-内容\r\n  const ListModal = () => {\r\n    return (\r\n      <ul className=\"listModal-lists\">\r\n        {hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <ListModalItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染--专辑列表--大图模式--item\r\n  const PicModalItem = ({ item, index }) => {\r\n    return (\r\n      <li className=\"picmodal-list-item\">\r\n        <div className=\"picmodal-list-item-container\">\r\n          <img src={item.picUrl + \"?param=250y150\"} className=\"list-item-img\" />\r\n          <p className=\"list-item-title\">{item.name}</p>\r\n          <p className=\"list-item-subtitle\">{exchangeTime(item.publishTime)}</p>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n  //渲染--专辑列表--大图模式--内容\r\n  const PicModal = (props) => {\r\n    return (\r\n      <ul className=\"picmodal-lists\">\r\n        {hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <PicModalItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---专辑列表\r\n  const RenderContent = () => {\r\n    let View = null;\r\n    switch (modalIndex) {\r\n      case \"1\":\r\n        View = hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <PiclistModal\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        });\r\n        break;\r\n      case \"2\":\r\n        View = <ListModal />;\r\n        break;\r\n      case \"3\":\r\n        View = <PicModal />;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"artist-detail-header artist-detail-lists\">{View}</div>\r\n    );\r\n  };\r\n  //渲染--MV列表--item\r\n  const MVListItem = ({ item, index }) => {\r\n    return (\r\n      <div className=\"mv-list\">\r\n        <div className=\"mv-list-item-container\">\r\n          <div className=\"mv-list-item\">\r\n            <img\r\n              src={item.imgurl + \"?param=200y200\"}\r\n              className=\"list-item-img\"\r\n            />\r\n            <div className=\"list-item-count\">\r\n              <img\r\n                src={PlayPng}\r\n                style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n              />\r\n              <span>\r\n                {item.playCount > 100000\r\n                  ? Math.floor(item.playCount / 10000) + \"万\"\r\n                  : item.playCount}\r\n              </span>\r\n            </div>\r\n            <div className=\"list-item-time\">\r\n              {exchagneDuration(item.duration)}\r\n            </div>\r\n          </div>\r\n          <p className=\"mv-list-item-name\">{item.name}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--MV列表--内容\r\n  const MVList = (props) => {\r\n    return (\r\n      <div className=\"mv-lists\">\r\n        {artistMV.map((item, index) => {\r\n          return (\r\n            <MVListItem key={item.id + \"_\" + index} item={item} index={index} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--歌手详情页面\r\n  const DetailDesc = () => {\r\n    return (\r\n      <div className=\"detail-desc\">\r\n        <p className=\"detail-desc-jianjie detail-desc-title fongsize20\">\r\n          {artistDetailData.name}简介\r\n        </p>\r\n        <p className=\"desc-jianjie-content jianjie-indent-content\">\r\n          {artistDetailDesc.briefDesc}\r\n        </p>\r\n        {artistDetailDesc.introduction?.map((item, index) => {\r\n          let strArr = item.txt.split(\"●\");\r\n          strArr.splice(0, 1);\r\n          let newStrArr = strArr.map((i, j) => (i = \"●\" + i));\r\n          return (\r\n            <div key={index * 10}>\r\n              <p className=\"detail-desc-title fongsize20\">{item.ti}</p>\r\n              {newStrArr.map((str, strIndex) => (\r\n                <p\r\n                  key={index * 10 + \"_\" + strIndex}\r\n                  className=\"desc-jianjie-content\"\r\n                >\r\n                  {str}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--相似歌手--item\r\n  const SimilarListItem = ({ item, index }) => {\r\n    return (\r\n      <div className=\"similar-artist-list\">\r\n        <div className=\"list-item\">\r\n          <img\r\n            key={item.picId_str}\r\n            src={item.picUrl + \"?param=380y380\"}\r\n            className=\"list-item-img\"\r\n          />\r\n          <p className=\"list-item-title\">{item.name}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--相似歌手--内容\r\n  const SimilarList = (props) => {\r\n    return (\r\n      <div className=\"similar-artist-lists\">\r\n        {simiArtistData.map((item, index) => {\r\n          return (\r\n            <SimilarListItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"artist-detail\" ref={artistDetailRef}>\r\n      <div className=\"artist-detail-header\">\r\n        <div className=\"header-left\">\r\n          <img src={artistDetailData.cover} className=\"img200\" />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <p className=\"header-right-title\">{artistDetailData.name}</p>\r\n          <p className=\"header-right-subtitle\">jj lin</p>\r\n          <button className=\"defineButton\">收藏</button>\r\n          <ul className=\"right-line\">\r\n            <li className=\"right-line-item\">\r\n              单曲数: {artistDetailData.musicSize}\r\n            </li>\r\n            <li className=\"right-line-item\">\r\n              专辑数: {artistDetailData.albumSize}\r\n            </li>\r\n            <li className=\"right-line-item\">MV数: {artistDetailData.mvSize}</li>\r\n          </ul>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 30 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              简介: {artistDetailData.briefDesc}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"artist-detail-tabs-container\">\r\n        <ul className=\"artist-detail-tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"1\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"1\"\r\n          >\r\n            专辑\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"2\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"2\"\r\n          >\r\n            MV\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"3\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"3\"\r\n          >\r\n            歌手详情\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"4\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"4\"\r\n          >\r\n            相似歌手\r\n          </li>\r\n        </ul>\r\n        {tabIndex == \"1\" ? (\r\n          <ul className=\"right-imgs\" onClick={changeModalIndex}>\r\n            <li\r\n              id=\"3\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"3\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"3\" ? PicActivePng : PicNoActivePng}\r\n              />\r\n            </li>\r\n            <li\r\n              id=\"2\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"2\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"2\" ? ListActivePng : ListNoActivePng}\r\n              />\r\n            </li>\r\n            <li\r\n              id=\"1\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"1\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"1\" ? PicListActivePng : PicListNoActivePng}\r\n              />\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n      {tabIndex == \"1\" ? <RenderContent /> : null}\r\n      {tabIndex == \"2\" ? <MVList /> : null}\r\n      {tabIndex == \"3\" ? <DetailDesc /> : null}\r\n      {tabIndex == \"4\" ? <SimilarList /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ArtistDetail)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Toplist\\Toplist.js",["1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044"],"import React, { useState, useEffect } from \"react\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./Toplist.less\";\r\nimport RightImg from \"../../images/Toplist/right.png\";\r\nimport PauseImg from \"../../images/Playlist/play.png\";\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction Toplist(props) {\r\n  const [allToplist, setAllToplist] = useState([]); //所有排行榜数据\r\n  const [topFiveData, setTopFiveData] = useState([]); //要显示的top5数据, 以及每个排行榜的top5歌曲\r\n  /**\r\n   * 获取所有排行榜数据\r\n   */\r\n  const getAllToplist = async () => {\r\n    let data = await HTTPUtils.toplist();\r\n    let list = data.list;\r\n    setAllToplist(list);\r\n  };\r\n  /**\r\n   * 获取某个排行榜歌曲数据\r\n   * @param {NUMBER : STRING} id 排行榜id\r\n   * @returns \r\n   */\r\n  const getTopFiveData = async (id) => {\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    let data = await HTTPUtils.playlist_detail(obj);\r\n    return data.playlist;\r\n  };\r\n  //当获取所有排行榜数据, 只要前5个, 循环获取这5个排行榜的热门歌曲, 也只取前5首歌, 然后更新数据---依赖alltoplist\r\n  useEffect(async () => {\r\n    if (allToplist.length == 0) {\r\n      return;\r\n    }\r\n    let newList = JSON.parse(JSON.stringify(allToplist));\r\n    newList.length = 5;\r\n    let arr = [];\r\n    let i = 0;\r\n    while (i < 5) {\r\n      let data = await getTopFiveData(newList[i].id);\r\n      arr.push(data);\r\n      i++;\r\n    }\r\n    setTopFiveData(arr)\r\n  }, [allToplist]);\r\n\r\n\r\n  /**\r\n   * 进入榜单详情\r\n   */\r\n  const navigateDetail = (item) => {\r\n    console.log('navigate detail')\r\n    console.log(item);\r\n    props.history.push(\"/playlist/\"+item.id)\r\n  }\r\n\r\n  //页面加载时, 执行一次获取所有排行榜数据\r\n  useEffect(async () => {\r\n    await getAllToplist();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        className='topfive'\r\n      >\r\n        {topFiveData.map((item, index) => {\r\n            let sub = JSON.parse(JSON.stringify(item.tracks));\r\n            sub.length = 5;\r\n            \r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className='topfiveView'\r\n            >\r\n              <div \r\n                className='topfiveViewLeft'\r\n              >\r\n                <img\r\n                  className='topfiveViewLeftImg'\r\n                  src={item.coverImgUrl}\r\n                />\r\n              </div>\r\n              <div \r\n                className='topfiveViewRight'\r\n              >\r\n                <div>\r\n                  {sub.map((zItem, zIndex) => {\r\n                      let arts = [];\r\n                      zItem.ar && zItem.ar.map((z, i) => {\r\n                          arts.push(z.name)\r\n                      })\r\n                      let artStr = arts.join('/');\r\n                    return (\r\n                      <div\r\n                        key={zItem.id}\r\n                        tabIndex='1'\r\n                        className={`topFiveItem ${\r\n                          zIndex % 2 == 0 ? \"topFiveItemIndex\" : \"\"\r\n                        }`} \r\n                      >\r\n                        <div>\r\n                          <span\r\n                            className={`${\r\n                              zIndex == 0 || zIndex == 1 || zIndex == 2\r\n                                ? \"txtRed\"\r\n                                : \"\"\r\n                            }`}\r\n                          >\r\n                            {zIndex}\r\n                          </span>\r\n                          <span style={{ marginLeft: 10 }}>{zItem.name}</span>\r\n                        </div>\r\n                        <div>\r\n                          <span>{artStr}</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div className='topfiveViewRightMore' onClick={() => navigateDetail(item)}>\r\n                  <span>查看全部</span>\r\n                  <img src={RightImg} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        className='toplistView'\r\n      >\r\n        {allToplist.map((item, index) => {\r\n          return (\r\n            <div key={item.id} onClick={() => navigateDetail(item)}>\r\n              <div className=\"toplistItem\">\r\n                <img className=\"toplistItemImg\" src={item.coverImgUrl} />\r\n                <div className=\"toplistItemRight\">\r\n                  <img className=\"toplistItemRightImg\" src={PauseImg} />\r\n                  <span>{Math.floor(item.playCount / 10000) + '万'}</span>\r\n                </div>\r\n                <div className=\"toplistItemCenter\">\r\n                  <img className=\"toplistItemCenterImg\" src={PlayHoverImg} />\r\n                </div>\r\n              </div>\r\n              <div style={{ fontSize: 18, padding: 10, textAlign: \"left\" }}>\r\n                <p>{item.name}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Toplist)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\Cookies.js",["1045","1046"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\request.js",["1047","1048","1049","1050","1051"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\fetch.js",[],{"ruleId":"1052","severity":1,"message":"1053","line":6,"column":10,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":27},{"ruleId":"1056","replacedBy":"1057"},{"ruleId":"1058","replacedBy":"1059"},{"ruleId":"1052","severity":1,"message":"1060","line":6,"column":10,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1061","line":7,"column":17,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1062","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1063","line":9,"column":8,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1064","line":10,"column":8,"nodeType":"1054","messageId":"1055","endLine":10,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1065","line":11,"column":8,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1066","line":12,"column":8,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1067","line":13,"column":8,"nodeType":"1054","messageId":"1055","endLine":13,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1068","line":14,"column":10,"nodeType":"1054","messageId":"1055","endLine":14,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1069","line":15,"column":22,"nodeType":"1054","messageId":"1055","endLine":15,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1070","line":15,"column":30,"nodeType":"1054","messageId":"1055","endLine":15,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":68,"column":38,"nodeType":"1073","messageId":"1074","endLine":68,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1075","line":89,"column":21,"nodeType":"1073","messageId":"1074","endLine":89,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":107,"column":24,"nodeType":"1073","messageId":"1074","endLine":107,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1076","line":167,"column":11,"nodeType":"1054","messageId":"1055","endLine":167,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":236,"column":43,"nodeType":"1073","messageId":"1074","endLine":236,"endColumn":45},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1080","line":2,"column":34,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1081","line":3,"column":8,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1082","line":5,"column":8,"nodeType":"1054","messageId":"1055","endLine":5,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1083","line":6,"column":8,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1068","line":7,"column":10,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1070","line":8,"column":10,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1069","line":8,"column":17,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1084","line":8,"column":31,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1085","line":25,"column":22,"nodeType":"1054","messageId":"1055","endLine":25,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1087","line":27,"column":5,"nodeType":"1054","endLine":27,"endColumn":14,"suggestions":"1088"},{"ruleId":"1071","severity":1,"message":"1072","line":49,"column":61,"nodeType":"1073","messageId":"1074","endLine":49,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1075","line":33,"column":42,"nodeType":"1073","messageId":"1074","endLine":33,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1075","line":63,"column":20,"nodeType":"1073","messageId":"1074","endLine":63,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":63,"column":48,"nodeType":"1073","messageId":"1074","endLine":63,"endColumn":50},{"ruleId":"1071","severity":1,"message":"1075","line":73,"column":20,"nodeType":"1073","messageId":"1074","endLine":73,"endColumn":22},{"ruleId":"1089","severity":1,"message":"1090","line":86,"column":34,"nodeType":"1091","messageId":"1092","endLine":86,"endColumn":36},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1093","line":27,"column":15,"nodeType":"1091","endLine":31,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1093","line":34,"column":15,"nodeType":"1091","endLine":40,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1094","line":40,"column":8,"nodeType":"1095","endLine":40,"endColumn":23,"suggestions":"1096"},{"ruleId":"1086","severity":1,"message":"1093","line":42,"column":15,"nodeType":"1091","endLine":50,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1097","line":50,"column":8,"nodeType":"1095","endLine":50,"endColumn":23,"suggestions":"1098"},{"ruleId":"1089","severity":1,"message":"1090","line":113,"column":41,"nodeType":"1091","messageId":"1092","endLine":113,"endColumn":43},{"ruleId":"1089","severity":1,"message":"1090","line":126,"column":34,"nodeType":"1091","messageId":"1092","endLine":126,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":142,"column":35,"nodeType":"1091","messageId":"1092","endLine":142,"endColumn":37},{"ruleId":"1089","severity":1,"message":"1090","line":156,"column":37,"nodeType":"1091","messageId":"1092","endLine":156,"endColumn":39},{"ruleId":"1052","severity":1,"message":"1061","line":1,"column":27,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":36},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1081","line":3,"column":8,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1075","line":22,"column":61,"nodeType":"1073","messageId":"1074","endLine":22,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":22,"column":84,"nodeType":"1073","messageId":"1074","endLine":22,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":25,"column":190,"nodeType":"1073","messageId":"1074","endLine":25,"endColumn":192},{"ruleId":"1071","severity":1,"message":"1072","line":25,"column":213,"nodeType":"1073","messageId":"1074","endLine":25,"endColumn":215},{"ruleId":"1071","severity":1,"message":"1075","line":28,"column":61,"nodeType":"1073","messageId":"1074","endLine":28,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":28,"column":84,"nodeType":"1073","messageId":"1074","endLine":28,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":31,"column":189,"nodeType":"1073","messageId":"1074","endLine":31,"endColumn":191},{"ruleId":"1071","severity":1,"message":"1072","line":31,"column":212,"nodeType":"1073","messageId":"1074","endLine":31,"endColumn":214},{"ruleId":"1071","severity":1,"message":"1075","line":34,"column":61,"nodeType":"1073","messageId":"1074","endLine":34,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":34,"column":84,"nodeType":"1073","messageId":"1074","endLine":34,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":37,"column":190,"nodeType":"1073","messageId":"1074","endLine":37,"endColumn":192},{"ruleId":"1071","severity":1,"message":"1072","line":37,"column":213,"nodeType":"1073","messageId":"1074","endLine":37,"endColumn":215},{"ruleId":"1071","severity":1,"message":"1075","line":40,"column":61,"nodeType":"1073","messageId":"1074","endLine":40,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":40,"column":84,"nodeType":"1073","messageId":"1074","endLine":40,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":43,"column":190,"nodeType":"1073","messageId":"1074","endLine":43,"endColumn":192},{"ruleId":"1071","severity":1,"message":"1072","line":43,"column":213,"nodeType":"1073","messageId":"1074","endLine":43,"endColumn":215},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":3,"column":10,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":3,"column":17,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":3,"column":26,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1054","messageId":"1055","endLine":4,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1099","line":37,"column":8,"nodeType":"1095","endLine":37,"endColumn":15,"suggestions":"1100"},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":44,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":103,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":105},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":158,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":160},{"ruleId":"1101","severity":1,"message":"1102","line":55,"column":17,"nodeType":"1103","endLine":55,"endColumn":117},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":45,"nodeType":"1073","messageId":"1074","endLine":57,"endColumn":47},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":100,"nodeType":"1073","messageId":"1074","endLine":57,"endColumn":102},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":159,"nodeType":"1073","messageId":"1074","endLine":57,"endColumn":161},{"ruleId":"1101","severity":1,"message":"1102","line":58,"column":17,"nodeType":"1103","endLine":58,"endColumn":117},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":45,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":47},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":104,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":106},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":163,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":165},{"ruleId":"1101","severity":1,"message":"1102","line":61,"column":17,"nodeType":"1103","endLine":61,"endColumn":117},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1080","line":2,"column":34,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1081","line":3,"column":8,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1104","line":21,"column":8,"nodeType":"1054","messageId":"1055","endLine":21,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1105","line":22,"column":8,"nodeType":"1054","messageId":"1055","endLine":22,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1106","line":24,"column":8,"nodeType":"1054","messageId":"1055","endLine":24,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1107","line":25,"column":8,"nodeType":"1054","messageId":"1055","endLine":25,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1108","line":30,"column":8,"nodeType":"1054","messageId":"1055","endLine":30,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1109","line":31,"column":8,"nodeType":"1054","messageId":"1055","endLine":31,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1110","line":33,"column":8,"nodeType":"1054","messageId":"1055","endLine":33,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1111","line":34,"column":8,"nodeType":"1054","messageId":"1055","endLine":34,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1112","line":37,"column":8,"nodeType":"1054","messageId":"1055","endLine":37,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1113","line":38,"column":8,"nodeType":"1054","messageId":"1055","endLine":38,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1114","line":40,"column":8,"nodeType":"1054","messageId":"1055","endLine":40,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1115","line":41,"column":8,"nodeType":"1054","messageId":"1055","endLine":41,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1116","line":43,"column":8,"nodeType":"1054","messageId":"1055","endLine":43,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1117","line":44,"column":8,"nodeType":"1054","messageId":"1055","endLine":44,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1118","line":48,"column":8,"nodeType":"1054","messageId":"1055","endLine":48,"endColumn":11},{"ruleId":"1052","severity":1,"message":"1119","line":49,"column":8,"nodeType":"1054","messageId":"1055","endLine":49,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1120","line":51,"column":8,"nodeType":"1054","messageId":"1055","endLine":51,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1121","line":52,"column":8,"nodeType":"1054","messageId":"1055","endLine":52,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1122","line":54,"column":8,"nodeType":"1054","messageId":"1055","endLine":54,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1123","line":55,"column":8,"nodeType":"1054","messageId":"1055","endLine":55,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1124","line":57,"column":8,"nodeType":"1054","messageId":"1055","endLine":57,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1125","line":59,"column":8,"nodeType":"1054","messageId":"1055","endLine":59,"endColumn":10},{"ruleId":"1052","severity":1,"message":"1126","line":61,"column":8,"nodeType":"1054","messageId":"1055","endLine":61,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1127","line":66,"column":7,"nodeType":"1054","messageId":"1055","endLine":66,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1128","line":79,"column":21,"nodeType":"1054","messageId":"1055","endLine":79,"endColumn":33},{"ruleId":"1071","severity":1,"message":"1072","line":95,"column":21,"nodeType":"1073","messageId":"1074","endLine":95,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":98,"column":32,"nodeType":"1073","messageId":"1074","endLine":98,"endColumn":34},{"ruleId":"1052","severity":1,"message":"1129","line":101,"column":12,"nodeType":"1054","messageId":"1055","endLine":101,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":132,"column":19,"nodeType":"1073","messageId":"1074","endLine":132,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1072","line":148,"column":17,"nodeType":"1073","messageId":"1074","endLine":148,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1130","line":152,"column":6,"nodeType":"1095","endLine":152,"endColumn":16,"suggestions":"1131"},{"ruleId":"1071","severity":1,"message":"1072","line":214,"column":14,"nodeType":"1073","messageId":"1074","endLine":214,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":220,"column":16,"nodeType":"1073","messageId":"1074","endLine":220,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":222,"column":16,"nodeType":"1073","messageId":"1074","endLine":222,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":226,"column":14,"nodeType":"1073","messageId":"1074","endLine":226,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":229,"column":14,"nodeType":"1073","messageId":"1074","endLine":229,"endColumn":16},{"ruleId":"1101","severity":1,"message":"1102","line":274,"column":17,"nodeType":"1103","endLine":278,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":281,"column":17,"nodeType":"1103","endLine":285,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":288,"column":17,"nodeType":"1103","endLine":292,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":295,"column":17,"nodeType":"1103","endLine":299,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1132","line":6,"column":8,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1133","line":11,"column":7,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1080","line":2,"column":34,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1134","line":21,"column":10,"nodeType":"1054","messageId":"1055","endLine":21,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1135","line":21,"column":17,"nodeType":"1054","messageId":"1055","endLine":21,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1136","line":22,"column":10,"nodeType":"1054","messageId":"1055","endLine":22,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1137","line":22,"column":17,"nodeType":"1054","messageId":"1055","endLine":22,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1075","line":75,"column":19,"nodeType":"1073","messageId":"1074","endLine":75,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1093","line":87,"column":13,"nodeType":"1091","endLine":100,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1072","line":123,"column":12,"nodeType":"1073","messageId":"1074","endLine":123,"endColumn":14},{"ruleId":"1071","severity":1,"message":"1072","line":169,"column":41,"nodeType":"1073","messageId":"1074","endLine":169,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":170,"column":41,"nodeType":"1073","messageId":"1074","endLine":170,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":171,"column":41,"nodeType":"1073","messageId":"1074","endLine":171,"endColumn":43},{"ruleId":"1101","severity":1,"message":"1102","line":176,"column":19,"nodeType":"1103","endLine":176,"endColumn":63},{"ruleId":"1101","severity":1,"message":"1102","line":203,"column":21,"nodeType":"1103","endLine":206,"endColumn":23},{"ruleId":"1101","severity":1,"message":"1102","line":208,"column":23,"nodeType":"1103","endLine":208,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1072","line":233,"column":47,"nodeType":"1073","messageId":"1074","endLine":233,"endColumn":49},{"ruleId":"1101","severity":1,"message":"1102","line":266,"column":17,"nodeType":"1103","endLine":269,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":271,"column":19,"nodeType":"1103","endLine":271,"endColumn":40},{"ruleId":"1101","severity":1,"message":"1102","line":292,"column":17,"nodeType":"1103","endLine":295,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":297,"column":19,"nodeType":"1103","endLine":297,"endColumn":40},{"ruleId":"1101","severity":1,"message":"1102","line":318,"column":17,"nodeType":"1103","endLine":321,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":323,"column":19,"nodeType":"1103","endLine":323,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1138","line":1,"column":17,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1139","line":7,"column":8,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1140","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1141","line":9,"column":8,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1126","line":11,"column":8,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1142","line":12,"column":8,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":20},{"ruleId":"1071","severity":1,"message":"1072","line":24,"column":20,"nodeType":"1073","messageId":"1074","endLine":24,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":30,"column":20,"nodeType":"1073","messageId":"1074","endLine":30,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":36,"column":20,"nodeType":"1073","messageId":"1074","endLine":36,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":42,"column":20,"nodeType":"1073","messageId":"1074","endLine":42,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":19,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":30,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":32},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":41,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":51,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":53},{"ruleId":"1089","severity":1,"message":"1090","line":52,"column":28,"nodeType":"1091","messageId":"1092","endLine":52,"endColumn":30},{"ruleId":"1089","severity":1,"message":"1090","line":56,"column":44,"nodeType":"1091","messageId":"1092","endLine":56,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1072","line":61,"column":50,"nodeType":"1073","messageId":"1074","endLine":61,"endColumn":52},{"ruleId":"1086","severity":1,"message":"1093","line":102,"column":13,"nodeType":"1091","endLine":107,"endColumn":4},{"ruleId":"1101","severity":1,"message":"1102","line":158,"column":9,"nodeType":"1103","endLine":161,"endColumn":11},{"ruleId":"1101","severity":1,"message":"1102","line":164,"column":13,"nodeType":"1103","endLine":167,"endColumn":15},{"ruleId":"1071","severity":1,"message":"1072","line":187,"column":42,"nodeType":"1073","messageId":"1074","endLine":187,"endColumn":44},{"ruleId":"1101","severity":1,"message":"1102","line":203,"column":23,"nodeType":"1103","endLine":206,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":215,"column":52,"nodeType":"1073","messageId":"1074","endLine":215,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":238,"column":43,"nodeType":"1073","messageId":"1074","endLine":238,"endColumn":45},{"ruleId":"1071","severity":1,"message":"1072","line":258,"column":45,"nodeType":"1073","messageId":"1074","endLine":258,"endColumn":47},{"ruleId":"1071","severity":1,"message":"1072","line":259,"column":33,"nodeType":"1073","messageId":"1074","endLine":259,"endColumn":35},{"ruleId":"1101","severity":1,"message":"1102","line":271,"column":17,"nodeType":"1103","endLine":274,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":276,"column":19,"nodeType":"1103","endLine":276,"endColumn":58},{"ruleId":"1101","severity":1,"message":"1102","line":280,"column":19,"nodeType":"1103","endLine":280,"endColumn":60},{"ruleId":"1101","severity":1,"message":"1102","line":282,"column":19,"nodeType":"1103","endLine":282,"endColumn":57},{"ruleId":"1101","severity":1,"message":"1102","line":288,"column":19,"nodeType":"1103","endLine":288,"endColumn":63},{"ruleId":"1086","severity":1,"message":"1093","line":32,"column":13,"nodeType":"1091","endLine":46,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1072","line":33,"column":27,"nodeType":"1073","messageId":"1074","endLine":33,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1093","line":48,"column":13,"nodeType":"1091","endLine":50,"endColumn":4},{"ruleId":"1101","severity":1,"message":"1102","line":68,"column":17,"nodeType":"1103","endLine":71,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1090","line":79,"column":55,"nodeType":"1091","messageId":"1092","endLine":79,"endColumn":57},{"ruleId":"1071","severity":1,"message":"1072","line":88,"column":38,"nodeType":"1073","messageId":"1074","endLine":88,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1072","line":94,"column":38,"nodeType":"1073","messageId":"1074","endLine":94,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1072","line":94,"column":53,"nodeType":"1073","messageId":"1074","endLine":94,"endColumn":55},{"ruleId":"1071","severity":1,"message":"1072","line":94,"column":68,"nodeType":"1073","messageId":"1074","endLine":94,"endColumn":70},{"ruleId":"1101","severity":1,"message":"1102","line":112,"column":19,"nodeType":"1103","endLine":112,"endColumn":41},{"ruleId":"1101","severity":1,"message":"1102","line":126,"column":17,"nodeType":"1103","endLine":126,"endColumn":74},{"ruleId":"1101","severity":1,"message":"1102","line":128,"column":19,"nodeType":"1103","endLine":128,"endColumn":73},{"ruleId":"1101","severity":1,"message":"1102","line":132,"column":19,"nodeType":"1103","endLine":132,"endColumn":78},{"ruleId":"1052","severity":1,"message":"1143","line":7,"column":17,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1144","line":26,"column":17,"nodeType":"1054","messageId":"1055","endLine":26,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1145","line":53,"column":16,"nodeType":"1054","messageId":"1055","endLine":53,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1093","line":115,"column":13,"nodeType":"1091","endLine":122,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1075","line":128,"column":19,"nodeType":"1073","messageId":"1074","endLine":128,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1075","line":143,"column":21,"nodeType":"1073","messageId":"1074","endLine":143,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":168,"column":34,"nodeType":"1073","messageId":"1074","endLine":168,"endColumn":36},{"ruleId":"1071","severity":1,"message":"1075","line":174,"column":25,"nodeType":"1073","messageId":"1074","endLine":174,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":188,"column":34,"nodeType":"1073","messageId":"1074","endLine":188,"endColumn":36},{"ruleId":"1071","severity":1,"message":"1075","line":194,"column":25,"nodeType":"1073","messageId":"1074","endLine":194,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":209,"column":33,"nodeType":"1073","messageId":"1074","endLine":209,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1075","line":215,"column":25,"nodeType":"1073","messageId":"1074","endLine":215,"endColumn":27},{"ruleId":"1101","severity":1,"message":"1102","line":233,"column":19,"nodeType":"1103","endLine":237,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1146","line":20,"column":19,"nodeType":"1054","messageId":"1055","endLine":20,"endColumn":29},{"ruleId":"1052","severity":1,"message":"1147","line":68,"column":9,"nodeType":"1054","messageId":"1055","endLine":68,"endColumn":22},{"ruleId":"1101","severity":1,"message":"1102","line":78,"column":11,"nodeType":"1103","endLine":81,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":82,"column":11,"nodeType":"1103","endLine":82,"endColumn":59},{"ruleId":"1052","severity":1,"message":"1148","line":109,"column":9,"nodeType":"1054","messageId":"1055","endLine":109,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":112,"column":29,"nodeType":"1073","messageId":"1074","endLine":112,"endColumn":31},{"ruleId":"1071","severity":1,"message":"1075","line":124,"column":42,"nodeType":"1073","messageId":"1074","endLine":124,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1075","line":138,"column":43,"nodeType":"1073","messageId":"1074","endLine":138,"endColumn":45},{"ruleId":"1071","severity":1,"message":"1072","line":161,"column":49,"nodeType":"1073","messageId":"1074","endLine":161,"endColumn":51},{"ruleId":"1071","severity":1,"message":"1072","line":162,"column":50,"nodeType":"1073","messageId":"1074","endLine":162,"endColumn":52},{"ruleId":"1071","severity":1,"message":"1075","line":164,"column":41,"nodeType":"1073","messageId":"1074","endLine":164,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1075","line":214,"column":21,"nodeType":"1073","messageId":"1074","endLine":214,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1093","line":279,"column":13,"nodeType":"1091","endLine":284,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1149","line":284,"column":6,"nodeType":"1095","endLine":284,"endColumn":18,"suggestions":"1150"},{"ruleId":"1086","severity":1,"message":"1093","line":295,"column":13,"nodeType":"1091","endLine":320,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1075","line":301,"column":21,"nodeType":"1073","messageId":"1074","endLine":301,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1151","line":320,"column":6,"nodeType":"1095","endLine":320,"endColumn":8,"suggestions":"1152"},{"ruleId":"1052","severity":1,"message":"1153","line":361,"column":11,"nodeType":"1054","messageId":"1055","endLine":361,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":385,"column":25,"nodeType":"1073","messageId":"1074","endLine":385,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":393,"column":25,"nodeType":"1073","messageId":"1074","endLine":393,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":408,"column":27,"nodeType":"1073","messageId":"1074","endLine":408,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":419,"column":13,"nodeType":"1103","endLine":419,"endColumn":79},{"ruleId":"1101","severity":1,"message":"1102","line":423,"column":13,"nodeType":"1103","endLine":423,"endColumn":72},{"ruleId":"1101","severity":1,"message":"1102","line":457,"column":27,"nodeType":"1103","endLine":462,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":463,"column":27,"nodeType":"1103","endLine":466,"endColumn":29},{"ruleId":"1052","severity":1,"message":"1084","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1154","line":3,"column":10,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1155","line":6,"column":8,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1156","line":7,"column":8,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1157","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1158","line":9,"column":8,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1159","line":11,"column":8,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1161","line":13,"column":8,"nodeType":"1054","messageId":"1055","endLine":13,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1162","line":14,"column":8,"nodeType":"1054","messageId":"1055","endLine":14,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1163","line":15,"column":8,"nodeType":"1054","messageId":"1055","endLine":15,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1164","line":16,"column":8,"nodeType":"1054","messageId":"1055","endLine":16,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1165","line":17,"column":8,"nodeType":"1054","messageId":"1055","endLine":17,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1166","line":18,"column":8,"nodeType":"1054","messageId":"1055","endLine":18,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1167","line":24,"column":9,"nodeType":"1054","messageId":"1055","endLine":24,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1168","line":24,"column":23,"nodeType":"1054","messageId":"1055","endLine":24,"endColumn":39},{"ruleId":"1052","severity":1,"message":"1169","line":28,"column":10,"nodeType":"1054","messageId":"1055","endLine":28,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1170","line":46,"column":10,"nodeType":"1054","messageId":"1055","endLine":46,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1171","line":46,"column":22,"nodeType":"1054","messageId":"1055","endLine":46,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":113,"column":33,"nodeType":"1073","messageId":"1074","endLine":113,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":115,"column":71,"nodeType":"1073","messageId":"1074","endLine":115,"endColumn":73},{"ruleId":"1052","severity":1,"message":"1172","line":139,"column":9,"nodeType":"1054","messageId":"1055","endLine":139,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":165,"column":15,"nodeType":"1103","endLine":173,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":166,"column":34,"nodeType":"1073","messageId":"1074","endLine":166,"endColumn":36},{"ruleId":"1101","severity":1,"message":"1102","line":197,"column":19,"nodeType":"1103","endLine":204,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":230,"column":17,"nodeType":"1103","endLine":237,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1093","line":247,"column":13,"nodeType":"1091","endLine":252,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1173","line":252,"column":6,"nodeType":"1095","endLine":252,"endColumn":15,"suggestions":"1174"},{"ruleId":"1086","severity":1,"message":"1093","line":253,"column":13,"nodeType":"1091","endLine":257,"endColumn":4},{"ruleId":"1101","severity":1,"message":"1102","line":325,"column":23,"nodeType":"1103","endLine":328,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1175","line":45,"column":9,"nodeType":"1054","messageId":"1055","endLine":45,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1176","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1177","line":16,"column":8,"nodeType":"1054","messageId":"1055","endLine":16,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1178","line":19,"column":8,"nodeType":"1054","messageId":"1055","endLine":19,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1179","line":33,"column":10,"nodeType":"1054","messageId":"1055","endLine":33,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1180","line":83,"column":9,"nodeType":"1054","messageId":"1055","endLine":83,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1181","line":95,"column":9,"nodeType":"1054","messageId":"1055","endLine":95,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1093","line":98,"column":13,"nodeType":"1091","endLine":104,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1182","line":104,"column":6,"nodeType":"1095","endLine":104,"endColumn":8,"suggestions":"1183"},{"ruleId":"1071","severity":1,"message":"1072","line":113,"column":27,"nodeType":"1073","messageId":"1074","endLine":113,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":121,"column":15,"nodeType":"1103","endLine":121,"endColumn":60},{"ruleId":"1101","severity":1,"message":"1102","line":124,"column":15,"nodeType":"1103","endLine":124,"endColumn":58},{"ruleId":"1071","severity":1,"message":"1072","line":147,"column":19,"nodeType":"1073","messageId":"1074","endLine":147,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":165,"column":11,"nodeType":"1103","endLine":165,"endColumn":61},{"ruleId":"1101","severity":1,"message":"1102","line":187,"column":15,"nodeType":"1103","endLine":187,"endColumn":72},{"ruleId":"1101","severity":1,"message":"1102","line":189,"column":15,"nodeType":"1103","endLine":189,"endColumn":74},{"ruleId":"1101","severity":1,"message":"1102","line":190,"column":15,"nodeType":"1103","endLine":190,"endColumn":79},{"ruleId":"1101","severity":1,"message":"1102","line":202,"column":11,"nodeType":"1103","endLine":205,"endColumn":13},{"ruleId":"1071","severity":1,"message":"1072","line":207,"column":24,"nodeType":"1073","messageId":"1074","endLine":207,"endColumn":26},{"ruleId":"1101","severity":1,"message":"1102","line":208,"column":13,"nodeType":"1103","endLine":211,"endColumn":15},{"ruleId":"1071","severity":1,"message":"1072","line":213,"column":24,"nodeType":"1073","messageId":"1074","endLine":213,"endColumn":26},{"ruleId":"1101","severity":1,"message":"1102","line":214,"column":13,"nodeType":"1103","endLine":217,"endColumn":15},{"ruleId":"1184","severity":1,"message":"1185","line":226,"column":5,"nodeType":"1186","messageId":"1187","endLine":233,"endColumn":6},{"ruleId":"1101","severity":1,"message":"1102","line":296,"column":11,"nodeType":"1103","endLine":299,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":314,"column":13,"nodeType":"1103","endLine":317,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":327,"column":15,"nodeType":"1103","endLine":327,"endColumn":65},{"ruleId":"1101","severity":1,"message":"1102","line":329,"column":15,"nodeType":"1103","endLine":329,"endColumn":69},{"ruleId":"1101","severity":1,"message":"1102","line":332,"column":15,"nodeType":"1103","endLine":332,"endColumn":54},{"ruleId":"1101","severity":1,"message":"1102","line":338,"column":15,"nodeType":"1103","endLine":338,"endColumn":56},{"ruleId":"1101","severity":1,"message":"1102","line":344,"column":15,"nodeType":"1103","endLine":344,"endColumn":59},{"ruleId":"1071","severity":1,"message":"1072","line":354,"column":28,"nodeType":"1073","messageId":"1074","endLine":354,"endColumn":30},{"ruleId":"1188","severity":1,"message":"1189","line":356,"column":36,"nodeType":"1073","messageId":"1190","endLine":356,"endColumn":37},{"ruleId":"1101","severity":1,"message":"1102","line":390,"column":15,"nodeType":"1103","endLine":390,"endColumn":75},{"ruleId":"1052","severity":1,"message":"1061","line":1,"column":27,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":36},{"ruleId":"1052","severity":1,"message":"1155","line":4,"column":8,"nodeType":"1054","messageId":"1055","endLine":4,"endColumn":14},{"ruleId":"1071","severity":1,"message":"1072","line":109,"column":34,"nodeType":"1073","messageId":"1074","endLine":109,"endColumn":36},{"ruleId":"1071","severity":1,"message":"1072","line":128,"column":26,"nodeType":"1073","messageId":"1074","endLine":128,"endColumn":28},{"ruleId":"1089","severity":1,"message":"1090","line":146,"column":35,"nodeType":"1091","messageId":"1092","endLine":146,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1072","line":147,"column":63,"nodeType":"1073","messageId":"1074","endLine":147,"endColumn":65},{"ruleId":"1071","severity":1,"message":"1072","line":153,"column":32,"nodeType":"1073","messageId":"1074","endLine":153,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1093","line":178,"column":13,"nodeType":"1091","endLine":186,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1191","line":186,"column":6,"nodeType":"1095","endLine":186,"endColumn":8,"suggestions":"1192"},{"ruleId":"1086","severity":1,"message":"1093","line":226,"column":13,"nodeType":"1091","endLine":228,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1193","line":228,"column":6,"nodeType":"1095","endLine":228,"endColumn":20,"suggestions":"1194"},{"ruleId":"1086","severity":1,"message":"1093","line":230,"column":13,"nodeType":"1091","endLine":232,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1195","line":232,"column":6,"nodeType":"1095","endLine":232,"endColumn":17,"suggestions":"1196"},{"ruleId":"1071","severity":1,"message":"1072","line":236,"column":20,"nodeType":"1073","messageId":"1074","endLine":236,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":238,"column":27,"nodeType":"1073","messageId":"1074","endLine":238,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":252,"column":37,"nodeType":"1073","messageId":"1074","endLine":252,"endColumn":39},{"ruleId":"1101","severity":1,"message":"1102","line":260,"column":15,"nodeType":"1103","endLine":260,"endColumn":60},{"ruleId":"1101","severity":1,"message":"1102","line":263,"column":15,"nodeType":"1103","endLine":263,"endColumn":58},{"ruleId":"1101","severity":1,"message":"1102","line":293,"column":11,"nodeType":"1103","endLine":297,"endColumn":13},{"ruleId":"1071","severity":1,"message":"1072","line":313,"column":22,"nodeType":"1073","messageId":"1074","endLine":313,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1072","line":349,"column":21,"nodeType":"1073","messageId":"1074","endLine":349,"endColumn":23},{"ruleId":"1101","severity":1,"message":"1102","line":355,"column":13,"nodeType":"1103","endLine":358,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":394,"column":11,"nodeType":"1103","endLine":394,"endColumn":81},{"ruleId":"1101","severity":1,"message":"1102","line":451,"column":13,"nodeType":"1103","endLine":454,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":456,"column":15,"nodeType":"1103","endLine":459,"endColumn":17},{"ruleId":"1101","severity":1,"message":"1102","line":523,"column":11,"nodeType":"1103","endLine":527,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":553,"column":11,"nodeType":"1103","endLine":553,"endColumn":66},{"ruleId":"1101","severity":1,"message":"1102","line":590,"column":15,"nodeType":"1103","endLine":590,"endColumn":75},{"ruleId":"1071","severity":1,"message":"1072","line":599,"column":24,"nodeType":"1073","messageId":"1074","endLine":599,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":607,"column":24,"nodeType":"1073","messageId":"1074","endLine":607,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":615,"column":24,"nodeType":"1073","messageId":"1074","endLine":615,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":623,"column":24,"nodeType":"1073","messageId":"1074","endLine":623,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":630,"column":19,"nodeType":"1073","messageId":"1074","endLine":630,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1072","line":635,"column":28,"nodeType":"1073","messageId":"1074","endLine":635,"endColumn":30},{"ruleId":"1101","severity":1,"message":"1102","line":638,"column":15,"nodeType":"1103","endLine":641,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":640,"column":33,"nodeType":"1073","messageId":"1074","endLine":640,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":646,"column":28,"nodeType":"1073","messageId":"1074","endLine":646,"endColumn":30},{"ruleId":"1101","severity":1,"message":"1102","line":649,"column":15,"nodeType":"1103","endLine":652,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":651,"column":33,"nodeType":"1073","messageId":"1074","endLine":651,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":657,"column":28,"nodeType":"1073","messageId":"1074","endLine":657,"endColumn":30},{"ruleId":"1101","severity":1,"message":"1102","line":660,"column":15,"nodeType":"1103","endLine":663,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":662,"column":33,"nodeType":"1073","messageId":"1074","endLine":662,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":668,"column":17,"nodeType":"1073","messageId":"1074","endLine":668,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":669,"column":17,"nodeType":"1073","messageId":"1074","endLine":669,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":670,"column":17,"nodeType":"1073","messageId":"1074","endLine":670,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":671,"column":17,"nodeType":"1073","messageId":"1074","endLine":671,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1197","line":6,"column":9,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":8,"column":23,"nodeType":"1073","messageId":"1074","endLine":8,"endColumn":25},{"ruleId":"1188","severity":1,"message":"1189","line":9,"column":18,"nodeType":"1073","messageId":"1190","endLine":9,"endColumn":19},{"ruleId":"1188","severity":1,"message":"1189","line":11,"column":18,"nodeType":"1073","messageId":"1190","endLine":11,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":18,"column":17,"nodeType":"1073","messageId":"1074","endLine":18,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1075","line":8,"column":16,"nodeType":"1073","messageId":"1074","endLine":8,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":44,"column":20,"nodeType":"1073","messageId":"1074","endLine":44,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1198","line":21,"column":9,"nodeType":"1054","messageId":"1055","endLine":21,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1199","line":51,"column":9,"nodeType":"1054","messageId":"1055","endLine":51,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":68,"column":36,"nodeType":"1073","messageId":"1074","endLine":68,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":36,"nodeType":"1073","messageId":"1074","endLine":80,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":96,"column":34,"nodeType":"1073","messageId":"1074","endLine":96,"endColumn":36},{"ruleId":"1086","severity":1,"message":"1200","line":129,"column":6,"nodeType":"1095","endLine":129,"endColumn":8,"suggestions":"1201"},{"ruleId":"1086","severity":1,"message":"1202","line":191,"column":6,"nodeType":"1095","endLine":191,"endColumn":12,"suggestions":"1203"},{"ruleId":"1052","severity":1,"message":"1198","line":18,"column":9,"nodeType":"1054","messageId":"1055","endLine":18,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1199","line":55,"column":9,"nodeType":"1054","messageId":"1055","endLine":55,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":72,"column":36,"nodeType":"1073","messageId":"1074","endLine":72,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":84,"column":36,"nodeType":"1073","messageId":"1074","endLine":84,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":100,"column":34,"nodeType":"1073","messageId":"1074","endLine":100,"endColumn":36},{"ruleId":"1086","severity":1,"message":"1200","line":133,"column":6,"nodeType":"1095","endLine":133,"endColumn":8,"suggestions":"1204"},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1205","line":4,"column":5,"nodeType":"1054","messageId":"1055","endLine":4,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1206","line":9,"column":10,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1207","line":9,"column":16,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1208","line":10,"column":10,"nodeType":"1054","messageId":"1055","endLine":10,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1209","line":10,"column":16,"nodeType":"1054","messageId":"1055","endLine":10,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1210","line":11,"column":10,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1211","line":11,"column":19,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":29},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1053","line":6,"column":10,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":27},{"ruleId":"1056","replacedBy":"1212"},{"ruleId":"1058","replacedBy":"1213"},{"ruleId":"1052","severity":1,"message":"1060","line":6,"column":10,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1062","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1063","line":9,"column":8,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1065","line":11,"column":8,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1066","line":12,"column":8,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1067","line":13,"column":8,"nodeType":"1054","messageId":"1055","endLine":13,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1068","line":14,"column":10,"nodeType":"1054","messageId":"1055","endLine":14,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1069","line":15,"column":22,"nodeType":"1054","messageId":"1055","endLine":15,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1070","line":15,"column":30,"nodeType":"1054","messageId":"1055","endLine":15,"endColumn":35},{"ruleId":"1086","severity":1,"message":"1214","line":22,"column":6,"nodeType":"1095","endLine":22,"endColumn":8,"suggestions":"1215"},{"ruleId":"1052","severity":1,"message":"1132","line":6,"column":8,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1133","line":12,"column":7,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":13},{"ruleId":"1071","severity":1,"message":"1072","line":68,"column":38,"nodeType":"1073","messageId":"1074","endLine":68,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1075","line":89,"column":21,"nodeType":"1073","messageId":"1074","endLine":89,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":107,"column":24,"nodeType":"1073","messageId":"1074","endLine":107,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1076","line":167,"column":11,"nodeType":"1054","messageId":"1055","endLine":167,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":236,"column":43,"nodeType":"1073","messageId":"1074","endLine":236,"endColumn":45},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1080","line":2,"column":34,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1081","line":3,"column":8,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1082","line":5,"column":8,"nodeType":"1054","messageId":"1055","endLine":5,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1083","line":6,"column":8,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1068","line":7,"column":10,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1070","line":8,"column":10,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1069","line":8,"column":17,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1084","line":8,"column":31,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1085","line":25,"column":22,"nodeType":"1054","messageId":"1055","endLine":25,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1216","line":27,"column":5,"nodeType":"1054","endLine":27,"endColumn":14,"suggestions":"1217"},{"ruleId":"1071","severity":1,"message":"1072","line":50,"column":61,"nodeType":"1073","messageId":"1074","endLine":50,"endColumn":63},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1093","line":27,"column":15,"nodeType":"1091","endLine":31,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1093","line":34,"column":15,"nodeType":"1091","endLine":40,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1094","line":40,"column":8,"nodeType":"1095","endLine":40,"endColumn":23,"suggestions":"1218"},{"ruleId":"1086","severity":1,"message":"1093","line":42,"column":15,"nodeType":"1091","endLine":50,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1097","line":50,"column":8,"nodeType":"1095","endLine":50,"endColumn":23,"suggestions":"1219"},{"ruleId":"1089","severity":1,"message":"1090","line":113,"column":41,"nodeType":"1091","messageId":"1092","endLine":113,"endColumn":43},{"ruleId":"1089","severity":1,"message":"1090","line":126,"column":34,"nodeType":"1091","messageId":"1092","endLine":126,"endColumn":36},{"ruleId":"1089","severity":1,"message":"1090","line":142,"column":35,"nodeType":"1091","messageId":"1092","endLine":142,"endColumn":37},{"ruleId":"1089","severity":1,"message":"1090","line":156,"column":37,"nodeType":"1091","messageId":"1092","endLine":156,"endColumn":39},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1080","line":2,"column":34,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1081","line":3,"column":8,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1104","line":21,"column":8,"nodeType":"1054","messageId":"1055","endLine":21,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1105","line":22,"column":8,"nodeType":"1054","messageId":"1055","endLine":22,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1106","line":24,"column":8,"nodeType":"1054","messageId":"1055","endLine":24,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1107","line":25,"column":8,"nodeType":"1054","messageId":"1055","endLine":25,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1108","line":30,"column":8,"nodeType":"1054","messageId":"1055","endLine":30,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1109","line":31,"column":8,"nodeType":"1054","messageId":"1055","endLine":31,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1110","line":33,"column":8,"nodeType":"1054","messageId":"1055","endLine":33,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1112","line":37,"column":8,"nodeType":"1054","messageId":"1055","endLine":37,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1113","line":38,"column":8,"nodeType":"1054","messageId":"1055","endLine":38,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1114","line":40,"column":8,"nodeType":"1054","messageId":"1055","endLine":40,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1115","line":41,"column":8,"nodeType":"1054","messageId":"1055","endLine":41,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1116","line":43,"column":8,"nodeType":"1054","messageId":"1055","endLine":43,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1117","line":44,"column":8,"nodeType":"1054","messageId":"1055","endLine":44,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1118","line":48,"column":8,"nodeType":"1054","messageId":"1055","endLine":48,"endColumn":11},{"ruleId":"1052","severity":1,"message":"1119","line":49,"column":8,"nodeType":"1054","messageId":"1055","endLine":49,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1120","line":51,"column":8,"nodeType":"1054","messageId":"1055","endLine":51,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1121","line":52,"column":8,"nodeType":"1054","messageId":"1055","endLine":52,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1122","line":54,"column":8,"nodeType":"1054","messageId":"1055","endLine":54,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1123","line":55,"column":8,"nodeType":"1054","messageId":"1055","endLine":55,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1124","line":57,"column":8,"nodeType":"1054","messageId":"1055","endLine":57,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1125","line":59,"column":8,"nodeType":"1054","messageId":"1055","endLine":59,"endColumn":10},{"ruleId":"1052","severity":1,"message":"1126","line":61,"column":8,"nodeType":"1054","messageId":"1055","endLine":61,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1127","line":66,"column":7,"nodeType":"1054","messageId":"1055","endLine":66,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1128","line":79,"column":21,"nodeType":"1054","messageId":"1055","endLine":79,"endColumn":33},{"ruleId":"1071","severity":1,"message":"1072","line":95,"column":21,"nodeType":"1073","messageId":"1074","endLine":95,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":98,"column":32,"nodeType":"1073","messageId":"1074","endLine":98,"endColumn":34},{"ruleId":"1052","severity":1,"message":"1129","line":101,"column":12,"nodeType":"1054","messageId":"1055","endLine":101,"endColumn":28},{"ruleId":"1071","severity":1,"message":"1072","line":132,"column":19,"nodeType":"1073","messageId":"1074","endLine":132,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1072","line":148,"column":17,"nodeType":"1073","messageId":"1074","endLine":148,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1130","line":152,"column":6,"nodeType":"1095","endLine":152,"endColumn":16,"suggestions":"1220"},{"ruleId":"1052","severity":1,"message":"1221","line":157,"column":9,"nodeType":"1054","messageId":"1055","endLine":157,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":214,"column":14,"nodeType":"1073","messageId":"1074","endLine":214,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":220,"column":16,"nodeType":"1073","messageId":"1074","endLine":220,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":222,"column":16,"nodeType":"1073","messageId":"1074","endLine":222,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":226,"column":14,"nodeType":"1073","messageId":"1074","endLine":226,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":229,"column":14,"nodeType":"1073","messageId":"1074","endLine":229,"endColumn":16},{"ruleId":"1101","severity":1,"message":"1102","line":273,"column":17,"nodeType":"1103","endLine":277,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":280,"column":17,"nodeType":"1103","endLine":284,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":287,"column":17,"nodeType":"1103","endLine":291,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":294,"column":17,"nodeType":"1103","endLine":298,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":307,"column":17,"nodeType":"1103","endLine":311,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1138","line":1,"column":17,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1139","line":7,"column":8,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1140","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1141","line":9,"column":8,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1126","line":11,"column":8,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1142","line":12,"column":8,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":20},{"ruleId":"1071","severity":1,"message":"1072","line":24,"column":20,"nodeType":"1073","messageId":"1074","endLine":24,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":30,"column":20,"nodeType":"1073","messageId":"1074","endLine":30,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":36,"column":20,"nodeType":"1073","messageId":"1074","endLine":36,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":42,"column":20,"nodeType":"1073","messageId":"1074","endLine":42,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":19,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":30,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":32},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":41,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1075","line":48,"column":51,"nodeType":"1073","messageId":"1074","endLine":48,"endColumn":53},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1176","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1177","line":16,"column":8,"nodeType":"1054","messageId":"1055","endLine":16,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1178","line":19,"column":8,"nodeType":"1054","messageId":"1055","endLine":19,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1179","line":33,"column":10,"nodeType":"1054","messageId":"1055","endLine":33,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1180","line":83,"column":9,"nodeType":"1054","messageId":"1055","endLine":83,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1181","line":95,"column":9,"nodeType":"1054","messageId":"1055","endLine":95,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1093","line":98,"column":13,"nodeType":"1091","endLine":104,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1182","line":104,"column":6,"nodeType":"1095","endLine":104,"endColumn":8,"suggestions":"1222"},{"ruleId":"1071","severity":1,"message":"1072","line":113,"column":27,"nodeType":"1073","messageId":"1074","endLine":113,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":121,"column":15,"nodeType":"1103","endLine":121,"endColumn":60},{"ruleId":"1101","severity":1,"message":"1102","line":124,"column":15,"nodeType":"1103","endLine":124,"endColumn":58},{"ruleId":"1071","severity":1,"message":"1072","line":147,"column":19,"nodeType":"1073","messageId":"1074","endLine":147,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":165,"column":11,"nodeType":"1103","endLine":165,"endColumn":61},{"ruleId":"1101","severity":1,"message":"1102","line":187,"column":15,"nodeType":"1103","endLine":187,"endColumn":72},{"ruleId":"1101","severity":1,"message":"1102","line":189,"column":15,"nodeType":"1103","endLine":189,"endColumn":74},{"ruleId":"1101","severity":1,"message":"1102","line":190,"column":15,"nodeType":"1103","endLine":190,"endColumn":79},{"ruleId":"1101","severity":1,"message":"1102","line":202,"column":11,"nodeType":"1103","endLine":205,"endColumn":13},{"ruleId":"1071","severity":1,"message":"1072","line":207,"column":24,"nodeType":"1073","messageId":"1074","endLine":207,"endColumn":26},{"ruleId":"1101","severity":1,"message":"1102","line":208,"column":13,"nodeType":"1103","endLine":211,"endColumn":15},{"ruleId":"1071","severity":1,"message":"1072","line":213,"column":24,"nodeType":"1073","messageId":"1074","endLine":213,"endColumn":26},{"ruleId":"1101","severity":1,"message":"1102","line":214,"column":13,"nodeType":"1103","endLine":217,"endColumn":15},{"ruleId":"1184","severity":1,"message":"1185","line":226,"column":5,"nodeType":"1186","messageId":"1187","endLine":233,"endColumn":6},{"ruleId":"1101","severity":1,"message":"1102","line":304,"column":11,"nodeType":"1103","endLine":307,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":322,"column":13,"nodeType":"1103","endLine":325,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":335,"column":15,"nodeType":"1103","endLine":335,"endColumn":65},{"ruleId":"1101","severity":1,"message":"1102","line":337,"column":15,"nodeType":"1103","endLine":337,"endColumn":69},{"ruleId":"1101","severity":1,"message":"1102","line":340,"column":15,"nodeType":"1103","endLine":340,"endColumn":54},{"ruleId":"1101","severity":1,"message":"1102","line":346,"column":15,"nodeType":"1103","endLine":346,"endColumn":56},{"ruleId":"1101","severity":1,"message":"1102","line":352,"column":15,"nodeType":"1103","endLine":352,"endColumn":59},{"ruleId":"1071","severity":1,"message":"1072","line":362,"column":28,"nodeType":"1073","messageId":"1074","endLine":362,"endColumn":30},{"ruleId":"1188","severity":1,"message":"1189","line":364,"column":36,"nodeType":"1073","messageId":"1190","endLine":364,"endColumn":37},{"ruleId":"1101","severity":1,"message":"1102","line":398,"column":15,"nodeType":"1103","endLine":398,"endColumn":75},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1080","line":2,"column":34,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1134","line":22,"column":10,"nodeType":"1054","messageId":"1055","endLine":22,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1135","line":22,"column":17,"nodeType":"1054","messageId":"1055","endLine":22,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1136","line":23,"column":10,"nodeType":"1054","messageId":"1055","endLine":23,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1137","line":23,"column":17,"nodeType":"1054","messageId":"1055","endLine":23,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1075","line":76,"column":19,"nodeType":"1073","messageId":"1074","endLine":76,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1093","line":88,"column":13,"nodeType":"1091","endLine":101,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1072","line":124,"column":12,"nodeType":"1073","messageId":"1074","endLine":124,"endColumn":14},{"ruleId":"1071","severity":1,"message":"1072","line":179,"column":41,"nodeType":"1073","messageId":"1074","endLine":179,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":180,"column":41,"nodeType":"1073","messageId":"1074","endLine":180,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1072","line":181,"column":41,"nodeType":"1073","messageId":"1074","endLine":181,"endColumn":43},{"ruleId":"1101","severity":1,"message":"1102","line":186,"column":19,"nodeType":"1103","endLine":186,"endColumn":63},{"ruleId":"1101","severity":1,"message":"1102","line":214,"column":21,"nodeType":"1103","endLine":217,"endColumn":23},{"ruleId":"1101","severity":1,"message":"1102","line":219,"column":23,"nodeType":"1103","endLine":219,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1072","line":244,"column":47,"nodeType":"1073","messageId":"1074","endLine":244,"endColumn":49},{"ruleId":"1101","severity":1,"message":"1102","line":277,"column":17,"nodeType":"1103","endLine":280,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":282,"column":19,"nodeType":"1103","endLine":282,"endColumn":40},{"ruleId":"1101","severity":1,"message":"1102","line":303,"column":17,"nodeType":"1103","endLine":306,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":308,"column":19,"nodeType":"1103","endLine":308,"endColumn":40},{"ruleId":"1101","severity":1,"message":"1102","line":329,"column":17,"nodeType":"1103","endLine":332,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":334,"column":19,"nodeType":"1103","endLine":334,"endColumn":40},{"ruleId":"1052","severity":1,"message":"1084","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1154","line":3,"column":10,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1155","line":6,"column":8,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1156","line":7,"column":8,"nodeType":"1054","messageId":"1055","endLine":7,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1157","line":8,"column":8,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":19},{"ruleId":"1052","severity":1,"message":"1158","line":9,"column":8,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1159","line":11,"column":8,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":26},{"ruleId":"1052","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1054","messageId":"1055","endLine":12,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1161","line":13,"column":8,"nodeType":"1054","messageId":"1055","endLine":13,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1162","line":14,"column":8,"nodeType":"1054","messageId":"1055","endLine":14,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1163","line":15,"column":8,"nodeType":"1054","messageId":"1055","endLine":15,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1164","line":16,"column":8,"nodeType":"1054","messageId":"1055","endLine":16,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1165","line":17,"column":8,"nodeType":"1054","messageId":"1055","endLine":17,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1166","line":18,"column":8,"nodeType":"1054","messageId":"1055","endLine":18,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1167","line":24,"column":9,"nodeType":"1054","messageId":"1055","endLine":24,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1168","line":24,"column":23,"nodeType":"1054","messageId":"1055","endLine":24,"endColumn":39},{"ruleId":"1052","severity":1,"message":"1169","line":28,"column":10,"nodeType":"1054","messageId":"1055","endLine":28,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1170","line":46,"column":10,"nodeType":"1054","messageId":"1055","endLine":46,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1171","line":46,"column":22,"nodeType":"1054","messageId":"1055","endLine":46,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":113,"column":33,"nodeType":"1073","messageId":"1074","endLine":113,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":115,"column":71,"nodeType":"1073","messageId":"1074","endLine":115,"endColumn":73},{"ruleId":"1052","severity":1,"message":"1172","line":139,"column":9,"nodeType":"1054","messageId":"1055","endLine":139,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":165,"column":15,"nodeType":"1103","endLine":173,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":166,"column":34,"nodeType":"1073","messageId":"1074","endLine":166,"endColumn":36},{"ruleId":"1101","severity":1,"message":"1102","line":197,"column":19,"nodeType":"1103","endLine":204,"endColumn":21},{"ruleId":"1101","severity":1,"message":"1102","line":230,"column":17,"nodeType":"1103","endLine":237,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1093","line":247,"column":13,"nodeType":"1091","endLine":252,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1173","line":252,"column":6,"nodeType":"1095","endLine":252,"endColumn":15,"suggestions":"1223"},{"ruleId":"1086","severity":1,"message":"1093","line":253,"column":13,"nodeType":"1091","endLine":257,"endColumn":4},{"ruleId":"1101","severity":1,"message":"1102","line":325,"column":23,"nodeType":"1103","endLine":328,"endColumn":25},{"ruleId":"1089","severity":1,"message":"1090","line":52,"column":28,"nodeType":"1091","messageId":"1092","endLine":52,"endColumn":30},{"ruleId":"1089","severity":1,"message":"1090","line":56,"column":44,"nodeType":"1091","messageId":"1092","endLine":56,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1072","line":61,"column":50,"nodeType":"1073","messageId":"1074","endLine":61,"endColumn":52},{"ruleId":"1086","severity":1,"message":"1093","line":102,"column":13,"nodeType":"1091","endLine":107,"endColumn":4},{"ruleId":"1101","severity":1,"message":"1102","line":158,"column":9,"nodeType":"1103","endLine":161,"endColumn":11},{"ruleId":"1101","severity":1,"message":"1102","line":164,"column":13,"nodeType":"1103","endLine":167,"endColumn":15},{"ruleId":"1071","severity":1,"message":"1072","line":187,"column":42,"nodeType":"1073","messageId":"1074","endLine":187,"endColumn":44},{"ruleId":"1101","severity":1,"message":"1102","line":203,"column":23,"nodeType":"1103","endLine":206,"endColumn":25},{"ruleId":"1071","severity":1,"message":"1072","line":215,"column":52,"nodeType":"1073","messageId":"1074","endLine":215,"endColumn":54},{"ruleId":"1071","severity":1,"message":"1072","line":238,"column":43,"nodeType":"1073","messageId":"1074","endLine":238,"endColumn":45},{"ruleId":"1071","severity":1,"message":"1072","line":258,"column":45,"nodeType":"1073","messageId":"1074","endLine":258,"endColumn":47},{"ruleId":"1071","severity":1,"message":"1072","line":259,"column":33,"nodeType":"1073","messageId":"1074","endLine":259,"endColumn":35},{"ruleId":"1101","severity":1,"message":"1102","line":271,"column":17,"nodeType":"1103","endLine":274,"endColumn":19},{"ruleId":"1101","severity":1,"message":"1102","line":276,"column":19,"nodeType":"1103","endLine":276,"endColumn":58},{"ruleId":"1101","severity":1,"message":"1102","line":280,"column":19,"nodeType":"1103","endLine":280,"endColumn":60},{"ruleId":"1101","severity":1,"message":"1102","line":282,"column":19,"nodeType":"1103","endLine":282,"endColumn":57},{"ruleId":"1101","severity":1,"message":"1102","line":288,"column":19,"nodeType":"1103","endLine":288,"endColumn":63},{"ruleId":"1052","severity":1,"message":"1061","line":1,"column":27,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":36},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":2,"column":10,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":2,"column":26,"nodeType":"1054","messageId":"1055","endLine":2,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1081","line":3,"column":8,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1075","line":22,"column":61,"nodeType":"1073","messageId":"1074","endLine":22,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":22,"column":84,"nodeType":"1073","messageId":"1074","endLine":22,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":25,"column":190,"nodeType":"1073","messageId":"1074","endLine":25,"endColumn":192},{"ruleId":"1071","severity":1,"message":"1072","line":25,"column":213,"nodeType":"1073","messageId":"1074","endLine":25,"endColumn":215},{"ruleId":"1071","severity":1,"message":"1075","line":28,"column":61,"nodeType":"1073","messageId":"1074","endLine":28,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":28,"column":84,"nodeType":"1073","messageId":"1074","endLine":28,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":31,"column":189,"nodeType":"1073","messageId":"1074","endLine":31,"endColumn":191},{"ruleId":"1071","severity":1,"message":"1072","line":31,"column":212,"nodeType":"1073","messageId":"1074","endLine":31,"endColumn":214},{"ruleId":"1071","severity":1,"message":"1075","line":34,"column":61,"nodeType":"1073","messageId":"1074","endLine":34,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":34,"column":84,"nodeType":"1073","messageId":"1074","endLine":34,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":37,"column":190,"nodeType":"1073","messageId":"1074","endLine":37,"endColumn":192},{"ruleId":"1071","severity":1,"message":"1072","line":37,"column":213,"nodeType":"1073","messageId":"1074","endLine":37,"endColumn":215},{"ruleId":"1071","severity":1,"message":"1075","line":40,"column":61,"nodeType":"1073","messageId":"1074","endLine":40,"endColumn":63},{"ruleId":"1071","severity":1,"message":"1072","line":40,"column":84,"nodeType":"1073","messageId":"1074","endLine":40,"endColumn":86},{"ruleId":"1071","severity":1,"message":"1075","line":43,"column":190,"nodeType":"1073","messageId":"1074","endLine":43,"endColumn":192},{"ruleId":"1071","severity":1,"message":"1072","line":43,"column":213,"nodeType":"1073","messageId":"1074","endLine":43,"endColumn":215},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1078","line":3,"column":10,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":15},{"ruleId":"1052","severity":1,"message":"1079","line":3,"column":17,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1060","line":3,"column":26,"nodeType":"1054","messageId":"1055","endLine":3,"endColumn":32},{"ruleId":"1052","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1054","messageId":"1055","endLine":4,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1099","line":37,"column":8,"nodeType":"1095","endLine":37,"endColumn":15,"suggestions":"1224"},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":44,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":46},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":103,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":105},{"ruleId":"1071","severity":1,"message":"1072","line":54,"column":158,"nodeType":"1073","messageId":"1074","endLine":54,"endColumn":160},{"ruleId":"1101","severity":1,"message":"1102","line":55,"column":17,"nodeType":"1103","endLine":55,"endColumn":117},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":45,"nodeType":"1073","messageId":"1074","endLine":57,"endColumn":47},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":100,"nodeType":"1073","messageId":"1074","endLine":57,"endColumn":102},{"ruleId":"1071","severity":1,"message":"1072","line":57,"column":159,"nodeType":"1073","messageId":"1074","endLine":57,"endColumn":161},{"ruleId":"1101","severity":1,"message":"1102","line":58,"column":17,"nodeType":"1103","endLine":58,"endColumn":117},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":45,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":47},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":104,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":106},{"ruleId":"1071","severity":1,"message":"1072","line":60,"column":163,"nodeType":"1073","messageId":"1074","endLine":60,"endColumn":165},{"ruleId":"1101","severity":1,"message":"1102","line":61,"column":17,"nodeType":"1103","endLine":61,"endColumn":117},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1205","line":4,"column":5,"nodeType":"1054","messageId":"1055","endLine":4,"endColumn":16},{"ruleId":"1052","severity":1,"message":"1206","line":9,"column":10,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1207","line":9,"column":16,"nodeType":"1054","messageId":"1055","endLine":9,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1208","line":10,"column":10,"nodeType":"1054","messageId":"1055","endLine":10,"endColumn":14},{"ruleId":"1052","severity":1,"message":"1209","line":10,"column":16,"nodeType":"1054","messageId":"1055","endLine":10,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1210","line":11,"column":10,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":17},{"ruleId":"1052","severity":1,"message":"1211","line":11,"column":19,"nodeType":"1054","messageId":"1055","endLine":11,"endColumn":29},{"ruleId":"1052","severity":1,"message":"1198","line":21,"column":9,"nodeType":"1054","messageId":"1055","endLine":21,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1199","line":51,"column":9,"nodeType":"1054","messageId":"1055","endLine":51,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":68,"column":36,"nodeType":"1073","messageId":"1074","endLine":68,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":80,"column":36,"nodeType":"1073","messageId":"1074","endLine":80,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":96,"column":34,"nodeType":"1073","messageId":"1074","endLine":96,"endColumn":36},{"ruleId":"1086","severity":1,"message":"1200","line":129,"column":6,"nodeType":"1095","endLine":129,"endColumn":8,"suggestions":"1225"},{"ruleId":"1086","severity":1,"message":"1202","line":191,"column":6,"nodeType":"1095","endLine":191,"endColumn":12,"suggestions":"1226"},{"ruleId":"1052","severity":1,"message":"1077","line":1,"column":38,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1175","line":45,"column":9,"nodeType":"1054","messageId":"1055","endLine":45,"endColumn":12},{"ruleId":"1052","severity":1,"message":"1061","line":1,"column":27,"nodeType":"1054","messageId":"1055","endLine":1,"endColumn":36},{"ruleId":"1052","severity":1,"message":"1198","line":18,"column":9,"nodeType":"1054","messageId":"1055","endLine":18,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1199","line":55,"column":9,"nodeType":"1054","messageId":"1055","endLine":55,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":72,"column":36,"nodeType":"1073","messageId":"1074","endLine":72,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":84,"column":36,"nodeType":"1073","messageId":"1074","endLine":84,"endColumn":38},{"ruleId":"1071","severity":1,"message":"1072","line":100,"column":34,"nodeType":"1073","messageId":"1074","endLine":100,"endColumn":36},{"ruleId":"1086","severity":1,"message":"1200","line":133,"column":6,"nodeType":"1095","endLine":133,"endColumn":8,"suggestions":"1227"},{"ruleId":"1071","severity":1,"message":"1075","line":33,"column":42,"nodeType":"1073","messageId":"1074","endLine":33,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1075","line":63,"column":20,"nodeType":"1073","messageId":"1074","endLine":63,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1075","line":63,"column":48,"nodeType":"1073","messageId":"1074","endLine":63,"endColumn":50},{"ruleId":"1071","severity":1,"message":"1075","line":73,"column":20,"nodeType":"1073","messageId":"1074","endLine":73,"endColumn":22},{"ruleId":"1089","severity":1,"message":"1090","line":86,"column":34,"nodeType":"1091","messageId":"1092","endLine":86,"endColumn":36},{"ruleId":"1052","severity":1,"message":"1146","line":20,"column":19,"nodeType":"1054","messageId":"1055","endLine":20,"endColumn":29},{"ruleId":"1052","severity":1,"message":"1147","line":68,"column":9,"nodeType":"1054","messageId":"1055","endLine":68,"endColumn":22},{"ruleId":"1101","severity":1,"message":"1102","line":78,"column":11,"nodeType":"1103","endLine":81,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":82,"column":11,"nodeType":"1103","endLine":82,"endColumn":59},{"ruleId":"1052","severity":1,"message":"1148","line":109,"column":9,"nodeType":"1054","messageId":"1055","endLine":109,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":112,"column":29,"nodeType":"1073","messageId":"1074","endLine":112,"endColumn":31},{"ruleId":"1071","severity":1,"message":"1075","line":124,"column":42,"nodeType":"1073","messageId":"1074","endLine":124,"endColumn":44},{"ruleId":"1071","severity":1,"message":"1075","line":138,"column":43,"nodeType":"1073","messageId":"1074","endLine":138,"endColumn":45},{"ruleId":"1071","severity":1,"message":"1072","line":161,"column":49,"nodeType":"1073","messageId":"1074","endLine":161,"endColumn":51},{"ruleId":"1071","severity":1,"message":"1072","line":162,"column":50,"nodeType":"1073","messageId":"1074","endLine":162,"endColumn":52},{"ruleId":"1071","severity":1,"message":"1075","line":164,"column":41,"nodeType":"1073","messageId":"1074","endLine":164,"endColumn":43},{"ruleId":"1071","severity":1,"message":"1075","line":214,"column":21,"nodeType":"1073","messageId":"1074","endLine":214,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1093","line":279,"column":13,"nodeType":"1091","endLine":284,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1149","line":284,"column":6,"nodeType":"1095","endLine":284,"endColumn":18,"suggestions":"1228"},{"ruleId":"1086","severity":1,"message":"1093","line":295,"column":13,"nodeType":"1091","endLine":320,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1075","line":301,"column":21,"nodeType":"1073","messageId":"1074","endLine":301,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1151","line":320,"column":6,"nodeType":"1095","endLine":320,"endColumn":8,"suggestions":"1229"},{"ruleId":"1052","severity":1,"message":"1153","line":361,"column":11,"nodeType":"1054","messageId":"1055","endLine":361,"endColumn":16},{"ruleId":"1071","severity":1,"message":"1072","line":385,"column":25,"nodeType":"1073","messageId":"1074","endLine":385,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":393,"column":25,"nodeType":"1073","messageId":"1074","endLine":393,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":408,"column":27,"nodeType":"1073","messageId":"1074","endLine":408,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":419,"column":13,"nodeType":"1103","endLine":419,"endColumn":79},{"ruleId":"1101","severity":1,"message":"1102","line":423,"column":13,"nodeType":"1103","endLine":423,"endColumn":72},{"ruleId":"1101","severity":1,"message":"1102","line":457,"column":27,"nodeType":"1103","endLine":462,"endColumn":29},{"ruleId":"1101","severity":1,"message":"1102","line":463,"column":27,"nodeType":"1103","endLine":466,"endColumn":29},{"ruleId":"1052","severity":1,"message":"1143","line":8,"column":17,"nodeType":"1054","messageId":"1055","endLine":8,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1144","line":27,"column":17,"nodeType":"1054","messageId":"1055","endLine":27,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1145","line":54,"column":16,"nodeType":"1054","messageId":"1055","endLine":54,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1093","line":116,"column":13,"nodeType":"1091","endLine":123,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1075","line":129,"column":19,"nodeType":"1073","messageId":"1074","endLine":129,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1075","line":157,"column":21,"nodeType":"1073","messageId":"1074","endLine":157,"endColumn":23},{"ruleId":"1071","severity":1,"message":"1072","line":182,"column":34,"nodeType":"1073","messageId":"1074","endLine":182,"endColumn":36},{"ruleId":"1071","severity":1,"message":"1075","line":188,"column":25,"nodeType":"1073","messageId":"1074","endLine":188,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":202,"column":34,"nodeType":"1073","messageId":"1074","endLine":202,"endColumn":36},{"ruleId":"1071","severity":1,"message":"1075","line":208,"column":25,"nodeType":"1073","messageId":"1074","endLine":208,"endColumn":27},{"ruleId":"1071","severity":1,"message":"1072","line":223,"column":33,"nodeType":"1073","messageId":"1074","endLine":223,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1075","line":229,"column":25,"nodeType":"1073","messageId":"1074","endLine":229,"endColumn":27},{"ruleId":"1101","severity":1,"message":"1102","line":248,"column":19,"nodeType":"1103","endLine":252,"endColumn":21},{"ruleId":"1052","severity":1,"message":"1155","line":5,"column":8,"nodeType":"1054","messageId":"1055","endLine":5,"endColumn":14},{"ruleId":"1071","severity":1,"message":"1072","line":113,"column":34,"nodeType":"1073","messageId":"1074","endLine":113,"endColumn":36},{"ruleId":"1071","severity":1,"message":"1072","line":133,"column":26,"nodeType":"1073","messageId":"1074","endLine":133,"endColumn":28},{"ruleId":"1089","severity":1,"message":"1090","line":151,"column":35,"nodeType":"1091","messageId":"1092","endLine":151,"endColumn":37},{"ruleId":"1071","severity":1,"message":"1072","line":152,"column":63,"nodeType":"1073","messageId":"1074","endLine":152,"endColumn":65},{"ruleId":"1071","severity":1,"message":"1072","line":158,"column":32,"nodeType":"1073","messageId":"1074","endLine":158,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1093","line":183,"column":13,"nodeType":"1091","endLine":191,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1230","line":191,"column":6,"nodeType":"1095","endLine":191,"endColumn":8,"suggestions":"1231"},{"ruleId":"1086","severity":1,"message":"1093","line":231,"column":13,"nodeType":"1091","endLine":233,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1193","line":233,"column":6,"nodeType":"1095","endLine":233,"endColumn":20,"suggestions":"1232"},{"ruleId":"1086","severity":1,"message":"1093","line":235,"column":13,"nodeType":"1091","endLine":237,"endColumn":4},{"ruleId":"1086","severity":1,"message":"1195","line":237,"column":6,"nodeType":"1095","endLine":237,"endColumn":17,"suggestions":"1233"},{"ruleId":"1071","severity":1,"message":"1072","line":241,"column":20,"nodeType":"1073","messageId":"1074","endLine":241,"endColumn":22},{"ruleId":"1071","severity":1,"message":"1072","line":243,"column":27,"nodeType":"1073","messageId":"1074","endLine":243,"endColumn":29},{"ruleId":"1071","severity":1,"message":"1072","line":257,"column":37,"nodeType":"1073","messageId":"1074","endLine":257,"endColumn":39},{"ruleId":"1101","severity":1,"message":"1102","line":265,"column":15,"nodeType":"1103","endLine":265,"endColumn":60},{"ruleId":"1101","severity":1,"message":"1102","line":268,"column":15,"nodeType":"1103","endLine":268,"endColumn":58},{"ruleId":"1101","severity":1,"message":"1102","line":298,"column":11,"nodeType":"1103","endLine":302,"endColumn":13},{"ruleId":"1071","severity":1,"message":"1072","line":318,"column":22,"nodeType":"1073","messageId":"1074","endLine":318,"endColumn":24},{"ruleId":"1071","severity":1,"message":"1072","line":354,"column":21,"nodeType":"1073","messageId":"1074","endLine":354,"endColumn":23},{"ruleId":"1101","severity":1,"message":"1102","line":360,"column":13,"nodeType":"1103","endLine":363,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":399,"column":11,"nodeType":"1103","endLine":399,"endColumn":81},{"ruleId":"1101","severity":1,"message":"1102","line":456,"column":13,"nodeType":"1103","endLine":459,"endColumn":15},{"ruleId":"1101","severity":1,"message":"1102","line":461,"column":15,"nodeType":"1103","endLine":464,"endColumn":17},{"ruleId":"1101","severity":1,"message":"1102","line":528,"column":11,"nodeType":"1103","endLine":532,"endColumn":13},{"ruleId":"1101","severity":1,"message":"1102","line":558,"column":11,"nodeType":"1103","endLine":558,"endColumn":66},{"ruleId":"1101","severity":1,"message":"1102","line":595,"column":15,"nodeType":"1103","endLine":595,"endColumn":75},{"ruleId":"1071","severity":1,"message":"1072","line":604,"column":24,"nodeType":"1073","messageId":"1074","endLine":604,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":612,"column":24,"nodeType":"1073","messageId":"1074","endLine":612,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":620,"column":24,"nodeType":"1073","messageId":"1074","endLine":620,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":628,"column":24,"nodeType":"1073","messageId":"1074","endLine":628,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":635,"column":19,"nodeType":"1073","messageId":"1074","endLine":635,"endColumn":21},{"ruleId":"1071","severity":1,"message":"1072","line":640,"column":28,"nodeType":"1073","messageId":"1074","endLine":640,"endColumn":30},{"ruleId":"1101","severity":1,"message":"1102","line":643,"column":15,"nodeType":"1103","endLine":646,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":645,"column":33,"nodeType":"1073","messageId":"1074","endLine":645,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":651,"column":28,"nodeType":"1073","messageId":"1074","endLine":651,"endColumn":30},{"ruleId":"1101","severity":1,"message":"1102","line":654,"column":15,"nodeType":"1103","endLine":657,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":656,"column":33,"nodeType":"1073","messageId":"1074","endLine":656,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":662,"column":28,"nodeType":"1073","messageId":"1074","endLine":662,"endColumn":30},{"ruleId":"1101","severity":1,"message":"1102","line":665,"column":15,"nodeType":"1103","endLine":668,"endColumn":17},{"ruleId":"1071","severity":1,"message":"1072","line":667,"column":33,"nodeType":"1073","messageId":"1074","endLine":667,"endColumn":35},{"ruleId":"1071","severity":1,"message":"1072","line":673,"column":17,"nodeType":"1073","messageId":"1074","endLine":673,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":674,"column":17,"nodeType":"1073","messageId":"1074","endLine":674,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":675,"column":17,"nodeType":"1073","messageId":"1074","endLine":675,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":676,"column":17,"nodeType":"1073","messageId":"1074","endLine":676,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1093","line":33,"column":13,"nodeType":"1091","endLine":47,"endColumn":4},{"ruleId":"1071","severity":1,"message":"1072","line":34,"column":27,"nodeType":"1073","messageId":"1074","endLine":34,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1093","line":60,"column":13,"nodeType":"1091","endLine":62,"endColumn":4},{"ruleId":"1101","severity":1,"message":"1102","line":80,"column":17,"nodeType":"1103","endLine":83,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1090","line":91,"column":55,"nodeType":"1091","messageId":"1092","endLine":91,"endColumn":57},{"ruleId":"1071","severity":1,"message":"1072","line":100,"column":38,"nodeType":"1073","messageId":"1074","endLine":100,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1072","line":106,"column":38,"nodeType":"1073","messageId":"1074","endLine":106,"endColumn":40},{"ruleId":"1071","severity":1,"message":"1072","line":106,"column":53,"nodeType":"1073","messageId":"1074","endLine":106,"endColumn":55},{"ruleId":"1071","severity":1,"message":"1072","line":106,"column":68,"nodeType":"1073","messageId":"1074","endLine":106,"endColumn":70},{"ruleId":"1101","severity":1,"message":"1102","line":124,"column":19,"nodeType":"1103","endLine":124,"endColumn":41},{"ruleId":"1101","severity":1,"message":"1102","line":138,"column":17,"nodeType":"1103","endLine":138,"endColumn":74},{"ruleId":"1101","severity":1,"message":"1102","line":140,"column":19,"nodeType":"1103","endLine":140,"endColumn":73},{"ruleId":"1101","severity":1,"message":"1102","line":144,"column":19,"nodeType":"1103","endLine":144,"endColumn":78},{"ruleId":"1071","severity":1,"message":"1075","line":8,"column":16,"nodeType":"1073","messageId":"1074","endLine":8,"endColumn":18},{"ruleId":"1071","severity":1,"message":"1072","line":44,"column":20,"nodeType":"1073","messageId":"1074","endLine":44,"endColumn":22},{"ruleId":"1052","severity":1,"message":"1197","line":6,"column":9,"nodeType":"1054","messageId":"1055","endLine":6,"endColumn":26},{"ruleId":"1071","severity":1,"message":"1072","line":8,"column":23,"nodeType":"1073","messageId":"1074","endLine":8,"endColumn":25},{"ruleId":"1188","severity":1,"message":"1189","line":9,"column":18,"nodeType":"1073","messageId":"1190","endLine":9,"endColumn":19},{"ruleId":"1188","severity":1,"message":"1189","line":11,"column":18,"nodeType":"1073","messageId":"1190","endLine":11,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":18,"column":17,"nodeType":"1073","messageId":"1074","endLine":18,"endColumn":19},"no-unused-vars","'EasyrouteProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1234"],"no-negated-in-lhs",["1235"],"'Button' is defined but never used.","'useEffect' is defined but never used.","'Login' is defined but never used.","'Home' is defined but never used.","'MusicSlider' is defined but never used.","'Search' is defined but never used.","'IconListItem' is defined but never used.","'Carousel' is defined but never used.","'RouterOutlet' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'getdata' is assigned a value but never used.","'useRef' is defined but never used.","'Input' is defined but never used.","'message' is defined but never used.","'Slider' is defined but never used.","'HTTPUtils' is defined but never used.","'PersonalSuggest' is defined but never used.","'SubHome' is defined but never used.","'useParams' is defined but never used.","'setHomeTags' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setActiveHomeTag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.pathname] as a second argument to the useEffect Hook.",["1236"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'search_suggest'. Either include it or remove the dependency array.","ArrayExpression",["1237"],"React Hook useEffect has missing dependencies: 'searchKeyword' and 'search_suggest'. Either include them or remove the dependency array.",["1238"],"React Hook useEffect has missing dependencies: 'isHover' and 'leftClickDiv'. Either include them or remove the dependency array.",["1239"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fastActive' is defined but never used.","'fastNoActive' is defined but never used.","'backFastActive' is defined but never used.","'backFastNoActive' is defined but never used.","'mutedActive' is defined but never used.","'mutedNoActive' is defined but never used.","'listActive' is defined but never used.","'listNoActive' is defined but never used.","'allLoopActive' is defined but never used.","'allLoopNoActive' is defined but never used.","'singleLoopActive' is defined but never used.","'singleLoopNoActive' is defined but never used.","'noLoopActive' is defined but never used.","'noLoopNoActive' is defined but never used.","'add' is defined but never used.","'noAdd' is defined but never used.","'joinNext' is defined but never used.","'noJoinNext' is defined but never used.","'like' is defined but never used.","'noLike' is defined but never used.","'itemPlay' is defined but never used.","'MV' is defined but never used.","'MusicSliderComponent' is defined but never used.","'covertTime' is assigned a value but never used.","'setSliderEnd' is assigned a value but never used.","'getMusicacbtnEle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isFirst'. Either include it or remove the dependency array.",["1240"],"'Playlist' is defined but never used.","'router' is assigned a value but never used.","'allMV' is assigned a value but never used.","'setAllMV' is assigned a value but never used.","'newMV' is assigned a value but never used.","'setNewMV' is assigned a value but never used.","'useState' is defined but never used.","'NewestSong' is defined but never used.","'PlaylistDetail' is defined but never used.","'Test' is defined but never used.","'ArtistDetail' is defined but never used.","'setTypes' is assigned a value but never used.","'setAreas' is assigned a value but never used.","'setCats' is assigned a value but never used.","'setAreaCat' is assigned a value but never used.","'SongsListItem' is assigned a value but never used.","'newData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAlbumArea'. Either include it or remove the dependency array.",["1241"],"React Hook useEffect has a missing dependency: 'getTopAlbum'. Either include it or remove the dependency array.",["1242"],"'timer' is assigned a value but never used.","'Cookies' is defined but never used.","'SubPng' is defined but never used.","'NoShoucangPng' is defined but never used.","'DownloadPng' is defined but never used.","'PlayPng' is defined but never used.","'PicListNoActivePng' is defined but never used.","'PicListActivePng' is defined but never used.","'PicNoActivePng' is defined but never used.","'PicActivePng' is defined but never used.","'ListNoActivePng' is defined but never used.","'ListActivePng' is defined but never used.","'DownPng' is defined but never used.","'UpPng' is defined but never used.","'exchangeTime' is assigned a value but never used.","'exchagneDuration' is assigned a value but never used.","'account' is assigned a value but never used.","'userEvents' is assigned a value but never used.","'setUserEvents' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserEvent', 'getUserFolloweds', 'getUserFollows', and 'getUserPlaylists'. Either include them or remove the dependency array.",["1243"],"'dur' is assigned a value but never used.","'AddPng' is defined but never used.","'ShoucangPng' is defined but never used.","'ZanPng' is defined but never used.","'commentVal' is assigned a value but never used.","'commentValChange' is assigned a value but never used.","'headerComment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPlaylistComments', 'getPlaylistDetail', and 'id'. Either include them or remove the dependency array.",["1244"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'getArtistAlbum' and 'getArtistMV'. Either include them or remove the dependency array.",["1245"],"React Hook useEffect has a missing dependency: 'getArtistAlbum'. Either include it or remove the dependency array.",["1246"],"React Hook useEffect has a missing dependency: 'getArtistMV'. Either include it or remove the dependency array.",["1247"],"'is_have_timestamp' is assigned a value but never used.","'sliderRoundBtn' is assigned a value but never used.","'sliderBack' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'setWidth'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1248"],"React Hook useEffect has a missing dependency: 'handleBackWidth'. Either include it or remove the dependency array.",["1249"],["1250"],"'interval_id' is assigned a value but never used.","'play' is assigned a value but never used.","'setPlay' is assigned a value but never used.","'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","'isReset' is assigned a value but never used.","'setIsReset' is assigned a value but never used.",["1234"],["1235"],"React Hook useEffect has a missing dependency: 'props.routes'. Either include it or remove the dependency array.",["1251"],"React Hook useEffect contains a call to 'setActiveHomeTag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.route.routes, props.location.pathname] as a second argument to the useEffect Hook.",["1252"],["1253"],["1254"],["1255"],"'mutedAudio' is assigned a value but never used.",["1256"],["1257"],["1258"],["1259"],["1260"],["1261"],["1262"],["1263"],"React Hook useEffect has missing dependencies: 'getArtistAlbum', 'getArtistDetail', 'getArtistDetailDesc', 'getArtistMV', and 'getSimiArtist'. Either include them or remove the dependency array.",["1264"],["1265"],["1266"],"no-global-assign","no-unsafe-negation",{"desc":"1267","fix":"1268"},{"desc":"1269","fix":"1270"},{"desc":"1271","fix":"1272"},{"desc":"1273","fix":"1274"},{"desc":"1275","fix":"1276"},{"desc":"1277","fix":"1278"},{"desc":"1279","fix":"1280"},{"desc":"1281","fix":"1282"},{"desc":"1283","fix":"1284"},{"desc":"1285","fix":"1286"},{"desc":"1287","fix":"1288"},{"desc":"1289","fix":"1290"},{"desc":"1291","fix":"1292"},{"desc":"1293","fix":"1294"},{"desc":"1291","fix":"1295"},{"desc":"1296","fix":"1297"},{"desc":"1298","fix":"1299"},{"desc":"1269","fix":"1300"},{"desc":"1271","fix":"1301"},{"desc":"1275","fix":"1302"},{"desc":"1283","fix":"1303"},{"desc":"1281","fix":"1304"},{"desc":"1273","fix":"1305"},{"desc":"1291","fix":"1306"},{"desc":"1293","fix":"1307"},{"desc":"1291","fix":"1308"},{"desc":"1277","fix":"1309"},{"desc":"1279","fix":"1310"},{"desc":"1311","fix":"1312"},{"desc":"1287","fix":"1313"},{"desc":"1289","fix":"1314"},"Add dependencies array: [props.location.pathname]",{"range":"1315","text":"1316"},"Update the dependencies array to be: [searchKeyword, search_suggest]",{"range":"1317","text":"1318"},"Update the dependencies array to be: [isSearchFocus, searchKeyword, search_suggest]",{"range":"1319","text":"1320"},"Update the dependencies array to be: [index, isHover, leftClickDiv]",{"range":"1321","text":"1322"},"Update the dependencies array to be: [duration, isFirst]",{"range":"1323","text":"1324"},"Update the dependencies array to be: [getAlbumArea, paramsDate]",{"range":"1325","text":"1326"},"Update the dependencies array to be: [getTopAlbum]",{"range":"1327","text":"1328"},"Update the dependencies array to be: [getUserEvent, getUserFolloweds, getUserFollows, getUserPlaylists, profile]",{"range":"1329","text":"1330"},"Update the dependencies array to be: [getPlaylistComments, getPlaylistDetail, id]",{"range":"1331","text":"1332"},"Update the dependencies array to be: [getArtistAlbum, getArtistMV]",{"range":"1333","text":"1334"},"Update the dependencies array to be: [albumsOffset, getArtistAlbum]",{"range":"1335","text":"1336"},"Update the dependencies array to be: [getArtistMV, mvsOffset]",{"range":"1337","text":"1338"},"Update the dependencies array to be: [props, setWidth]",{"range":"1339","text":"1340"},"Update the dependencies array to be: [handleBackWidth, play]",{"range":"1341","text":"1342"},{"range":"1343","text":"1340"},"Update the dependencies array to be: [props.routes]",{"range":"1344","text":"1345"},"Add dependencies array: [props.route.routes, props.location.pathname]",{"range":"1346","text":"1347"},{"range":"1348","text":"1318"},{"range":"1349","text":"1320"},{"range":"1350","text":"1324"},{"range":"1351","text":"1332"},{"range":"1352","text":"1330"},{"range":"1353","text":"1322"},{"range":"1354","text":"1340"},{"range":"1355","text":"1342"},{"range":"1356","text":"1340"},{"range":"1357","text":"1326"},{"range":"1358","text":"1328"},"Update the dependencies array to be: [getArtistAlbum, getArtistDetail, getArtistDetailDesc, getArtistMV, getSimiArtist]",{"range":"1359","text":"1360"},{"range":"1361","text":"1336"},{"range":"1362","text":"1338"},[1002,1002],", [props.location.pathname]",[1157,1172],"[searchKeyword, search_suggest]",[1431,1446],"[isSearchFocus, searchKeyword, search_suggest]",[1049,1056],"[index, isHover, leftClickDiv]",[5498,5508],"[duration, isFirst]",[8425,8437],"[getAlbumArea, paramsDate]",[9429,9431],"[getTopAlbum]",[8366,8375],"[getUserEvent, getUserFolloweds, getUserFollows, getUserPlaylists, profile]",[3748,3750],"[getPlaylistComments, getPlaylistDetail, id]",[5798,5800],"[getArtistAlbum, getArtistMV]",[7099,7113],"[albumsOffset, getArtistAlbum]",[7210,7221],"[getArtistMV, mvsOffset]",[4450,4452],"[props, setWidth]",[6229,6235],"[handleBackWidth, play]",[4414,4416],[786,788],"[props.routes]",[1044,1044],", [props.route.routes, props.location.pathname]",[1157,1172],[1431,1446],[5498,5508],[3748,3750],[8366,8375],[1049,1056],[4450,4452],[6229,6235],[4414,4416],[8425,8437],[9429,9431],[5924,5926],"[getArtistAlbum, getArtistDetail, getArtistDetailDesc, getArtistMV, getSimiArtist]",[7252,7266],[7363,7374]]