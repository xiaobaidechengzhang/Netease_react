[{"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\index.js":"1","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\App.js":"2","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\reportWebVitals.js":"3","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Login\\Login.js":"4","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Home.js":"5","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTPUtils.js":"6","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTP.js":"7","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Search\\Search.js":"8","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\IconListItem\\IconListItem.js":"9","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\Carousel\\Carousel.js":"10","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSlider.js":"11","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Router\\router.js":"12","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\PersonalSuggest\\PersonalSuggest.js":"13","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\SubHome\\SubHome.js":"14","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\Playlist.js":"15","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Toplist\\Toplist.js":"16","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\Artists.js":"17","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\NewestSong\\NewestSong.js":"18","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Test\\Test.js":"19","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\ExchangeTime.js":"20","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\index.js":"21","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js":"22","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js":"23","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js":"24","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\fetch.js":"25","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\request.js":"26","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\Cookies.js":"27","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSliderComponent.js":"28","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\BasicSlider.js":"29","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\AudioSlider.js":"30","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\VolumeSlider.js":"31","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\index.js":"32","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\reportWebVitals.js":"33","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\App.js":"34","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Router\\router.js":"35","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Login\\Login.js":"36","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Home.js":"37","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Search\\Search.js":"38","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSlider.js":"39","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\SubHome\\SubHome.js":"40","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js":"41","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\PersonalSuggest\\PersonalSuggest.js":"42","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Test\\Test.js":"43","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\Playlist.js":"44","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\IconListItem\\IconListItem.js":"45","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\Carousel\\Carousel.js":"46","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\AudioSlider.js":"47","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSliderComponent.js":"48","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\VolumeSlider.js":"49","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTPUtils.js":"50","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\ExchangeTime.js":"51","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js":"52","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\index.js":"53","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\BasicSlider.js":"54","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTP.js":"55","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\NewestSong\\NewestSong.js":"56","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\Artists.js":"57","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js":"58","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Toplist\\Toplist.js":"59","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\Cookies.js":"60","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\request.js":"61","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\fetch.js":"62","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\store\\reducers\\index.js":"63","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\store\\reducers\\playlistReducer.js":"64","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\store\\actions\\playlistActions.js":"65","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\SliderPlaylist\\SliderPlaylist.js":"66","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\PersonalCenter\\PersonalCenter.js":"67","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\ContextMenu\\ContextMenu.js":"68","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\VideoSlider\\VideoSlider.js":"69","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\MVDetail\\MVDetail.js":"70","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\VideoDetail\\VideoDetail.js":"71","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Video\\Video\\Video.js":"72","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Video\\MV\\MV.js":"73","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\NewestSong\\AlbumsDetail\\AlbumsDetail.js":"74","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\Tools.js":"75"},{"size":708,"mtime":1618901042059,"results":"76","hashOfConfig":"77"},{"size":1086,"mtime":1625558078410,"results":"78","hashOfConfig":"77"},{"size":362,"mtime":1607493431028,"results":"79","hashOfConfig":"77"},{"size":11520,"mtime":1624004494174,"results":"80","hashOfConfig":"77"},{"size":2317,"mtime":1623146014721,"results":"81","hashOfConfig":"77"},{"size":36484,"mtime":1624605487530,"results":"82","hashOfConfig":"77"},{"size":3422,"mtime":1624605807287,"results":"83","hashOfConfig":"77"},{"size":8189,"mtime":1616138316493,"results":"84","hashOfConfig":"77"},{"size":3189,"mtime":1618804475594,"results":"85","hashOfConfig":"77"},{"size":3365,"mtime":1625018656010,"results":"86","hashOfConfig":"77"},{"size":10620,"mtime":1625881094911,"results":"87","hashOfConfig":"77"},{"size":1589,"mtime":1624610108000,"results":"88","hashOfConfig":"77"},{"size":11174,"mtime":1625023515957,"results":"89","hashOfConfig":"77"},{"size":1721,"mtime":1625284063506,"results":"90","hashOfConfig":"77"},{"size":10581,"mtime":1624608660730,"results":"91","hashOfConfig":"77"},{"size":4811,"mtime":1619768995605,"results":"92","hashOfConfig":"77"},{"size":7561,"mtime":1623144747209,"results":"93","hashOfConfig":"77"},{"size":15924,"mtime":1621822175629,"results":"94","hashOfConfig":"77"},{"size":14573,"mtime":1624610779336,"results":"95","hashOfConfig":"77"},{"size":2226,"mtime":1623036409871,"results":"96","hashOfConfig":"77"},{"size":314,"mtime":1624000760430,"results":"97","hashOfConfig":"77"},{"size":15246,"mtime":1624609153610,"results":"98","hashOfConfig":"77"},{"size":1002,"mtime":1622793131019,"results":"99","hashOfConfig":"77"},{"size":22123,"mtime":1623132622016,"results":"100","hashOfConfig":"77"},{"size":1037,"mtime":1623987594969,"results":"101","hashOfConfig":"77"},{"size":724,"mtime":1624416241598,"results":"102","hashOfConfig":"77"},{"size":1739,"mtime":1624003962234,"results":"103","hashOfConfig":"77"},{"size":8441,"mtime":1625542961092,"results":"104","hashOfConfig":"77"},{"size":5988,"mtime":1625553889213,"results":"105","hashOfConfig":"77"},{"size":2645,"mtime":1625706808771,"results":"106","hashOfConfig":"77"},{"size":633,"mtime":1625824365870,"results":"107","hashOfConfig":"77"},{"size":869,"mtime":1629526408644,"results":"108","hashOfConfig":"109"},{"size":362,"mtime":1607493431028,"results":"110","hashOfConfig":"109"},{"size":9256,"mtime":1631785353248,"results":"111","hashOfConfig":"109"},{"size":2415,"mtime":1631690861802,"results":"112","hashOfConfig":"109"},{"size":11531,"mtime":1631776246197,"results":"113","hashOfConfig":"109"},{"size":2139,"mtime":1631263980683,"results":"114","hashOfConfig":"109"},{"size":8242,"mtime":1630662868719,"results":"115","hashOfConfig":"109"},{"size":15754,"mtime":1636342673598,"results":"116","hashOfConfig":"109"},{"size":2291,"mtime":1631262869185,"results":"117","hashOfConfig":"109"},{"size":25091,"mtime":1636622694493,"results":"118","hashOfConfig":"109"},{"size":13391,"mtime":1635499336034,"results":"119","hashOfConfig":"109"},{"size":14573,"mtime":1630200214418,"results":"120","hashOfConfig":"109"},{"size":10650,"mtime":1630568609822,"results":"121","hashOfConfig":"109"},{"size":3189,"mtime":1618804475594,"results":"122","hashOfConfig":"109"},{"size":11713,"mtime":1636340496650,"results":"123","hashOfConfig":"109"},{"size":2678,"mtime":1636342486180,"results":"124","hashOfConfig":"109"},{"size":8441,"mtime":1625542961092,"results":"125","hashOfConfig":"109"},{"size":633,"mtime":1629971623595,"results":"126","hashOfConfig":"109"},{"size":36487,"mtime":1631148351204,"results":"127","hashOfConfig":"109"},{"size":2461,"mtime":1630747650255,"results":"128","hashOfConfig":"109"},{"size":1002,"mtime":1622793131019,"results":"129","hashOfConfig":"109"},{"size":326,"mtime":1630200744833,"results":"130","hashOfConfig":"109"},{"size":6056,"mtime":1636342327742,"results":"131","hashOfConfig":"109"},{"size":3654,"mtime":1636097461373,"results":"132","hashOfConfig":"109"},{"size":16455,"mtime":1631760347654,"results":"133","hashOfConfig":"109"},{"size":9964,"mtime":1631844618487,"results":"134","hashOfConfig":"109"},{"size":25308,"mtime":1636618423830,"results":"135","hashOfConfig":"109"},{"size":5154,"mtime":1636621972464,"results":"136","hashOfConfig":"109"},{"size":1739,"mtime":1624003962234,"results":"137","hashOfConfig":"109"},{"size":818,"mtime":1636094754207,"results":"138","hashOfConfig":"109"},{"size":1037,"mtime":1623987594969,"results":"139","hashOfConfig":"109"},{"size":185,"mtime":1629451920262,"results":"140","hashOfConfig":"109"},{"size":6641,"mtime":1631775826428,"results":"141","hashOfConfig":"109"},{"size":1020,"mtime":1630549701170,"results":"142","hashOfConfig":"109"},{"size":6067,"mtime":1630551283286,"results":"143","hashOfConfig":"109"},{"size":15703,"mtime":1636095137256,"results":"144","hashOfConfig":"109"},{"size":7595,"mtime":1636620932724,"results":"145","hashOfConfig":"109"},{"size":17770,"mtime":1636418596802,"results":"146","hashOfConfig":"109"},{"size":9416,"mtime":1631259225496,"results":"147","hashOfConfig":"109"},{"size":10334,"mtime":1631181417258,"results":"148","hashOfConfig":"109"},{"size":7487,"mtime":1631260847468,"results":"149","hashOfConfig":"109"},{"size":10366,"mtime":1631260676823,"results":"150","hashOfConfig":"109"},{"size":22790,"mtime":1631757877351,"results":"151","hashOfConfig":"109"},{"size":474,"mtime":1636094571206,"results":"152","hashOfConfig":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},"1oi5c58",{"filePath":"157","messages":"158","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"156"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"156"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"156"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"156"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"156"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"156"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"156"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"156"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"156"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"156"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"156"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"156"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"156"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"156"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"156"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"156"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},"z8wmfc",{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"244"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"244"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"244"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"244"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"244"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":58,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"244"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"244"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"244"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"244"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"244"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"244"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"244"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"244"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"244"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"244"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"244"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"244"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"244"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"244"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"244"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"244"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"244"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"244"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"244"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"244"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"244"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"244"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"244"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"244"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"244"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"244"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"244"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\index.js",["358"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { EasyrouteProvider } from 'react-easyroute';\nimport routes from './Router/router';\nimport { HashRouter,  } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter routes={routes}>\n      <App routes={routes}/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["359","360"],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\App.js",["361","362","363","364","365","366","367","368","369","370","371"],"import './App.less';\nimport 'antd/dist/antd.css';\nimport 'moment/locale/zh-cn';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport { Button, } from 'antd'\nimport React, { useEffect } from 'react';\nimport Login from './Login/Login'\nimport Home from './Home/Home'\nimport MusicSlider from './MusicSlider/MusicSlider'\nimport Search from './Search/Search';\nimport IconListItem from './widgets/IconListItem/IconListItem';\nimport Carousel from './widgets/Carousel/Carousel'\nimport { RouterOutlet } from 'react-easyroute';\nimport { withRouter, Switch, Route, } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\n\nfunction App(props) {\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <div className=\"App\">\n        {renderRoutes(props.routes)}\n        {/* <Login/> */}\n        {/* <Search/> */}\n        {/* <IconListItem/> */}\n        {/* <Carousel/> */}\n        {/* <MusicSlider /> */}\n        {/* <Home/> */}\n        {/* <RouterOutlet/> */}\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default withRouter(App);\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\reportWebVitals.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Login\\Login.js",["372","373","374","375","376"],"\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Checkbox, Select, Tooltip, message } from 'antd'\r\nimport './Login.less'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FormItem = Form.Item;\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 }\r\n}\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 6, span: 16 }\r\n}\r\nconst loginLayout = {\r\n    wrapperCol: { span: 24 }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @export  登录页面\r\n * @return {*} \r\n */\r\nexport default function Login(props) {\r\n    const formRef = useRef();\r\n    const [isPhoneMode, setIsPhoneMode] = useState('1');             //是否使用手机验证码登录\r\n    const [namePlaceholder, setNamePlaceholder] = useState('请输入手机号码');         //用户名input框placeholder\r\n    const [isOnSendCode, setIsonsendcode] = useState(false);                      //是否处于发送验证码\r\n    const [sendCodeMil, setSendcodeMil] = useState(60);                           //处于发送验证码时间段内, 定时读秒的秒数\r\n\r\n\r\n    /**\r\n     * sendVerifCode和下面的useEffect 是发送验证码相关事件\r\n     */\r\n    /**\r\n     * 处于手机登录状态下, 点击发送验证码, 出现'已发送60秒'\r\n     */\r\n    const sendVerifCode = async () => {\r\n        let currentValue = formRef.current.getFieldsValue()\r\n        console.log(formRef.current.getFieldsValue())\r\n        let phone = currentValue.userName;\r\n        if(!phone) {\r\n            message.error('请先输入手机号');\r\n            return false;\r\n        }\r\n        let params = {\r\n            phone: phone,\r\n        }\r\n        let data = await HTTPUtils.captcha_sent(params);\r\n        console.log(data)\r\n        console.log(data)\r\n        setIsonsendcode(true)\r\n        setSendcodeMil(sendCodeMil)\r\n    }\r\n    /**\r\n     * 处于发送验证码时间段内, 定时读秒, sendcodemil为0时, 恢复显示发送验证码按钮, 并将读秒重置为60s\r\n     * 依赖isOnSendCode和sendCodeMil\r\n     */\r\n    useEffect(() => {\r\n        if(isOnSendCode) {\r\n            let codeTimer = setInterval(() => {\r\n                if(sendCodeMil >0 && sendCodeMil <= 60) {\r\n                    setSendcodeMil(sendCodeMil-1)\r\n                }else if(sendCodeMil == 0) {\r\n                    setIsonsendcode(false)\r\n                    setSendcodeMil(60)\r\n                }\r\n            }, 1000)\r\n            //为了清除codeTimer\r\n            return () => {\r\n                clearInterval(codeTimer)\r\n            }\r\n        }\r\n    }, [isOnSendCode, sendCodeMil])\r\n\r\n\r\n\r\n    /**\r\n     *提交成功\r\n     *\r\n     * @param {value: Object} value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     * isphonemode: true: 用手机登录; false: 邮箱登录\r\n     */\r\n    const onFinish = async (value) => {\r\n        isPhoneMode != '3' ? await loginWithPhone(value) : await loginWithEmail(value);\r\n    }\r\n    /**\r\n     *提交失败\r\n     *\r\n     * @param {*} err\r\n     */\r\n    const onFinishFailed = (err) => {\r\n        console.log(err)\r\n    }\r\n    /**\r\n     * \r\n     * @param {obj: Object} obj : value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     */\r\n    const loginWithPhone = async (obj) => {\r\n        console.log(obj)\r\n        let password = obj['password'];\r\n        let phone = obj['userName']\r\n        if(isPhoneMode == '1') {\r\n            //手机验证码登录\r\n            let params1 = {\r\n                phone,\r\n                captcha: password,\r\n            }\r\n            let data1 = await HTTPUtils.captcha_verify(params1);\r\n            console.log(data1)\r\n        }else {\r\n            //手机密码登录\r\n            let params = {\r\n                phone,\r\n                password,\r\n            }\r\n            let data = await HTTPUtils.login_cellphone(params);\r\n            console.log(data)\r\n        }\r\n        message.success('登录成功')\r\n        props.history.push('/home')\r\n        // let params = {\r\n        //     phone: obj.userName,\r\n        //     password: obj.password,\r\n        //     timestamp: Date.now()\r\n        // }\r\n        // let data = await HTTPUtils.login_cellphone(params);\r\n        // if(data.code !== 200) {\r\n        //     console.log(data)\r\n        //     message.error(data.msg || '请输入正确的用户名或者密码');\r\n        //     return\r\n        // }\r\n        // console.log(data)\r\n\r\n    }\r\n     /**\r\n     * \r\n     * @param {obj: Object} obj : value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     */\r\n    const loginWithEmail = async (obj) => {\r\n        let params = {\r\n            email: obj.userName,\r\n            password: obj.password,\r\n            timestamp: Date.now()\r\n        }\r\n        let data = await HTTPUtils.login(params);\r\n        document.cookie = data.cookie;//登录以后, 要存储cookie, 为的是保持登录状态, 请求需要登录的接口\r\n        props.history.push('/home')\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {val: String} val : 选择手机/邮箱, 设置密码框里的tooltips, 用户名里的placeholder\r\n     */\r\n    const selectedType = (val) => {\r\n        setIsPhoneMode(val);\r\n        let holder = val === '3' ? '请输入邮箱' : '请输入手机号码';\r\n        setNamePlaceholder(holder)\r\n    }\r\n\r\n\r\n\r\n    const getdata = async () => {\r\n        let obj = {\r\n            id: 58100\r\n        }\r\n        let data = await HTTPUtils.video_group(obj);\r\n        console.log('视频')\r\n        console.log(data)\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <div\r\n                className='loginContent'\r\n                draggable='true'\r\n            >\r\n                <Button\r\n                    className='closeBtn'\r\n                >\r\n                    <CloseOutlined className='closeImg' />\r\n                </Button>\r\n                <Form\r\n                    ref={formRef}\r\n                    {...layout}\r\n                    name='loginData'\r\n                    autoComplete='false'\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <FormItem\r\n                        {...loginLayout}\r\n                    >\r\n                        <p\r\n                            style={{ textAlign: 'center', fontSize: '25px', borderBottom: '1px solid #C20C0C', paddingBottom: '10px', color: '#C20C0C' }}\r\n                        >\r\n                            网易云音乐\r\n                        </p>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label='用户名'\r\n                        style={{ width: '500px' }}\r\n                    >\r\n                        <Input.Group compact>\r\n                            <Select\r\n                                defaultValue=\"1\"\r\n                                style={{ width: '35%', height: '50px' }}\r\n                                onSelect={selectedType}\r\n                            >\r\n                                <Option value=\"1\">手机验证码</Option>\r\n                                <Option value=\"2\">手机密码</Option>\r\n                                <Option value=\"3\">邮箱</Option>\r\n                            </Select>\r\n                            <FormItem\r\n                                name='userName'\r\n                                style={{ width: '65%' }}\r\n                                rules={[{ required: true, message: '请输入用户名' }]}\r\n                            >\r\n                                <Input\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder={namePlaceholder}\r\n                                />\r\n                            </FormItem>\r\n                        </Input.Group>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label='密码'\r\n                        name='password'\r\n                        style={{ width: '500px' }}\r\n                        rules={[{ required: true, message: '请输入密码' }]}\r\n                    >\r\n                        {\r\n                            !(isPhoneMode == '1') ?\r\n                                <Input.Password\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder='请输入密码'\r\n                                />\r\n                                :\r\n                                <Input\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder='请输入验证码'\r\n                                    suffix={\r\n                                        <Tooltip\r\n                                            title=\"Extra information\"\r\n                                        >\r\n                                            {\r\n                                                !isOnSendCode ?\r\n                                                    <Button\r\n                                                        type='text'\r\n                                                        style={{ color: '#1890ff' }}\r\n                                                        onClick={sendVerifCode}\r\n                                                    >\r\n                                                        发送验证码\r\n                                                </Button>\r\n                                                    :\r\n                                                    <span\r\n                                                        style={{ color: 'gray' }}\r\n                                                    >\r\n                                                        已发送\r\n                                                    <span\r\n                                                        style={{padding: 5}}\r\n                                                    >\r\n                                                            {sendCodeMil}\r\n                                                        </span>\r\n                                                    秒\r\n                                                </span>\r\n                                            }\r\n                                        </Tooltip>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem\r\n                        name='remember'\r\n                        {...tailLayout}\r\n                        valuePropName='checked'\r\n                    >\r\n                        <Checkbox\r\n                        >\r\n                            记住我\r\n                        </Checkbox>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        wrapperCol={{ offset: 6, span: 12 }}\r\n\r\n                    >\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType='submit'\r\n                            className='subBtn'\r\n                            shape='round'\r\n                        >\r\n                            登录\r\n                        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n            {/* <Button onClick={getdata}>获取登录</Button> */}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Home.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, Slider, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Home.less';\r\nimport PersonalSuggest from './PersonalSuggest/PersonalSuggest';\r\nimport SubHome from './SubHome/SubHome';\r\nimport { RouterOutlet } from 'react-easyroute';\r\nimport { Route, Switch, Link, useParams } from 'react-router-dom'\r\nimport { renderRoutes } from 'react-router-config';\r\nconst paths = {\r\n    '/home/0': 0,\r\n    '/home/1': 1,\r\n    '/home/2': 2,\r\n    '/home/3': 3,\r\n    '/home/4': 4,\r\n}\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Home(props) {\r\n    const [homeTags, setHomeTags] = useState(['个性推荐', '歌单', '排行榜', '歌手', '最新音乐']);       //首页tags\r\n    const [activeHomeTag, setActiveHomeTag] = useState('0');            //当前active的home tag\r\n    useEffect(() => {\r\n        let pathname = props.location.pathname;\r\n        setActiveHomeTag(paths[pathname])\r\n    },)\r\n    /**\r\n     * \r\n     * @param {type: String} type : 0: 个性推荐; 1: 歌单; 2: 排行榜; 3: 歌手; 4: 最新音乐\r\n     */\r\n    const clickHomeTag = (type) => {\r\n        setActiveHomeTag(type)\r\n    }\r\n    return (\r\n        <div\r\n        >\r\n            <div\r\n                className='catHeader'\r\n            >\r\n                {\r\n                    homeTags.map((item, index) => {\r\n                        return (\r\n                            <Link\r\n                                key={index}\r\n                                className={`${activeHomeTag == index ? 'activeCatHeaderItem' : ''} catHeaderItem`}\r\n                                onClick={() => clickHomeTag(index)}\r\n                                to={`/home/${index}`}\r\n                            >\r\n                                {item}\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {renderRoutes(props.route.routes)}\r\n            {/* <Switch>\r\n                <Route exact path='/'>\r\n                    <PersonalSuggest/>\r\n                </Route>\r\n                <Route path='/:id'>\r\n                    <SubHome/>\r\n                </Route>\r\n            </Switch> */}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTPUtils.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\HTTP.js",["392","393","394","395","396"],"import { message, } from 'antd';\r\nimport request from './request'\r\n\r\nlet Http = {};\r\nHttp.Get = function(url, params) {\r\n    const method = 'GET';\r\n    let fetchUrl = url;\r\n    if(params) {\r\n        fetchUrl += stringParams(params);\r\n    }\r\n    //credentials: 'include', 设置此项, 是为了fetch在请求时带上cookie, \r\n    const fetchParams = {method: method, credentials: 'include',};\r\n    return Http.handleFetchData(fetchUrl, fetchParams);\r\n}\r\nHttp.Post = function(url, params = {}) {\r\n    const method = 'POST';\r\n    const body = JSON.stringify(params);\r\n    console.log(body)\r\n    const fetchParams = {\r\n        method: method,\r\n        body: body,\r\n\r\n    }\r\n    console.log(fetchParams)\r\n    return Http.handleFetchData(url, fetchParams);\r\n}\r\nHttp.handleFetchData = (url, fetchParams) => {\r\n    const fetchPromise = new Promise((resolve, reject) => {\r\n        request()(url, fetchParams).then(\r\n            response => {\r\n                response.json().then(jsonBody => {\r\n                    if(response.ok) {\r\n                        if(jsonBody.code != 200) {\r\n                            reject(Http.handleFailedResult(jsonBody))\r\n                        }else {\r\n                            resolve(Http.handleResult(jsonBody));\r\n                        }\r\n                    }else {\r\n                        let msg = '服务器繁忙, 请稍后再试!';\r\n                        if(response.code === 404) {\r\n                            msg = '你访问的页面走丢了'\r\n                        }\r\n                        // resolve(Http.handleResult({fetchStatus: 'error', netStatus: response.status, error: msg}))\r\n                        reject(Http.handleFailedResult({fetchStatus: 'error', netStatus: response.code, error: msg}))\r\n                        message.error(msg);\r\n                    }\r\n                }).catch(e => {\r\n                    const errMsg = e.name + ' ' + e.message;\r\n                    reject(Http.handleFailedResult({fetchStatus: 'error', netStatus: response.code, error: errMsg}))\r\n                    message.error(errMsg);\r\n                })\r\n            }\r\n        ).catch(e => {\r\n            const errMsg = e.name + ' ' + e.message;\r\n            reject(Http.handleFailedResult({fetchStatus: 'error', error: errMsg}))\r\n            message.error(errMsg)\r\n        })\r\n    })\r\n    return Promise.race([fetchPromise])\r\n}\r\n\r\nHttp.handleResult = (result) => {\r\n    if(result.code != 200 && result.data?.code != 200) {\r\n        const errMsg= result.msg || result.message || '服务器开了小差, 请稍后再试!';\r\n        const errStr = `${errMsg} (${result.code})`;\r\n        message.error(errStr)\r\n        return;\r\n    }\r\n    return result;\r\n}\r\n\r\nHttp.handleFailedResult = (result) => {\r\n    if(result.code != 200) {\r\n        const errMsg= result.msg || result.message || '服务器开了小差, 请稍后再试!';\r\n        const errStr = `${errMsg} (${result.code})`;\r\n        message.error(errStr)\r\n        return;\r\n    }\r\n    const errorMsg = 'Uncaught PromiseError: ' + (result.netcode || '') + ' ' + (result.error || result.msg || result.message);\r\n    return errorMsg; \r\n}\r\n\r\n\r\nfunction stringParams(params) {\r\n    let paramsArr = [];\r\n    Object.keys(params).map(item => {\r\n        let str = item + '=' +params[item];\r\n        paramsArr.push(str);\r\n    })\r\n    let paramsStr = '?' + paramsArr.join('&');\r\n    return paramsStr;\r\n}\r\n\r\nexport default Http;","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Search\\Search.js",["397","398","399","400","401","402","403","404","405","406","407"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Search.less';\r\n/**\r\n *\r\n *\r\n * @export 搜索框组件\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Search(props) {\r\n    const searchRef = useRef();\r\n    //state---默认搜索词--placeholder\r\n    const [searchDefault, setSearchDefault] = useState({\r\n        realkeyword: '',\r\n        showKeyword: ''\r\n    })\r\n    //state---搜索keyword\r\n    const [searchKeyword, setSearchKeyword] = useState('')\r\n    //state---热搜列表\r\n    const [searchHot, setSearchHot] = useState([]);\r\n    //state---搜索input是否聚焦\r\n    const [isSearchFocus, setIsSearchFocus] = useState(false);\r\n\r\n    //search focus 时,获取热搜列表\r\n    useEffect(async () => {\r\n        await search_default();\r\n        // searchRef.current.focus();\r\n        // console.log(searchRef.current.onBlur())\r\n    }, [searchDefault.showKeyword]);\r\n\r\n    //search input keyword改变所触发的事件\r\n    useEffect(async () => {\r\n        if (searchKeyword) {\r\n            await search_suggest();\r\n        }else {\r\n            await search_hot();\r\n        }\r\n    }, [searchKeyword])\r\n    //search input focus触发事件\r\n    useEffect(async () => {\r\n        if (isSearchFocus) {\r\n            if (searchKeyword) {\r\n                await search_suggest();\r\n            } else {\r\n                await search_hot();\r\n            }\r\n        }\r\n    }, [isSearchFocus])\r\n    //事件---默认搜索词\r\n    const search_default = async () => {\r\n        let data = await HTTPUtils.search_default();\r\n        // console.log(data)\r\n        setSearchDefault({\r\n            realkeyword: data.data.realkeyword,\r\n            showKeyword: data.data.showKeyword,\r\n        })\r\n    }\r\n\r\n    //事件---热搜列表\r\n    const search_hot = async () => {\r\n        let data = await HTTPUtils.search_hot();\r\n        setSearchHot(data.result.hots)\r\n    }\r\n\r\n    //事件---搜索聚焦\r\n    const searchFocus = async () => {\r\n        setIsSearchFocus(true)\r\n        // await search_hot();\r\n    }\r\n\r\n    //事件---搜索失去焦点\r\n    const searchBlur = async () => {\r\n        // setIsSearchFocus(false)\r\n    }\r\n\r\n    //事件---点击search_list_item\r\n    const list_item_click = async (value) => {\r\n        setSearchKeyword(value)\r\n        setIsSearchFocus(false)\r\n    }\r\n\r\n    //事件---search enter\r\n    const searchEnter = async () => {\r\n        // console.log(searchKeyword)\r\n    }\r\n\r\n    //事件---search input onChange\r\n    const searchChange = async (e) => {\r\n        let value = e.target.value\r\n        setSearchKeyword(value)\r\n    }\r\n\r\n    //事件---请求搜索建议\r\n    const search_suggest = async () => {\r\n        let obj = {\r\n            keywords: searchKeyword,\r\n        }\r\n        let search_hot = [];\r\n        let data = await HTTPUtils.search_suggest(obj)\r\n        // console.log(data.result.playlists)\r\n        console.log(data.result.songs)\r\n        // console.log(data.result.albums)\r\n        // console.log(data.result.artists)\r\n        let res = data.result;\r\n        if (res.songs) {\r\n            let len = search_hot.length;\r\n            search_hot[len] = {}\r\n            search_hot[len].type = 'songs';\r\n            search_hot[len].category = '歌曲';\r\n            search_hot[len].list = [];\r\n            res.songs.map((item, index) => {\r\n                let list_item = {};\r\n                list_item.id = item.id;\r\n                list_item.title = item.name + '-' + item.artists[0].name;\r\n                search_hot[len].list.push(list_item);\r\n            })\r\n        }\r\n        if(res.albums) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'albums';\r\n            item.category = '专辑';\r\n            item.list = [];\r\n            res.albums.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name + '-' + zItem.artist.name;\r\n                // console.log(item)\r\n                // console.log(item.list instanceof Array)\r\n                item.list.push(list_item);\r\n            })\r\n            search_hot[len] = item;\r\n        }\r\n        if(res.artists) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'artists';\r\n            item.category = '歌手';\r\n            item.list = [];\r\n            res.artists.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name;\r\n                item.list.push(list_item)\r\n            })\r\n            search_hot[len] = item;\r\n        }\r\n        if(res.playlists) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'playlists';\r\n            item.category = '歌单';\r\n            item.list = [];\r\n            res.playlists.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name;\r\n                item.list.push(list_item)\r\n            })\r\n            search_hot[len] = item\r\n        }\r\n        setSearchHot(search_hot)\r\n    }\r\n    //渲染---不同情况下的热搜列表\r\n    const renderHotItem = (item) => {\r\n        // console.log(item)\r\n        if (!item.type) {\r\n            return (\r\n                <p\r\n                    style={{ paddingLeft: 10 }}\r\n                    className='p_no_pad p_line_height'\r\n                    onClick={() => list_item_click(item.first)}\r\n                >\r\n                    {item.first}\r\n                </p>\r\n            )\r\n        }\r\n        return (\r\n            <div className='hot_arr_item' style={{ display: 'flex', flexDirection: 'row' }}>\r\n                <p style={{ flex: 1 }} className='p_line_height p_center'>\r\n                    {item.category}\r\n                </p>\r\n                <div style={{ flex: 3, flexDirection: 'column', borderBottom: '1px solid gray' }}>\r\n                    {\r\n                        item.list.length && item.list.map((zItem, zIndex) => {\r\n                            return (\r\n                                <p\r\n                                    key={zItem.id}\r\n                                    style={{ paddingLeft: 10 }}\r\n                                    className='p_no_pad p_line_height'\r\n                                    onClick={() => list_item_click(zItem.title)}\r\n                                >\r\n                                    {zItem.title}\r\n                                </p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                className='header'\r\n            >\r\n                <div className='header_search'>\r\n                    <Input\r\n                        ref={searchRef}\r\n                        placeholder={searchDefault.showKeyword}\r\n                        value={searchKeyword}\r\n                        style={{ width: '350px', height: '40px', borderRadius: '10px' }}\r\n                        allowClear\r\n                        onFocus={searchFocus} onBlur={searchBlur}\r\n                        onChange={searchChange}\r\n                        onPressEnter={searchEnter}\r\n                    />\r\n                    <div className={`header_search_list ${isSearchFocus ? 'header_search_list_active' : null}`}>\r\n                        {\r\n                            searchHot.length > 0 && searchHot.map((item, index) => {\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        className='header_search_list_item'\r\n                                    >\r\n                                        {renderHotItem(item)}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\IconListItem\\IconListItem.js",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';\r\nimport './IconListItem.less';\r\n\r\nexport default function IconListItem(props) {\r\n    const [activeIndex, setActiveIndex] = useState('-1');\r\n    const overDiv = (e) => {\r\n        console.log('over')\r\n        console.log(e.target.innerHTML)\r\n        console.log(e.target.id)\r\n        setActiveIndex(e.target.id)\r\n    }\r\n    const outDiv = (e) => {\r\n        console.log('out')\r\n        console.log(e)\r\n        setActiveIndex('-1')\r\n    }\r\n    console.log(activeIndex)\r\n    return (\r\n        <div style={{  }}>\r\n            <div id='0' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '0' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='0' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='0' style={{ flex: '2' }}>2</p>\r\n                    <p id='0' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px'  }} className={`${activeIndex != '-1' ? (activeIndex == '0' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n            <div id='1' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '1' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='1' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='1' style={{ flex: '2' }}>2</p>\r\n                    <p id='1' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px' }} className={`${activeIndex != '-1' ? (activeIndex == '1' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n            <div id='2' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '2' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='2' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='2' style={{ flex: '2' }}>2</p>\r\n                    <p id='2' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px'  }} className={`${activeIndex != '-1' ? (activeIndex == '2' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n            <div id='3' className={`noExpand  ${activeIndex != '-1' ? (activeIndex == '3' ? 'expand' : 'small') : ''}`} onMouseOver={overDiv} onMouseOut={outDiv}>\r\n                <div id='3' style={{ height: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <p id='3' style={{ flex: '2' }}>2</p>\r\n                    <p id='3' style={{ flex: '3', backgroundColor: '#2B2E3B', padding: 0, margin: 0, borderTopLeftRadius: '5px', borderBottomLeftRadius: '5px'  }} className={`${activeIndex != '-1' ? (activeIndex == '3' ? 'show' : 'hide') : 'hide'}`}>desc</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\widgets\\Carousel\\Carousel.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport './Carousel.less';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';;\r\nlet timer = ''\r\nexport default function Carousel(props) {\r\n    const [index, setIndex] = useState('0');\r\n    const [isHover, setIsHover] = useState(false);\r\n    const [left, setLeft] = useState(true)\r\n    const leftClickDiv = () => {\r\n        setLeft(true)\r\n        let dex = parseInt(index);\r\n        if(dex < 3) {\r\n            dex += 1;\r\n        }else {\r\n            dex = 1;\r\n        }\r\n        setIndex(dex.toString())\r\n    }\r\n    const rightClickDiv = () => {\r\n        setLeft(false)\r\n        let dex = parseInt(index);\r\n        if(dex > 1) {\r\n            dex -= 1;\r\n        }else {\r\n            dex = 3;\r\n        }\r\n        setIndex(dex.toString())\r\n    }\r\n    useEffect(() => {\r\n        if(!isHover) {\r\n            timer = setTimeout(leftClickDiv, 3000);\r\n        }\r\n        return () => {\r\n            timer && clearTimeout(timer)\r\n        }\r\n    }, [index])\r\n    const clearMyTimer = () => {\r\n        setIsHover(true)\r\n        clearTimeout(timer)\r\n    }\r\n    const createMyTimer = () => {\r\n        setIsHover(false)\r\n        timer = setTimeout(leftClickDiv, 3000);\r\n    }\r\n    return (\r\n        <div style={{position: 'relative', height: '400px'}} onMouseOver={clearMyTimer} onMouseOut={createMyTimer}>\r\n            {/* <div className='aniDiv' style={{width: '400px', height: '200px', backgroundColor: '#9FEAF9', margin: '10px', position: 'absolute', right: 0, top: 0, boxShadow: '0 0 10px gray'}}>\r\n\r\n            </div>\r\n            <div className='aniDiv' style={{width: '400px', height: '200px', backgroundColor: '#9FEAF9', margin: '10px', position: 'absolute', left: 0, top: 0, boxShadow: '0 0 10px gray'}}>\r\n\r\n            </div> */}\r\n            <div className={ `allT ${index == '1' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : `${index == '2' ? `${left ? 'ani2' : 'ani2Reverse'}` : `${index == '3' ? `${left ? 'anima3' : 'anima3Reverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 && props.data[0].imageUrl} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div className={ `allT1 ${index == '1' ? `${left ? 'ani2' : 'ani2Reverse'}` : `${index == '2' ? `${left ? 'anima3' : 'anima3Reverse'}` : `${index == '3' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 && props.data[1].imageUrl} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div className={ `allT2 ${index == '1' ? `${left ? 'anima3' : 'anima3Reverse'}` : `${index == '2' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : `${index == '3' ? `${left ? 'ani2' : 'ani2Reverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 && props.data[2].imageUrl} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div style={{position: 'absolute', left: 0, top: 0, width: '100%', height: '100%', zIndex: 3, opacity: 0.5, display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{flex: 1, opacity: 0.5, cursor: 'pointer'}} onClick={leftClickDiv}>\r\n\r\n                </div>\r\n                <div style={{flex: 1, opacity: 0.5, cursor: 'pointer'}} onClick={rightClickDiv}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSlider.js",["448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Router\\router.js",["493","494"],"import Router from 'react-easyroute';\r\nimport Login from '../Login/Login'\r\nimport Home from '../Home/Home';\r\nimport PersonalSuggest from '../Home/PersonalSuggest/PersonalSuggest';\r\nimport SubHome from '../Home/SubHome/SubHome';\r\nimport Playlist from '../Home/Playlist/Playlist';\r\nimport PlaylistDetail from '../Home/Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Home/Test/Test';\r\n\r\n\r\nconst router = new Router({\r\n    mode: 'hash',\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            component: Login,\r\n            name: 'Login'\r\n        },\r\n        {\r\n            path: '/home',\r\n            component: Home,\r\n            name: 'Home',\r\n            children: [\r\n                {\r\n                    path: '/',\r\n                    component: PersonalSuggest,\r\n                    name: 'PersonalSuggest'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n        routes: [\r\n            {\r\n                path: '/home',\r\n                exact: true,\r\n                component: PersonalSuggest,\r\n            },\r\n            {\r\n                path: '/home/:id',\r\n                exact: true,\r\n                component: SubHome,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/playlist/:id',\r\n        exact: true,\r\n        component: PlaylistDetail,\r\n    },\r\n    {\r\n        path: '/personal/:id',\r\n        exact: true,\r\n        component: Test,\r\n    },\r\n]\r\n\r\nexport default routes;","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\PersonalSuggest\\PersonalSuggest.js",["495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, message, Button, Slider } from \"antd\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./PersonalSuggest.less\";\r\nimport PlayImg from \"../../images/music/play-active.png\";\r\nimport Carousel from \"../../widgets/Carousel/Carousel\";\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*}\r\n */\r\nexport default function PersonalSuggest(props) {\r\n  const [songsData, setSongsData] = useState([]); //推荐音乐\r\n  const [perPlaylists, setPerPlaylists] = useState([]); //推荐歌单数据\r\n  const [videoGroupList, setVideoGroupList] = useState([]); //视频标签列表数据\r\n  const [selGroupID, setSelGroupID] = useState(\"0\"); //选中的视频标签item ID\r\n  const [isSpreadGroupList, setIsSpreadGroupList] = useState(false); //是否展开视频标签列表\r\n  const [perMV, setPerMV] = useState([]); //获取推荐MV数据\r\n  const [allMV, setAllMV] = useState([]); //获取全部MV数据\r\n  const [newMV, setNewMV] = useState([]); //获取最新MV\r\n  const [priContent, setPricontent] = useState([]); //独家放送\r\n  const [priContentList, setPricontentList] = useState([]); //独家放送列表\r\n  const [bannerData, setBannerData] = useState([]); //轮播图数据\r\n\r\n  /**\r\n   * 获取推荐歌曲\r\n   * @returns\r\n   */\r\n  const getPersonlizedSongs = async () => {\r\n    let data = await HTTPUtils.personalized_newsong();\r\n    setSongsData(data.result);\r\n  };\r\n  /**\r\n   * 获取推荐歌单\r\n   * @param {limit: 获取数量, 默认30} obj\r\n   */\r\n  const getPersonlizedPlaylists = async (obj) => {\r\n    let data = await HTTPUtils.personalized(obj);\r\n    setPerPlaylists(data.result);\r\n  };\r\n  const getPersonlizedMV = async () => {\r\n    let data = await HTTPUtils.personalized_mv();\r\n    console.log(data);\r\n    setPerMV(data.result);\r\n  };\r\n  /**\r\n   * 获取独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontent = async () => {\r\n    let data = await HTTPUtils.personalized_privatecontent();\r\n    console.log(\"独家放送1111\");\r\n    console.log(data);\r\n    setPricontent(data.result);\r\n  };\r\n  /**\r\n   * 获取所有独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontentList = async () => {\r\n    let obj = {\r\n      limit: 19,\r\n    };\r\n    let data = await HTTPUtils.personalized_privatecontent_list(obj);\r\n    console.log(\"独家放送列表2222\");\r\n    console.log(data);\r\n    setPricontentList(data.result);\r\n  };\r\n  const getBanner = async () => {\r\n    let obj = {\r\n      type: 0,\r\n    };\r\n    let data = await HTTPUtils.banner(obj);\r\n    console.log(data);\r\n    if (data.code != 200) {\r\n      message.error(data.msg || \"轮播图数据出错\");\r\n      return;\r\n    }\r\n    let list = data.banners;\r\n    list.length = 3;\r\n    console.log(list);\r\n    setBannerData(list);\r\n  };\r\n  /**\r\n   * 页面加载时, 获取推荐系列数据, 只执行一次----------------------------------------|\r\n   */\r\n  useEffect(async () => {\r\n    await getPersonlizedSongs();\r\n    let obj = {\r\n      limit: 12,\r\n    };\r\n    await getPersonlizedPlaylists(obj);\r\n    await getVideoCatList();\r\n    await getplaylistCatlist();\r\n    await getPlaylistCat();\r\n    await getPersonlizedPrivatecontent();\r\n    await getPersonlizedPrivatecontentList();\r\n    await getBanner();\r\n    await getPersonlizedMV();\r\n  }, []);\r\n  /**\r\n   * 需要登录\r\n   * 获取视频系列接口-----------------------------------------------------------------\r\n   */\r\n  //接口---获取视频标签列表\r\n  const getVideoCatList = async () => {\r\n    let data = await HTTPUtils.video_group_list();\r\n    data.data.unshift({ id: \"0\", name: \"全部\" });\r\n    setSelGroupID(data.data[0].id);\r\n    setVideoGroupList(data.data);\r\n  };\r\n  //事件---视频标签item click点击事件\r\n  const selectVideoGroup = async (item) => {\r\n    setSelGroupID(item.id);\r\n    await getVideoGroup(item.id);\r\n  };\r\n  //事件---展开/关闭视频标签列表\r\n  const changeGroupListHeight = () => {\r\n    setIsSpreadGroupList(!isSpreadGroupList);\r\n  };\r\n  //接口---获取相应视频标签下视频列表\r\n  const getVideoGroup = async (id) => {\r\n    if (id == 0) {\r\n      return;\r\n    }\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    console.log(\"id id id\");\r\n    console.log(id);\r\n    let data = await HTTPUtils.video_group(obj);\r\n    console.log(\"视频\");\r\n    console.log(data);\r\n    // let data = await HTTPUtils.video_timeline_all();\r\n  };\r\n\r\n  /**\r\n   * 歌单系列接口--------------------------------------------||\r\n   */\r\n  /**\r\n   * 获取歌单分类列表\r\n   */\r\n  const getplaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    console.log(data);\r\n  };\r\n  const getPlaylistCat = async (obj) => {\r\n    let bb = {\r\n      cat: \"古风\",\r\n      limit: 10,\r\n    };\r\n    let data = await HTTPUtils.top_playlist(bb);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>personalsuggest</div>\r\n      <Carousel data={bannerData} />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"50px 0\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">最新音乐</p>\r\n          </div>\r\n          <div style={{ flex: 1 }}>\r\n            {songsData.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={`personSongsItem \r\n                                ${index == 0 && \"firstImg\"}\r\n                                ${index == 1 && \"secImg\"}\r\n                                ${index == 2 && \"thirdImg\"}\r\n                            `}\r\n                  key={item.id}\r\n                >\r\n                  <p style={{ width: 50 }}>{index}</p>\r\n                  <img src={item.picUrl + \"?param=200y200\"} />\r\n                  <div>\r\n                    {item.name +\r\n                      \" \" +\r\n                      \"-\" +\r\n                      \" \" +\r\n                      item.song.album.artists[0].name}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">推荐歌单</p>\r\n          </div>\r\n          <div className=\"playlist_suggest\">\r\n            {perPlaylists.map((item, index) => {\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"playlistItem min30PlaylistItem\"\r\n                  // onMouseOver={() => playlistOver(item.id, 1)}\r\n                  // onMouseOut={() => playlistOver(item.id, 2)}\r\n                >\r\n                  <div className=\"playlistItemContent\">\r\n                    <img\r\n                      className=\"playlistItemContentImg\"\r\n                      src={item.picUrl + \"?param=200y200\"}\r\n                    />\r\n                    <div className=\"playlistItemContentImgCon\">\r\n                      <img src={PlayImg} />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"playlistItemDes\">{item.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">视频标签列表</p>\r\n      </div>\r\n      <div\r\n        className={`videoGroupList\r\n                    ${isSpreadGroupList ? \"autoHeight\" : \"fixedHeight\"}\r\n                    `}\r\n      >\r\n        {videoGroupList.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={item.id}\r\n              className={`\r\n                                    videoGroupListItem \r\n                                    ${\r\n                                      item.id == selGroupID\r\n                                        ? \"videoGroupListItemActive\"\r\n                                        : null\r\n                                    }\r\n                                `}\r\n              onClick={() => selectVideoGroup(item)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        style={{ borderBottom: \"1px solid red\", cursor: \"pointer\" }}\r\n        onClick={changeGroupListHeight}\r\n      >\r\n        <p style={{ color: \"red\", textAlign: \"right\", padding: \"0 20px\" }}>\r\n          展开\r\n        </p>\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContent.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送列表</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContentList.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">推荐MV</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {perMV.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min20PlaylistItem\"\r\n              // onMouseOver={() => playlistOver(item.id, 1)}\r\n              // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl + \"?param=200y200\"}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\SubHome\\SubHome.js",["519","520","521","522","523","524","525","526","527","528","529","530","531","532"],"import React, { useState, useEffect,  } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PersonalSuggest from '../PersonalSuggest/PersonalSuggest'\r\nimport Playlist from '../Playlist/Playlist';\r\nimport Toplist from '../Toplist/Toplist';\r\nimport Artists from '../Artists/Artists';\r\nimport NewestSong from '../NewestSong/NewestSong';\r\nimport PlaylistDetail from '../Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Test/Test';\r\nimport MusicSlider from '../../MusicSlider/MusicSlider'\r\nimport MusicSliderComponent from '../../MusicSlider/MusicSliderComponent';\r\nimport ArtistDetail from '../Artists/ArtistDetail/ArtistDetail'\r\n\r\nexport default function SubHome(props) {\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n    })\r\n\r\n    return (\r\n        <div\r\n            style={{margin: '0 20px'}}\r\n        >\r\n            {\r\n                id == 0 ?\r\n                <PersonalSuggest/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 1 ?\r\n                <Playlist/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 2 ?\r\n                <Toplist/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 3?\r\n                <Artists/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id!= 0 && id != 1 && id !=2 && id != 3 ?\r\n                // <NewestSong/>\r\n                // <PlaylistDetail/>\r\n                // <Test/>\r\n                // <MusicSliderComponent/>\r\n                <MusicSlider/>\r\n                // <ArtistDetail/>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\Playlist.js",["533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549"],"import React, { useState, useEffect } from \"react\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./Playlist.less\";\r\nimport VipImg from \"../../images/Playlist/vip.png\"; //歌单item---vip图片\r\nimport HeaderImg from \"../../images/Playlist/header.png\"; //歌单item---头像图片\r\nimport PlayImg from \"../../images/Playlist/play.png\"; //歌单item---播放图片\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\"; //歌单item---hover时现实的播放图片\r\nimport LanguageImg from \"../../images/Playlist/language.png\"; //歌单标签下拉列表---语种图片\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction Playlist(props) {\r\n  const [allCatList, setAllCatList] = useState([]); //歌单分类\r\n  const [hotCatList, setHotCatList] = useState([]); //热门歌单分类\r\n  const [allPlaylist, setAllPlayList] = useState([]); //歌单(网友精选碟)\r\n  const [hgquaPlaylist, setHgquaPlaylist] = useState([]); //精品歌单\r\n\r\n  const [catlistHotActiveItem, setCatlistHotActiveItem] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n  }); //当前热门标签item.id---用于active class\r\n  const [expandIndex, setExpandIndex] = useState(-1); //歌单列表item expand\r\n  /**\r\n   * 歌单标签下拉列表数据\r\n   */\r\n  const [showDropCatlist, setShowDropCatlist] = useState(false); //是否显示歌单标签下拉列表\r\n  const [catlistActiveItem, setCatlistActiveItem] = useState({\r\n    id: 0,\r\n    name: \"全部\",\r\n  }); //当前点击item.id--用于active class\r\n\r\n  const playlistDetail = (item) => {\r\n    console.log(\"查看歌单详情\");\r\n    console.log(item)\r\n    console.log(props)\r\n    props.history.push('/playlist/'+item.id)\r\n  };\r\n  const playTheList = (e) => {\r\n    //阻止冒泡\r\n    e.stopPropagation();\r\n    console.log(\"播放歌单\");\r\n  };\r\n\r\n  /**\r\n   * 获取歌单标签列表\r\n   */\r\n  const getPlaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    let allData = [];\r\n    let cats = data.categories;\r\n    let subs = data.sub;\r\n    //为每个子标签加个id, 用于active class\r\n    subs.map((item, index) => {\r\n      item.id = index + 1;\r\n    });\r\n    //重组数据, 重组后结构为[{cat: {id, name}, sub: Array}]\r\n    Object.entries(cats).map((item, index) => {\r\n      let sinData = {};\r\n      let cat = {};\r\n      cat.id = item[0];\r\n      cat.val = item[1];\r\n      let newSub = subs.filter((s) => s.category == cat.id);\r\n      sinData.cat = cat;\r\n      sinData.sub = newSub;\r\n      allData.push(sinData);\r\n    });\r\n    //更新歌单列表\r\n    setAllCatList(allData);\r\n  };\r\n  /**\r\n   * 获取歌单热门标签列表\r\n   */\r\n  const getPlaylistHot = async () => {\r\n    let data = await HTTPUtils.playlist_hot();\r\n    setHotCatList(data.tags);\r\n  };\r\n  /**\r\n   * 获取对应标签下, 歌单列表; 默认全部\r\n   * @param {obj: Object} obj :标签信息\r\n   */\r\n  const getAllPlaylist = async (obj) => {\r\n    let data = await HTTPUtils.top_playlist(obj);\r\n    console.log(\"歌单数据\");\r\n    console.log(data);\r\n    setAllPlayList(data.playlists);\r\n  };\r\n\r\n  const getHGPlaylsit = async (item) => {\r\n    let obj = {\r\n      limit: 1,\r\n    };\r\n    if (item) {\r\n      obj.cat = item.name;\r\n    }\r\n    let data = await HTTPUtils.top_playlist_highquality(obj);\r\n    console.log(data);\r\n    setHgquaPlaylist(data.playlists);\r\n  };\r\n\r\n  /**\r\n   * 页面加载后调用, 只执行一次;\r\n   */\r\n  useEffect(async () => {\r\n    await getPlaylistCatlist();\r\n    await getPlaylistHot();\r\n    await getAllPlaylist();\r\n    await getHGPlaylsit();\r\n  }, []);\r\n\r\n  /**\r\n   * 初始化热门标签列表, 选中对应标签, 获取对应标签歌单列表\r\n   * @param {item: Object} item : 点击的item\r\n   */\r\n  const selectDropItem = async (item) => {\r\n    setCatlistActiveItem(item);\r\n    setCatlistHotActiveItem({ id: 0, name: \"\" });\r\n    let obj = {\r\n      cat: item.name,\r\n    };\r\n    // showAllCatlist();\r\n    await getAllPlaylist(obj);\r\n  };\r\n  /**\r\n   * 初始化所有标签列表, 选中对应热门标签, 获取对应标签歌单列表\r\n   * @param {item: Object} item: 热门标签active的item\r\n   */\r\n  const selectHotItem = async (item) => {\r\n    setCatlistHotActiveItem(item);\r\n    setCatlistActiveItem({ id: 0, name: \"全部\" });\r\n    let obj = {\r\n      cat: item.name,\r\n    };\r\n    await getAllPlaylist(obj);\r\n  };\r\n  /**\r\n   * 开启/关闭所有标签列表dropdown\r\n   */\r\n  const showAllCatlist = () => {\r\n    setShowDropCatlist(!showDropCatlist);\r\n  };\r\n\r\n  /**\r\n   * 当该item处于onmouseover事件中, 改变该item和当前行其他item的宽度, 通过expandindex计算\r\n   * @param {index: Number} index : 歌单列表item的index\r\n   */\r\n  const expandOver = (index) => {\r\n    setExpandIndex(index);\r\n  };\r\n  /**\r\n   * 当该item处于onmouseout事件中, 重置改变该item和当前行其他item的宽度, 设置expandindex为-1即可\r\n   * @param {index: Number} index : 歌单列表item的index\r\n   */\r\n  const expandOut = () => {\r\n    setExpandIndex(-1);\r\n  };\r\n  return (\r\n    <div className=\"allPl\">\r\n      <div className=\"allPlHeader\" style={{ position: \"relative\" }}>\r\n        <img\r\n          src={hgquaPlaylist.length > 0 ? hgquaPlaylist[0].coverImgUrl : \"\"}\r\n          className=\"allPlHeaderBackImg\"\r\n        />\r\n        <div className=\"allPlHeaderFront\">\r\n          <div className=\"allPlHeaderFrontLeft\">\r\n            <img\r\n              className=\"allPlHeaderFrontLeftImg\"\r\n              src={hgquaPlaylist.length > 0 ? hgquaPlaylist[0].coverImgUrl : \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"allPlHeaderFrontRight\">\r\n            <span className=\"allPlHeaderFrontRightTop\">精品歌单</span>\r\n            <p className=\"allPlHeaderFrontRightName\">\r\n              {hgquaPlaylist.length > 0 ? hgquaPlaylist[0].name : \"\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"allPlTags\">\r\n        <div className=\"allPlTagsSelRow\">\r\n          <div className=\"allPlTagsSel\" onClick={showAllCatlist}>\r\n            <span>{catlistActiveItem.name}</span>\r\n          </div>\r\n          {showDropCatlist ? (\r\n            <div className=\"allPlTagsSelDrop\">\r\n              <div className=\"allPlTagsSelDropHeader\">\r\n                <span\r\n                  className={`${\r\n                    catlistActiveItem.id == 0\r\n                      ? \"allPlTagsSelDropRowRightItemActive\"\r\n                      : \"\"\r\n                  }  allPlTagsSelDropHeaderTitle`}\r\n                  onClick={() => selectDropItem({ id: 0, name: \"全部\" })}\r\n                >\r\n                  全部歌单\r\n                </span>\r\n              </div>\r\n              {allCatList.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"allPlTagsSelDropRow\">\r\n                    <div\r\n                      key={index + \"_\" + item.cat.id}\r\n                      className=\"allPlTagsSelDropRowLeft\"\r\n                    >\r\n                      <img\r\n                        src={LanguageImg}\r\n                        style={{ width: 30, height: 30 }}\r\n                      />\r\n                      <span>{item.cat.val} </span>\r\n                    </div>\r\n                    <div className=\"allPlTagsSelDropRowRight\">\r\n                      {item.sub.map((zItem, zIndex) => {\r\n                        return (\r\n                          <p\r\n                            key={zItem.id}\r\n                            className={`${\r\n                              catlistActiveItem.id == zItem.id\r\n                                ? \"allPlTagsSelDropRowRightItemActive\"\r\n                                : \"\"\r\n                            } allPlTagsSelDropRowRightItem`}\r\n                            onClick={() => selectDropItem(zItem)}\r\n                          >\r\n                            {zItem.name}\r\n                          </p>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <ul className=\"allPlTagsHot\">\r\n          {hotCatList.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                className={`${\r\n                  catlistHotActiveItem.id == item.id\r\n                    ? \"allPlTagsHotItemActive\"\r\n                    : \"\"\r\n                } allPlTagsHotItem`}\r\n                onClick={() => selectHotItem(item.playlistTag)}\r\n              >\r\n                {item.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div style={{ padding: 20 }}>\r\n        {allPlaylist.map((item, index) => {\r\n          //Math.floor(expandIndex/5) == Math.floor(index/5)---是否是当前行, 因为默认一行有5个元素\r\n          //expandIndex == index : 是否是当前行, hover元素, 如果是当前元素, 加宽类expand; 如果不是, 缩小宽度类noexpand\r\n          return (\r\n            <div\r\n              key={item.id + \"-\" + index}\r\n              className={`${\r\n                Math.floor(expandIndex / 5) == Math.floor(index / 5)\r\n                  ? expandIndex == index\r\n                    ? \"expand\"\r\n                    : \"noexpand\"\r\n                  : \"\"\r\n              } allPlItem`}\r\n            >\r\n              <div\r\n                className=\"allPlItemImgContainer\"\r\n                onClick={() => playlistDetail(item)}\r\n                onMouseOver={() => expandOver(index)}\r\n                onMouseOut={expandOut}\r\n              >\r\n                <img\r\n                  src={item.coverImgUrl + \"?param=280y280\"}\r\n                  className=\"allPlItemImgConMain\"\r\n                />\r\n                <div className=\"allPlItemImgContainerTL\">\r\n                  <img src={PlayImg} className=\"deImg\" />\r\n                  <span>{item.playCount}</span>\r\n                </div>\r\n                <div className=\"allPlItemImgContainerLB\">\r\n                  <img src={HeaderImg} className=\"deImg\" />\r\n                  <span>{item.creator.nickname}</span>\r\n                  <img src={VipImg} className=\"deImg\" />\r\n                </div>\r\n                <div\r\n                  className=\"allPlItemImgContainerRB\"\r\n                  onClick={(e) => playTheList(e)}\r\n                >\r\n                  <img src={PlayHoverImg} className=\"rbImg\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"allPlItemDesc\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Playlist)","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Toplist\\Toplist.js",["550","551","552","553","554","555","556","557","558","559","560","561","562"],"import React, { useState, useEffect } from \"react\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./Toplist.less\";\r\nimport RightImg from \"../../images/Toplist/right.png\";\r\nimport PauseImg from \"../../images/Playlist/play.png\";\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\";\r\n\r\nexport default function Toplist(props) {\r\n  const [allToplist, setAllToplist] = useState([]); //所有排行榜数据\r\n  const [topFiveData, setTopFiveData] = useState([]); //要显示的top5数据, 以及每个排行榜的top5歌曲\r\n  /**\r\n   * 获取所有排行榜数据\r\n   */\r\n  const getAllToplist = async () => {\r\n    let data = await HTTPUtils.toplist();\r\n    let list = data.list;\r\n    setAllToplist(list);\r\n  };\r\n  /**\r\n   * 获取某个排行榜歌曲数据\r\n   * @param {NUMBER : STRING} id 排行榜id\r\n   * @returns \r\n   */\r\n  const getTopFiveData = async (id) => {\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    let data = await HTTPUtils.playlist_detail(obj);\r\n    return data.playlist;\r\n  };\r\n  //当获取所有排行榜数据, 只要前5个, 循环获取这5个排行榜的热门歌曲, 也只取前5首歌, 然后更新数据---依赖alltoplist\r\n  useEffect(async () => {\r\n    if (allToplist.length == 0) {\r\n      return;\r\n    }\r\n    let newList = JSON.parse(JSON.stringify(allToplist));\r\n    newList.length = 5;\r\n    let arr = [];\r\n    let i = 0;\r\n    while (i < 5) {\r\n      let data = await getTopFiveData(newList[i].id);\r\n      arr.push(data);\r\n      i++;\r\n    }\r\n    setTopFiveData(arr)\r\n  }, [allToplist]);\r\n  //页面加载时, 执行一次获取所有排行榜数据\r\n  useEffect(async () => {\r\n    await getAllToplist();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        className='topfive'\r\n      >\r\n        {topFiveData.map((item, index) => {\r\n            let sub = JSON.parse(JSON.stringify(item.tracks));\r\n            sub.length = 5;\r\n            \r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className='topfiveView'\r\n            >\r\n              <div \r\n                className='topfiveViewLeft'\r\n              >\r\n                <img\r\n                  className='topfiveViewLeftImg'\r\n                  src={item.coverImgUrl}\r\n                />\r\n              </div>\r\n              <div \r\n                className='topfiveViewRight'\r\n              >\r\n                <div>\r\n                  {sub.map((zItem, zIndex) => {\r\n                      let arts = [];\r\n                      zItem.ar && zItem.ar.map((z, i) => {\r\n                          arts.push(z.name)\r\n                      })\r\n                      let artStr = arts.join('/');\r\n                    return (\r\n                      <div\r\n                        key={zItem.id}\r\n                        tabIndex='1'\r\n                        className={`topFiveItem ${\r\n                          zIndex % 2 == 0 ? \"topFiveItemIndex\" : \"\"\r\n                        }`}\r\n                      >\r\n                        <div>\r\n                          <span\r\n                            className={`${\r\n                              zIndex == 0 || zIndex == 1 || zIndex == 2\r\n                                ? \"txtRed\"\r\n                                : \"\"\r\n                            }`}\r\n                          >\r\n                            {zIndex}\r\n                          </span>\r\n                          <span style={{ marginLeft: 10 }}>{zItem.name}</span>\r\n                        </div>\r\n                        <div>\r\n                          <span>{artStr}</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <div className='topfiveViewRightMore'>\r\n                  <span>查看全部</span>\r\n                  <img src={RightImg} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        className='toplistView'\r\n      >\r\n        {allToplist.map((item, index) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"toplistItem\">\r\n                <img className=\"toplistItemImg\" src={item.coverImgUrl} />\r\n                <div className=\"toplistItemRight\">\r\n                  <img className=\"toplistItemRightImg\" src={PauseImg} />\r\n                  <span>{Math.floor(item.playCount / 10000) + '万'}</span>\r\n                </div>\r\n                <div className=\"toplistItemCenter\">\r\n                  <img className=\"toplistItemCenterImg\" src={PlayHoverImg} />\r\n                </div>\r\n              </div>\r\n              <div style={{ fontSize: 18, padding: 10, textAlign: \"left\" }}>\r\n                <p>{item.name}</p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\Artists.js",["563","564","565","566","567","568","569","570","571","572","573","574","575"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Artists.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\n\r\nexport default function Artists(props) {\r\n  const artistsRef = useRef();\r\n  const [types, setTypes] = useState([\r\n    //歌手筛选分类\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"男歌手\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"女歌手\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"乐队组合\",\r\n    },\r\n  ]);\r\n  const [areas, setAreas] = useState([\r\n    //歌手筛选语种\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      name: \"欧美\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"日本\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"韩国\",\r\n    },\r\n    {\r\n      id: 0,\r\n      name: \"其他\",\r\n    },\r\n  ]);\r\n  const [cats, setCats] = useState([\r\n    //筛选名字首字母信息\r\n    { id: -1, name: \"热门\" },\r\n    { id: \"A\", name: \"A\" },\r\n    { id: \"B\", name: \"B\" },\r\n    { id: \"C\", name: \"C\" },\r\n    { id: \"D\", name: \"D\" },\r\n    { id: \"E\", name: \"E\" },\r\n    { id: \"F\", name: \"F\" },\r\n    { id: \"G\", name: \"G\" },\r\n    { id: \"H\", name: \"H\" },\r\n    { id: \"I\", name: \"I\" },\r\n    { id: \"J\", name: \"J\" },\r\n    { id: \"K\", name: \"K\" },\r\n    { id: \"L\", name: \"L\" },\r\n    { id: \"M\", name: \"M\" },\r\n    { id: \"N\", name: \"N\" },\r\n    { id: \"O\", name: \"O\" },\r\n    { id: \"P\", name: \"P\" },\r\n    { id: \"Q\", name: \"Q\" },\r\n    { id: \"R\", name: \"R\" },\r\n    { id: \"S\", name: \"S\" },\r\n    { id: \"T\", name: \"T\" },\r\n    { id: \"U\", name: \"U\" },\r\n    { id: \"V\", name: \"V\" },\r\n    { id: \"W\", name: \"W\" },\r\n    { id: \"X\", name: \"X\" },\r\n    { id: \"Y\", name: \"Y\" },\r\n    { id: \"Z\", name: \"Z\" },\r\n    { id: \"#\", name: \"#\" },\r\n  ]);\r\n  const [activeType, setActiveType] = useState(\"-1\"); //当前active的歌手分类\r\n  const [activeArea, setActiveArea] = useState(\"-1\"); //当前active的歌手语种\r\n  const [activeCat, setActiveCat] = useState(\"-1\"); //当前active的歌手筛选\r\n  const [artistsData, setArtistsData] = useState([]); //歌手分类列表数据\r\n\r\n  /**\r\n   * \r\n   * @param {Number} id : 所选对应类别item的id\r\n   * @param {Number} type : 1为语种; 2位性别和组合; 3为歌手首字母筛选\r\n   */\r\n  const selectCatItem = (id, type) => {\r\n    switch(type) {\r\n      case 1:\r\n        setActiveArea(id);\r\n        break;\r\n      case 2:\r\n        setActiveType(id);\r\n        break;\r\n      case 3:\r\n        setActiveCat(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getArtistsList = async (obj) => {\r\n    let data = await HTTPUtils.artist_list(obj);\r\n    setArtistsData(data.artists)\r\n  }\r\n  //依赖项语种, 男/女/组合, 每次点击都要重新获取数据\r\n  useEffect(async () => {\r\n    let obj = {\r\n      area: activeArea,\r\n      type: activeType,\r\n      initial: activeCat,\r\n    }\r\n    await getArtistsList(obj)\r\n  }, [activeArea, activeType, activeCat])\r\n  //依赖项歌手数据, 每个更新数据, 都要为每个img添加懒加载, \r\n  useEffect(() => {\r\n    let imgs = document.querySelectorAll('.artistsListItemImg');\r\n    imgs.forEach((item, index) => {\r\n      let dataSrc = item.getAttribute('data-imgurl');\r\n      if(item.src != dataSrc) {\r\n        let offsetTop = item.offsetTop;\r\n        let clientHeight = window.innerHeight;\r\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n        if(offsetTop < (clientHeight + scrollTop - 100)) {\r\n          item.src = dataSrc;\r\n        }\r\n      }\r\n    })\r\n  }, [artistsData])\r\n  window.onscroll = () => {\r\n    if(artistsRef) {\r\n      let imgs = document.querySelectorAll('.artistsListItemImg');\r\n      imgs.forEach((item, index) => {\r\n        let dataSrc = item.getAttribute('data-imgurl');\r\n        if(item.src != dataSrc) {\r\n          let offsetTop = item.offsetTop;\r\n          let clientHeight = window.innerHeight;\r\n          let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n          if(offsetTop < (clientHeight + scrollTop - 100)) {\r\n            item.src = dataSrc;\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className='artists'\r\n      ref={artistsRef}\r\n    >\r\n      <div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">语种: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {areas.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeArea == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 1)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= areas.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">分类: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {types.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeType == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 2)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= types.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">筛选: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {cats.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    key={item.id}\r\n                    className={`${\r\n                      activeCat == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item.id, 3)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= cats.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='artistsList'\r\n      >\r\n        {\r\n          artistsData.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={item.id+'_'+index}\r\n                className='artistsListItem'\r\n              >\r\n                <div className='artistsListItemImgCon'>\r\n                  <img\r\n                    className='artistsListItemImg'\r\n                    src=''\r\n                    data-imgurl={item.picUrl+'?param=280y280'}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p className='artistsListItemName'>\r\n                    {item.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\NewestSong\\NewestSong.js",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./NewestSong.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport PlayActiveImg from \"../../images/music/play-active.png\";\r\nimport SubImg from \"../../images/NewestSong/sub.png\";\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\";\r\n\r\nconst getDate = () => {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let obj = {\r\n    year,\r\n    month,\r\n  };\r\n  return obj;\r\n};\r\nexport default function NewestSong(props) {\r\n  const [activeTab, setActiveTab] = useState(1); //当前选中的tab; 1为新歌速递; 2位新碟上架\r\n  const [areaCat, setAreaCat] = useState([\r\n    {\r\n      id: 0,\r\n      value: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      value: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      value: \"欧美\",\r\n    },\r\n    {\r\n      id: 16,\r\n      value: \"韩国\",\r\n    },\r\n    {\r\n      id: 8,\r\n      value: \"日本\",\r\n    },\r\n  ]);\r\n  const [activeCat, setActiveCat] = useState(0); //当前active的area type\r\n  const [paramsDate, setParamsDate] = useState({\r\n    year: getDate().year,\r\n    month: getDate().month,\r\n  }); //请求新碟上架数据所需要的参数year和month\r\n  const [temMonthData, setTemMonthData] = useState({}); //存储每次数据请求返回的月数据monthData;\r\n  const [allData, setAllData] = useState([]); //所有新碟上架数据\r\n  /**\r\n   *\r\n   * @param {Number} tab : 选择的tab; 1为新歌速递; 2位新碟上架\r\n   */\r\n  const selectTab = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  /**\r\n   *\r\n   * @param {Number} cat :选择的地区;\r\n   */\r\n  const selectCat = (cat) => {\r\n    setActiveCat(cat);\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} item : 新歌速递每个item的数据\r\n   * @returns item的元素element\r\n   */\r\n  const SongsListItem = (item) => {\r\n    return (\r\n      <div tabIndex=\"1\" className=\"songsListItem\">\r\n        <div style={{ flex: 2 }} className=\"padItem lightColorItem centerItem\">\r\n          01\r\n        </div>\r\n        <div\r\n          style={{ flex: 3, position: \"relative\" }}\r\n          className=\"padItem centerItem \"\r\n        >\r\n          <img\r\n            className=\"itemImg\"\r\n            src=\"http://p4.music.126.net/slF9RoIs27y3dR73tkmmEg==/109951165599739964.jpg\"\r\n          />\r\n          <img className=\"centerImg\" src={PlayHoverImg} />\r\n        </div>\r\n        <div style={{ flex: 16 }} className=\"padItem leftItem\">\r\n          Run\r\n        </div>\r\n        <div style={{ flex: 6 }} className=\"padItem leftItem colorItem\">\r\n          OneRepublic\r\n        </div>\r\n        <div style={{ flex: 8 }} className=\"padItem leftItem colorItem\">\r\n          Run\r\n        </div>\r\n        <div style={{ flex: 2 }} className=\"padItem centerItem colorItem\">\r\n          02:49\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} data : 生成指定结构的数据{title: String, year: String, month: String, week: Boolean, list: Array}\r\n   */\r\n  const geneCorStucData = async (data) => {\r\n    //如果是最新数据, 则有weekData数据,\r\n    let tem = data ? data : temMonthData;\r\n    let newTemData = JSON.parse(JSON.stringify(tem));\r\n    let newAllData = JSON.parse(JSON.stringify(allData));\r\n    let isNewest = newTemData.hasOwnProperty(\"weekData\");\r\n    let newData = [];\r\n    let obj = {};\r\n    if (isNewest) {\r\n      if (newAllData.length == 0) {\r\n        obj.title = \"本周新碟\";\r\n        obj.week = true;\r\n        obj.year = paramsDate.year;\r\n        obj.month = paramsDate.month;\r\n        obj.list = [];\r\n        obj.list = newTemData.weekData.splice(0, 20);\r\n        console.log(\"第一次加载\");\r\n        console.log(obj);\r\n        newAllData.push(obj);\r\n      } else {\r\n        if (newAllData[newAllData.length - 1].week) {\r\n          if (newTemData.weekData.length != 0) {\r\n            newAllData[newAllData.length - 1].list = newAllData[\r\n              newAllData.length - 1\r\n            ].list.concat(newTemData.weekData.splice(0, 20));\r\n          } else {\r\n            obj.title = paramsDate.year + \"-\" + paramsDate.month;\r\n            obj.week = false;\r\n            obj.year = paramsDate.year;\r\n            obj.month = paramsDate.month;\r\n            obj.list = [];\r\n            obj.list = newTemData.monthData.splice(0, 20);\r\n            newAllData.push(obj);\r\n          }\r\n        } else {\r\n          if (newTemData.monthData.length != 0) {\r\n            newAllData[newAllData.length - 1].list = newAllData[\r\n              newAllData.length - 1\r\n            ].list.concat(newTemData.monthData.splice(0, 20));\r\n          } else {\r\n            let params = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            let p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n            setParamsDate(p);\r\n            getTopAlbum(params);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      console.log(paramsDate)\r\n      if (\r\n        newAllData[newAllData.length - 1]?.year == paramsDate.year &&\r\n        newAllData[newAllData.length - 1]?.month == paramsDate.month\r\n      ) {\r\n        if (newTemData.monthData.length != 0) {\r\n          newAllData[newAllData.length - 1].list = newAllData[\r\n            newAllData.length - 1\r\n          ].list.concat(newTemData.monthData.splice(0, 20));\r\n        } else {\r\n          let params = {};\r\n          let p = {};\r\n          if(parseInt(paramsDate.month > 1)) {\r\n            params = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n          }else {\r\n            params = {\r\n              year: (parseInt(paramsDate.year)-1).toString,\r\n              month: '12',\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n          }\r\n          setParamsDate(p);\r\n          getTopAlbum(params);\r\n        }\r\n      } else {\r\n        obj.title = paramsDate.year + \"-\" + paramsDate.month;\r\n        obj.week = false;\r\n        obj.year = paramsDate.year;\r\n        obj.month = paramsDate.month;\r\n        obj.list = [];\r\n        obj.list = newTemData.monthData?.splice(0, 20);\r\n        newAllData.push(obj);\r\n      }\r\n    }\r\n    setTemMonthData(newTemData);\r\n    setAllData(newAllData);\r\n    let intersectionObserver = new IntersectionObserver(function(entries) {\r\n      entries.forEach((item, index) => {\r\n        if(item.intersectionRatio > 0) {\r\n          let realUrl = item.target.getAttribute('data-imgurl');\r\n          let temUrl = item.target.src;\r\n          if(temUrl != realUrl) {\r\n            realUrl = realUrl +'?param=140y140';\r\n            item.target.setAttribute('src', realUrl)\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let eles = document.querySelectorAll('#pp');\r\n    eles.forEach((item, index) => {\r\n      intersectionObserver.observe(item)\r\n    })\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} params : 请求新碟数据所需要的参数{limit, type, area, year, month, offset}\r\n   */\r\n  const getTopAlbum = async (params) => {\r\n    let data = await HTTPUtils.top_album(params);\r\n    geneCorStucData(data);\r\n    // setTemMonthData(data);\r\n    // setTemMonthData(async (x) => {\r\n    //   await geneCorStucData(data);\r\n    // })\r\n    // let obj = {a: 1};\r\n    // console.log(data)\r\n    // setTemMonthData(data);\r\n    // await setTemMonthData((x) => {\r\n    //   console.log('临时数据')\r\n    //   console.log(x)\r\n    //   return x;\r\n    // })\r\n    // console.log('444444444444444')\r\n    // await console.log(temMonthData)\r\n  };\r\n  /**\r\n   *\r\n   * @returns 返回新碟上架请求参数area\r\n   */\r\n  const getAlbumArea = () => {\r\n    let val = \"\";\r\n    switch (activeCat) {\r\n      case 0:\r\n        val = \"ALL\";\r\n        break;\r\n      case 7:\r\n        val = \"ZH\";\r\n        break;\r\n      case 96:\r\n        val = \"EA\";\r\n        break;\r\n      case 16:\r\n        val = \"KR\";\r\n        break;\r\n      case 8:\r\n        val = \"JP\";\r\n        break;\r\n      default:\r\n        val = \"ALL\";\r\n        break;\r\n    }\r\n    return val;\r\n  };\r\n  /**\r\n   * 依赖项paramsDate, 每次变化都要重新获取新碟数据(第一次请求或者获取上一月新碟上架数据)\r\n   */\r\n  useEffect(async () => {\r\n    let params = JSON.parse(JSON.stringify(paramsDate));\r\n    params.type = \"new\";\r\n    params.area = getAlbumArea();\r\n    // await getTopAlbum(params)\r\n  }, [paramsDate]);\r\n  /**\r\n   * 依赖项activeCat, 每次变化, 都要将请求参数paramsDate中的year和month更新成最新年月\r\n   */\r\n  useEffect(() => {\r\n    let obj = getDate();\r\n    setParamsDate(obj);\r\n  }, [activeCat]);\r\n  /**\r\n   * 页面加载完成后, 请求数据, 只执行一次\r\n   */\r\n  useEffect(async () => {\r\n    let intersectionObserver = new IntersectionObserver(function(entries) {\r\n      entries.forEach((item, index) => {\r\n        if(item.intersectionRatio > 0) {\r\n          let realUrl = item.target.getAttribute('data-imgurl');\r\n          let temUrl = item.target.src;\r\n          if(temUrl != realUrl) {\r\n            realUrl = realUrl +'?param=280y280';\r\n            item.target.setAttribute('src', realUrl)\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let eles = document.querySelectorAll('#pp');\r\n    eles.forEach((item, index) => {\r\n      intersectionObserver.observe(item)\r\n    })\r\n    let params = {\r\n      limit: \"10\",\r\n      area: \"ALL\",\r\n      type: \"new\",\r\n      year: \"2021\",\r\n      month: \"5\",\r\n    };\r\n    await getTopAlbum(params);\r\n  }, []);\r\n  // window.onscroll = () => {\r\n  //   console.log('滚动 滚动')\r\n  //   let eles = document.querySelectorAll(\"#ele\");\r\n  //   let inh = window.innerHeight;\r\n  //   let sct = document.documentElement.scrollTop || document.body.scrollTop;\r\n  //   // console.log('距离顶部, ', top);\r\n  //   // console.log('可视窗口高度, ', inh);\r\n  //   // console.log('滚动距离, ', sct)\r\n  //   // console.log(eles[0].querySelectorAll('#pp')[0].getAttribute('src'))\r\n  //   // let ele\r\n  //   eles.forEach((ele, index) => {\r\n  //     let top = ele.offsetTop;\r\n  //     let pp = ele.querySelectorAll(\"#pp\")[0];\r\n  //     // console.log(pp)\r\n  //     // console.log(pp.style.src)\r\n  //     // console.log(pp.style['data-imgurl'])\r\n  //     console.log(pp.src)\r\n  //     if (ele.offsetTop < (sct + inh) && (top+350)  > sct) {\r\n  //       if(pp.src != pp.getAttribute('data-imgurl')) {\r\n  //         console.log(pp.getAttribute('data-imgurl'))\r\n  //         pp.src = pp.getAttribute('data-imgurl');\r\n  //       }\r\n  //       // console.log(\"可视区域之内\");\r\n  //       // pp.style.display = \"block\";\r\n  //     } else {\r\n  //       // console.log(\"可视范围以外\");\r\n  //       // pp.style.display = \"none\";\r\n  //     }\r\n  //   })\r\n  // };\r\n  // window.onscroll = () => {\r\n  //   console.log('滚动 滚动')\r\n  // }\r\n  const throttle = (func, delay) => {\r\n    let isValid = false;\r\n    return function () {\r\n      if (isValid) {\r\n        return false;\r\n      }\r\n      isValid = true;\r\n      let timer = setTimeout(() => {\r\n        func();\r\n        isValid = false;\r\n      }, delay);\r\n    };\r\n  };\r\n  const doSomething = () => {\r\n    let scrH =\r\n      document.documentElement.scrollHeight || document.body.scrollHeight;\r\n    let cliH =\r\n      document.documentElement.clientHeight || document.body.clientHeight;\r\n    let scrTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n    if (scrTop + 1000 > scrH - cliH) {\r\n      console.log(\"将要到达底部\");\r\n      geneCorStucData();\r\n    }\r\n  };\r\n  window.onscroll = throttle(doSomething, 500);\r\n  return (\r\n    <div className=\"newestSong\">\r\n      <div className=\"newestSongTabs\">\r\n        <span className=\"newestSongTabsCon\">\r\n          <span\r\n            className={`newestSongTabsConTab ${\r\n              activeTab == 1 ? \"newestSongTabsConTabActive\" : \"\"\r\n            } `}\r\n            onClick={() => selectTab(1)}\r\n          >\r\n            新歌速递\r\n          </span>\r\n          <span\r\n            className={`newestSongTabsConTab ${\r\n              activeTab == 2 ? \"newestSongTabsConTabActive\" : \"\"\r\n            } `}\r\n            onClick={() => selectTab(2)}\r\n          >\r\n            新碟商家\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"newestSongArea\">\r\n        <div className=\"newestSongAreaLeft\">\r\n          {areaCat.map((item, index) => {\r\n            return (\r\n              <span\r\n                key={item.id}\r\n                className={`newestSongAreaLeftItem ${\r\n                  item.id == activeCat ? \"newestSongAreaLeftItemActive\" : \"\"\r\n                }`}\r\n                onClick={() => selectCat(item.id)}\r\n              >\r\n                {item.value}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"newestSongAreaRight\">\r\n          <span className=\"newestSongAreaRightItem newestSongAreaRightItemRed\">\r\n            <img className=\"newestSongAreaRightItemImg\" src={PlayActiveImg} />\r\n            <span>播放全部</span>\r\n          </span>\r\n          <span className=\"newestSongAreaRightItem newestSongAreaRightItemBor\">\r\n            <img className=\"newestSongAreaRightItemImg\" src={SubImg} />\r\n            <span>收藏全部</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"songsList\">\r\n        {allData.map((item, index) => {\r\n          return (\r\n            <div className='songsListNewItem' key={index}>\r\n              <div\r\n                className='songsListNewItemTitleCon'\r\n                >\r\n                <div\r\n                  className='songsListNewItemTitleDiv'\r\n                >\r\n                  <p \r\n                  className='songsListNewItemTitleDivTitle'\r\n                  >\r\n                    {item.title}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className='songsListNewItemRight'\r\n              >\r\n                <div\r\n                  className='songsListNewItemRightCon'\r\n                >\r\n                  {item.list && item.list.map((zItem, zIndex) => {\r\n                    return (\r\n                      <div id=\"ele\" className='songsListNewItemRightItem' key={zItem.id+'-'+zIndex}>\r\n                        <div\r\n                          className='songsListNewItemRightItemImgCon'\r\n                        >\r\n                          <img\r\n                            id=\"pp\"\r\n                            className='songsListNewItemRightItemImgSrc'\r\n                            src='https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2879430259,1145403574&fm=26&gp=0.jpg'\r\n                            data-imgurl={zItem.picUrl}\r\n                          />\r\n                          <img\r\n                            className='songsListNewItemRightItemImgStatic'\r\n                            src={PlayHoverImg}\r\n                          />\r\n                        </div>\r\n                        <div className='songsListNewItemRightItemDescCon'>\r\n                          <p className='songsListNewItemRightItemDescName'>\r\n                            {zItem.name}\r\n                          </p>\r\n                          <p className='songsListNewItemRightItemDescArtist'>\r\n                            {zItem.artist.name}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n           );\r\n        })} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Test\\Test.js",["601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router';\r\nimport { Cookies } from \"../../Utils\";\r\nimport \"./Test.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PlayNoActivePng from \"@/images/music/play-no-active.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport GenderMail from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport AddWhite from \"@/images/Playlist/addWhite.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { exchangeTime, exchagneDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nfunction Test(props) {\r\n  //用户id, 创建时间信息\r\n  const [account, setAccount] = useState({});\r\n  //用户详细信息\r\n  const [profile, setProfile] = useState({});\r\n  //用户等级信息\r\n  const [userLV, setUserLV] = useState({});\r\n  //用户各种收藏信息\r\n  const [userSubs, setUserSubs] = useState({});\r\n  //用户关注列表总数\r\n  const [userFollowsCount, setUserFollowsCount] = useState(0);\r\n  //用户关注列表数据\r\n  const [userFollowsData, setUserFollowsData] = useState([]);\r\n  //用户粉丝列表总数\r\n  const [userFollowedsCount, setUserFollowedsCount] = useState(0);\r\n  //用户粉丝列表数据\r\n  const [userFollowedsData, setUserFollowedsData] = useState([]);\r\n  //用户动态列表总数\r\n  const [userEventCount, setUserEventCount] = useState(0);\r\n  //用户动态列表数\r\n  const [userEvents, setUserEvents] = useState([]);\r\n  //用户创建的歌单\r\n  const [userCreatePlaylists, setUserCreatePlaylists] = useState([]);\r\n  //用户收藏的歌单\r\n  const [userSubPlaylists, setUserSubPlaylists] = useState([]);\r\n\r\n  //获取用户账户信息\r\n  const getUserAccount = async () => {\r\n    let data = await HTTPUtils.user_account();\r\n    setAccount(data.account);\r\n    setProfile(data.profile);\r\n  };\r\n  //获取用户等级\r\n  const getUserLV = async () => {\r\n    let data = await HTTPUtils.user_level();\r\n    setUserLV(data.data);\r\n  };\r\n  //获取用户信息, 歌单, 收藏, mv, dj数量\r\n  const getUserSubcount = async () => {\r\n    let data = await HTTPUtils.user_subcount();\r\n    setUserSubs(data);\r\n  };\r\n  //获取用户关注列表\r\n  const getUserFollows = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_follows(params);\r\n    setUserFollowsCount(data.follow?.length || 0);\r\n    setUserFollowsData(data.follow);\r\n  };\r\n  //获取用户粉丝列表\r\n  const getUserFolloweds = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_followeds(params);\r\n    setUserFollowedsCount(data.size);\r\n    setUserFollowedsData(data.followeds);\r\n  };\r\n  //获取用户动态列表\r\n  const getUserEvent = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_event(params);\r\n    setUserEventCount(data.size);\r\n  };\r\n  //获取用户歌单\r\n  const getUserPlaylists = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_playlist(params);\r\n    let createPlaylists = data.playlist.filter(\r\n      (item) => item.subscribed == false\r\n    );\r\n    let subPlaylists = data.playlist.filter((item) => item.subscribed == true);\r\n    setUserCreatePlaylists(createPlaylists);\r\n    setUserSubPlaylists(subPlaylists);\r\n  };\r\n  //上传图片\r\n  const headerPictureChange = async (props) => {\r\n    console.log('图片')\r\n    console.log(props)\r\n    let file = props.target.files[0];\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n      let url = e.target.result;\r\n      let profileCopy = JSON.parse(JSON.stringify(profile));\r\n      profileCopy.avatarUrl = url;\r\n      setProfile(profileCopy)\r\n    }\r\n    fileReader.readAsDataURL(file)\r\n  }\r\n  //关注/取消关注\r\n  const followsUser = async (userId, followed) => {\r\n    let params = {\r\n      userId,\r\n    };\r\n    params.t = followed ? 0 : 1;\r\n    let data = await HTTPUtils.follow(params);\r\n  };\r\n  //事件--进入歌单详情\r\n  const navigateDetail = (item) => {\r\n    props.history.push('/playlist/'+item.id)\r\n  }\r\n  //事件--进入个人中心\r\n  const navigatePersonalCenter = (item) => {\r\n    console.log(item)\r\n    props.history.push('/personal/'+item.userId)\r\n  }\r\n  //粉丝列表/关注列表item\r\n  const FocusListItem = ({ data }) => {\r\n    return (\r\n      <div className=\"focus-list-item\" onClick={() => navigatePersonalCenter(data)}>\r\n        <div className=\"focus-list-item-image-con\">\r\n          <img\r\n            src={data.avatarUrl + \"?param=120y120\"}\r\n            alt=\"http://p2.music.126.net/vkAMXteRw5GHV0VNFoNxrA==/109951164751196732.jpg?param=120y120\"\r\n            className=\"focus-list-item-image\"\r\n          />\r\n        </div>\r\n        <div className=\"focus-list-item-detail\">\r\n          <ul className=\"focus-list-name-gender\">\r\n            <li>{data.nickname}</li>\r\n            <li>\r\n              <img\r\n                src={data.gender == \"0\" ? GenderFemale : GenderMail}\r\n                style={{\r\n                  width: 30,\r\n                  height: 30,\r\n                  objectFit: \"cover\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <ul className=\"focus-list-all-count\">\r\n            <li>动态 {data.eventCount}</li>\r\n            <li>关注 {data.follows}</li>\r\n            <li>粉丝 {data.followeds}</li>\r\n          </ul>\r\n          <p className=\"focus-list-desc\">{data.signature}</p>\r\n        </div>\r\n        <div className=\"focus-list-item-btn\">\r\n          <div className=\"btn-container\">\r\n            <button\r\n              className=\"btn-define\"\r\n              onClick={() => followsUser(data.userId, data.followed)}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  height: \"100%\",\r\n                  lineHeight: \"40px\",\r\n                }}\r\n              >\r\n                <span style={{ float: \"left\" }}>\r\n                  <img\r\n                    src={AddWhite}\r\n                    style={{\r\n                      width: 30,\r\n                      height: 30,\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span style={{ float: \"left\" }}>\r\n                  {data.followed ? \"已关注\" : \"关注\"}\r\n                </span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //歌单列表item\r\n  const PlaylistItem = ({ data }) => {\r\n    return (\r\n      <div className=\"my-create-playlist-item\" onClick={() => navigateDetail(data)}>\r\n        <div>\r\n          <div className=\"my-create-playlist-item-main\">\r\n            <img\r\n              src={data.coverImgUrl + \"?param=250y250\"}\r\n              alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=250y250\"\r\n              className=\"item-main-image\"\r\n            />\r\n            <ul className=\"item-main-desc-row\">\r\n              <li className=\"item-main-desc-count\">{data.playCount}</li>\r\n              <li className=\"item-main-desc-play\">\r\n                <img\r\n                  src={PlayNoActivePng}\r\n                  style={{\r\n                    width: 15,\r\n                    height: 15,\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <p className=\"my-create-playlist-item-name\">{data.name}</p>\r\n      </div>\r\n    );\r\n  };\r\n  //有了用户信息后, 获取用户的动态, 关注, 粉丝\r\n  useEffect(async () => {\r\n    await getUserEvent();\r\n    await getUserFollows();\r\n    await getUserFolloweds();\r\n    await getUserPlaylists();\r\n  }, [profile]);\r\n  useEffect(async () => {\r\n    await getUserAccount();\r\n    await getUserLV();\r\n    await getUserSubcount();\r\n  }, []);\r\n  return (\r\n    <div className=\"personal-center\">\r\n      <div className=\"personal-center-header\">\r\n        <div className=\"header-head-picture\">\r\n          <img\r\n            src={profile.avatarUrl}\r\n            // src={profile.avatarUrl + \"?param=180y180\"}\r\n            alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=180y180\"\r\n            className=\"head-picture-img\"\r\n          />\r\n          <div className='header-head-hover'>\r\n            <input type='file' onChange={headerPictureChange}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-detail-desc\">\r\n          <div className=\"header-desc-name-lv\">\r\n            <span className=\"desc-name\">{profile.nickname}</span>\r\n            <span className=\"desc-lv\">LV.{userLV.level}</span>\r\n            <span className=\"desc-edit\">编辑个人资料</span>\r\n          </div>\r\n          <ul className=\"header-desc-all-count\">\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userEventCount}</p>\r\n              <p className=\"all-count-item-cat\">动态</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowsCount}</p>\r\n              <p className=\"all-count-item-cat\">关注</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowedsCount}</p>\r\n              <p className=\"all-count-item-cat\">粉丝</p>\r\n            </li>\r\n          </ul>\r\n          <p className=\"header-desc-region\">所在地区: 河北石家庄市</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"listen-rank\">\r\n        <ul className=\"listen-rank-header\">\r\n          <li className=\"listen-rank-header-item\">\r\n            <span className=\"fontsize20\">听歌排行</span>\r\n            <span style={{ marginLeft: 10 }}>累计听歌20首</span>\r\n          </li>\r\n          <li className=\"listen-rank-header-item header-right-item\">\r\n            <span\r\n              className=\"right-item-active\"\r\n              style={{\r\n                marginRight: 10,\r\n                padding: \"0 10px\",\r\n                borderRight: \"1px solid #aaa\",\r\n              }}\r\n            >\r\n              最近一周\r\n            </span>\r\n            <span className=\"right-item-active\">所有时间</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"listen-rank-list\">\r\n          {[1, 2, 3, 4, 5].map((item, index) => {\r\n            return (\r\n              <ul className=\"listen-rank-list-row\" key={index}>\r\n                <li className=\"listen-rank-list-item flex3\">\r\n                  <ul>\r\n                    <li className=\"listen-rank-list-item\">\r\n                      {index < 10 ? \"0\" + (index + 1) : index}\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">\r\n                      <img\r\n                        src={PlayNoActivePng}\r\n                        style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n                      />\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10 boldTxt\">\r\n                      不只是想你\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">梦然</li>\r\n                  </ul>\r\n                </li>\r\n                <li\r\n                  className=\"listen-rank-list-item flex1\"\r\n                  style={{ borderRadius: 5, position: \"relative\" }}\r\n                >\r\n                  <div className=\"bgblue\" style={{ height: \"100%\" }}></div>\r\n                  <span className=\"list-item-count\">6次</span>\r\n                </li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n        <p className=\"list-rank-look-all\">查看全部>></p>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我创建的歌单\r\n            {userSubs.createdPlaylistCount && userSubs.createdPlaylistCount > 0\r\n              ? `(${userSubs.createdPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userCreatePlaylists.length > 0 &&\r\n              userCreatePlaylists.map((item, index) => {\r\n                return (\r\n                  <PlaylistItem key={item.id} data={item}/>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我收藏的歌单\r\n            {userSubs.subPlaylistCount && userSubs.subPlaylistCount > 0\r\n              ? `(${userSubs.subPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userSubPlaylists.length > 0 &&\r\n              userSubPlaylists.map((item, index) => {\r\n                return <PlaylistItem key={item.id} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">关注列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowsData &&\r\n              userFollowsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">粉丝列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowedsData &&\r\n              userFollowedsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Test)","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\ExchangeTime.js",["631"],"/**\r\n * \r\n * @param {String} time : 传过来的毫秒数\r\n * @param {Number} type : undefined返回2021-05-12 07:25:21; 1返回2021-05-12\r\n * @returns 几秒前/几分钟前/几小时前/具体时间\r\n */\r\nfunction exchangeTime(time, type) {\r\n  let differTime = Date.now() - time;\r\n  let onesecTime = 1000;\r\n  let oneminTime = 60*1000;\r\n  let onehourTime = 3600000;\r\n  let onedayTime = 60*60*24*1000;\r\n  let title = ''\r\n  if(differTime<= oneminTime) {\r\n      title = Math.floor(differTime/onesecTime) + '秒前';\r\n  }else if(differTime > oneminTime && differTime<onehourTime) {\r\n      title = Math.floor(differTime/oneminTime) + '分钟前';\r\n  }else if(differTime >= onehourTime && differTime < onedayTime) {\r\n      title = Math.floor(differTime/onehourTime) + '小时前';\r\n  }else {\r\n      //具体时间\r\n      let date = new Date(time);\r\n      let year = date.getFullYear();\r\n      let month = date.getMonth() + 1;\r\n      month = month < 10 ? '0'+month : month;\r\n      let day = date.getDate();\r\n      day = day < 10 ? '0'+day : day;\r\n      let hour = date.getHours();\r\n      hour = hour < 10 ? '0'+hour : hour;\r\n      let min = date.getMinutes();\r\n      min = min < 10 ? '0'+min : min;\r\n      let sec = date.getSeconds();\r\n      sec = sec < 10 ? '0'+sec : sec;\r\n      title = !type ?  year + ' - ' + month + ' - ' + day + ' ' + hour + ' : ' + min + ' : ' +sec : year + ' - ' + month + ' - ' + day;\r\n  }\r\n  return title;\r\n}\r\n/**\r\n * 返回音乐/视频/MV时间duration\r\n * @param {Number | String} time : 例如212000毫秒数\r\n * @returns 05:36:25 || 05:36\r\n */\r\nfunction exchagneDuration(time) {\r\n    time = parseInt(time);\r\n    let dur = 212000;\r\n    time = time / 1000;\r\n    if(time < 1){\r\n        return '小于1s';\r\n    }\r\n    if(time > 24*60*60) {\r\n        return '大于一天'\r\n    }\r\n    let h,\r\n        m,\r\n        sec,\r\n        allMin;\r\n    allMin = Math.floor(time / 60);\r\n    sec = time - allMin*60;\r\n    sec = sec < 10 ? '0'+sec : sec;\r\n    h = Math.floor(time / 3600);\r\n    m = h < 1 ? Math.floor(time / 60) : (time - h*3600 - sec)/60;\r\n    m = m<10 ? '0'+m : m;\r\n    let title = '';\r\n    title = h < 1 ? m + ':' + sec : h+':'+m+':'+sec;\r\n    return title;\r\n}\r\nexport { exchangeTime, exchagneDuration };","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\index.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js",["632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664"],"import React, { useState, useEffect,  } from \"react\";\r\nimport { Input } from 'antd'\r\nimport { useParams } from 'react-router-dom'\r\nimport \"./PlaylistDetail.less\";\r\nimport HTTPUtils from \"../../../HTTPUtils/HTTPUtils\";\r\nimport { exchangeTime } from \"@/Utils\";\r\n// import {AddWhitePng, PlayPng, SharePng, DownloadPng, DownPng, UpPng, ShoucangPng, NoShoucangPng, NoZanPng, ZanPng, ShareRound, CommentRoundPng, GenderMale, GenderFemale,  } from '../../../images/Playlist'\r\nimport AddPng from \"@/images/music/musicListItem/no-add.png\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport AddWhitePng from \"@/images/Playlist/addWhite.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport SharePng from \"@/images/Playlist/share.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport ShoucangPng from \"@/images/Playlist/shoucang.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ZanPng from \"@/images/Playlist/zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport GenderMale from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport MyTextarea from './MyTextarea';\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction PlaylistDetail(props) {\r\n  //歌单id: 6781111608\r\n  const {id} = useParams()\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //数据---歌单详情--评论--评论输入框val\r\n  const [commentVal, setCommentVal] = useState(\"\");\r\n  //数据---歌单tab index  1:歌曲列表; 2: 评论列表; 3: 收藏列表\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  const [basicData, setBasicData] = useState({}); //歌单基本信息(封面, 描述, 创建者etc)\r\n  const [songsData, setSongsData] = useState([]); //获取歌单中的歌曲列表\r\n  const [subscribersData, setSubscriberData] = useState([]); //收藏者数据\r\n  const [hotCommentData, setHotCommentData] = useState([]); //精彩评论数据\r\n  const [comments, setComments] = useState([]); //最新评论数据\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n\r\n  //事件---歌单列表相关数据\r\n  const getPlaylistDetail = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n      offset: '100'\r\n    };\r\n    let data = await HTTPUtils.playlist_detail(params);\r\n    setBasicData(data?.playlist);\r\n    setSongsData(data?.playlist?.tracks);\r\n    setSubscriberData(data?.playlist?.subscribers);\r\n  };\r\n  //事件--歌单评论数据\r\n  const getPlaylistComments = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n    };\r\n    let data = await HTTPUtils.comment_playlist(params);\r\n    setHotCommentData(data.hotComments);\r\n    setComments(data.comments);\r\n  };\r\n  //事件--改变tab index, 切换标签 歌曲列表, 评论列表, 收藏列表\r\n  const changeTabIndex = (event) => {\r\n    console.log(module);\r\n    if (event.target.id) {\r\n      console.log(typeof event.target.id);\r\n      let id = event.target.id;\r\n      setTabIndex(id);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 事件---歌单评论相关事件\r\n   */\r\n  //歌单评论--header输入框输入change事件\r\n  const commentValChange = (event) => {\r\n    // console.log(val.)\r\n    let val = event.target.value;\r\n    // console.log(event.target.blur())\r\n    setCommentVal(val);\r\n  };\r\n  //事件---提交评论\r\n  const submitComment = (val) => {\r\n    console.log('提交评论')\r\n    console.log(val)\r\n  }\r\n  //歌单评论---header评论按钮事件\r\n  const headerComment = () => {};\r\n\r\n  //进入页面, useEffect事件--只调用一次\r\n  useEffect(async () => {\r\n    console.log(exchangeTime(1621262717313));\r\n    console.log('传过来id')\r\n    console.log(id)\r\n    await getPlaylistDetail();\r\n    await getPlaylistComments();\r\n  }, []);\r\n\r\n  //渲染--渲染歌单列表item\r\n  const ListItem = ({ data, index }) => {\r\n    index += 1;\r\n    index = index < 10 ? \"0\" + index : index;\r\n    return (\r\n      <ul\r\n        className={`content-header fontsize18 canSelectItem ${\r\n          (index - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex={index}\r\n      >\r\n        <li className=\"content-header-item flex4\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{data?.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">\r\n          {data?.ar.map((z, i) => {\r\n            if (i == data?.ar.length - 1) {\r\n              return z.name;\r\n            }\r\n            return z.name + \"/\";\r\n          })}\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">\r\n          {data?.al?.name}\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">44</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---评论列表item\r\n  const CommentItem = ({ data }) => {\r\n    return (\r\n      <div className=\"list-item\">\r\n        <div className=\"list-item-left\" style={{ margin: \"5px 0\" }}>\r\n          <img src={data.user.avatarUrl + \"?param=50y50\"} />\r\n        </div>\r\n        <ul className=\"list-item-right\">\r\n          <li style={{ margin: \"5px 0\" }}>\r\n            {data.user.nickname}: {data.content}\r\n          </li>\r\n          {data.beReplied.length > 0 ? (\r\n            <li\r\n              style={{\r\n                padding: \"5px 10px\",\r\n                backgroundColor: \"lightgray\",\r\n                borderRadius: 10,\r\n                margin: \"5px 0\",\r\n              }}\r\n            >\r\n              {data.beReplied[0]?.user?.nickname}: {data.beReplied[0]?.content}\r\n            </li>\r\n          ) : null}\r\n          <li className=\"list-item-date\">\r\n            <div>{exchangeTime(data.time)}</div>\r\n            <div>\r\n              <span className=\"tipoff marginHon10\">举报</span>\r\n              <img src={NoZanPng} className=\"commentImg marginHon10\" />\r\n              <span>{data.likedCount}</span>\r\n              <img src={ShareRound} className=\"commentImg marginHon10\" />\r\n              <img src={CommentRoundPng} className=\"commentImg marginHon10\" />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染---收藏列表item\r\n  const CollectionItem = ({ data }) => {\r\n    return (\r\n      <div className=\"collectin-item-container\">\r\n        <div className=\"collection-item\">\r\n          <img\r\n            src={data?.avatarUrl + \"?param=100y100\"}\r\n            className=\"collection-item-head-portrait marginHon5\"\r\n          />\r\n          <p className=\"marginHon5\">{data?.nickname}</p>\r\n          {data.gender == 1 ? (\r\n            <img\r\n              src={GenderMale}\r\n              className=\"collection-item-gender marginHon5\"\r\n            />\r\n          ) : null}\r\n          {data.gender == 2 ? (\r\n            <img\r\n              src={GenderFemale}\r\n              className=\"collection-item-gender marginHon5\"\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //渲染--歌单详情主要内容\r\n  const RenderContent = () => {\r\n    switch (tabIndex) {\r\n      case \"1\":\r\n        return <Content />;\r\n      case \"2\":\r\n        return <Comment/>;\r\n      case \"3\":\r\n        return <Collection/>;\r\n    }\r\n  };\r\n  //渲染--歌曲列表\r\n  const Content = () => {\r\n    return (\r\n      <div className=\"content\">\r\n        <ul className=\"content-header\">\r\n          <li className=\"content-header-item txtCenter flex4 txtLightGray\">\r\n            音乐标题\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            歌手\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            专辑\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            时长\r\n          </li>\r\n        </ul>\r\n        {songsData.map((item, index) => {\r\n          return <ListItem key={item.id} data={item} index={index} />;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //评论页面\r\n  const Comment = () => {\r\n    return (\r\n      <div className=\"comment\">\r\n        <MyTextarea comment={submitComment}/>\r\n        <div className=\"comment-list\">\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>精彩评论</p>\r\n          <div>\r\n            {hotCommentData.map((item, index) => {\r\n              return <CommentItem key={item.commentId} data={item} />;\r\n            })}\r\n          </div>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>最新评论</p>\r\n          <div>\r\n            {comments.map((item, index) => {\r\n              return <CommentItem key={item.id} data={item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //收藏者页面\r\n  const Collection = () => {\r\n    return (\r\n      <div className=\"collection\">\r\n        {subscribersData.map((item, index) => {\r\n          return <CollectionItem key={item.userId} data={item} />;\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //歌单详情页面\r\n  return (\r\n    <div className=\"playlist-detail\">\r\n      <div className=\"playlist-detail-header\">\r\n        <div className=\"header-left headerPadding5\">\r\n          <img\r\n            className=\"header-left-img border-radius-20\"\r\n            src={basicData.coverImgUrl}\r\n          />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <span\r\n              className=\"border-text headerPadding5\"\r\n              style={{ borderRadius: 5 }}\r\n            >\r\n              歌单\r\n            </span>\r\n            <span className=\"playlist-name headerPadding5\">\r\n              {basicData.name}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <img\r\n              src={basicData.creator?.avatarUrl}\r\n              style={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n            />\r\n            <span className=\"headerPadding5\">\r\n              {basicData.creator?.nickname}\r\n            </span>\r\n            <span className=\"headerPadding5\">\r\n              {exchangeTime(basicData.createTime, 1)}创建\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row \">\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 bkCommonColor marginVer5 whiteCol\">\r\n              <img src={PlayPng} className=\"img25 marginHon5\" />\r\n              <span className=\"height25Vertical padding5\">播放全部</span>\r\n              <img src={AddWhitePng} className=\"img25 marginHon5\" />\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer \">\r\n              <img src={SubPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                收藏({subscribersData?.length})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={SharePng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                分享({basicData.shareCount})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={DownloadPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">下载全部</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>标签:</span>\r\n            <span style={{ padding: \"0 10px\" }}>\r\n              {basicData.tags?.map((item, index) => {\r\n                return (\r\n                  <span key={index} style={{ padding: \"0 5px\" }}>\r\n                    {index == basicData.tags?.length - 1\r\n                      ? item\r\n                      : item + \" \" + \"/\"}\r\n                  </span>\r\n                );\r\n              })}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>歌曲数目: {basicData.trackCount}首</span>\r\n            <span className=\"marginHon10\">\r\n              播放量: {parseInt(basicData.playCount / 10000)}万\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 20 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              {basicData.description}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"playlist-detail-content\">\r\n        <ul className=\"tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            id=\"1\"\r\n            className={`tab ${tabIndex === \"1\" ? \"tab-active\" : null}`}\r\n          >\r\n            歌曲列表\r\n          </li>\r\n          <li\r\n            id=\"2\"\r\n            className={`tab ${tabIndex === \"2\" ? \"tab-active\" : null}`}\r\n          >\r\n            评论({basicData.commentCount})\r\n          </li>\r\n          <li\r\n            id=\"3\"\r\n            className={`tab ${tabIndex === \"3\" ? \"tab-active\" : null}`}\r\n          >\r\n            收藏者\r\n          </li>\r\n        </ul>\r\n        <RenderContent />\r\n        {/* <Comment/> */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PlaylistDetail)\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js",["665"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function MyTextarea(props) {\r\n  const [commentVal, setCommentVal] = useState(\"\");\r\n\r\n  const commentValChange = (event) => {\r\n    let val = event.target.value;\r\n    setCommentVal(val);\r\n    // props.onChange(event);\r\n  };\r\n  const headerComment = () => {\r\n    props.comment(commentVal)\r\n    setCommentVal('')\r\n  }\r\n  return (\r\n    <div className=\"comment-header\">\r\n      <div className=\"comment-header-textarea\">\r\n        <textarea\r\n          rows=\"10\"\r\n          className=\"comment-textarea\"\r\n          maxLength=\"140\"\r\n          value={commentVal}\r\n          onChange={commentValChange}\r\n        />\r\n        <span className=\"comment-surplus-length\">\r\n          {140 - commentVal.length}\r\n        </span>\r\n      </div>\r\n      <div className=\"comment-header-bottom\">\r\n        <p>9999</p>\r\n        <button className=\"bottom-right-btn\" onClick={headerComment}>\r\n          评论\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js",["666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./ArtistDetail.less\";\r\nimport HTTPUtils from \"@/HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\n\r\nconst { exchangeTime, exchagneDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nexport default function Test(props) {\r\n  //歌手详情中 tabs 选中哪个标签  1->4; 专辑->相似歌手\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  //专辑列表浏览模式--1->3; 图列模式->列表模式->大图模式\r\n  const [modalIndex, setModalIndex] = useState(\"1\");\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //歌手详情--歌手数据\r\n  const [artistDetailData, setArtistDetailData] = useState({});\r\n  //歌手详情--相似歌手数据\r\n  const [simiArtistData, setSimiArtistData] = useState([]);\r\n  //歌手详情--获取歌手详细描述\r\n  const [artistDetailDesc, setArtistDetailDest] = useState({});\r\n  //歌手详情--获取歌手MV数据\r\n  const [artistMV, setArtistMV] = useState([]);\r\n  //歌手详情--获取歌手专辑列表\r\n  const [hotAlbumsData, setHotAlbumsData] = useState([]);\r\n  //歌手详情-专辑列表-展开全部歌曲数组 [...{id: false}]\r\n  const [expandAlbumsArr, setExpandAlbumsArr] = useState([]);\r\n  //歌手详情-专辑列表--请求数据offset, 默认为0\r\n  const [albumsOffset, setAlbumOffset] = useState(0);\r\n  //歌手详情--专辑列表--是否还有更多\r\n  const [hasMore, setHasMore] = useState(true);\r\n  //歌手详情-MV列表--请求数据offset, 默认为0\r\n  const [mvsOffset, setMVOffset] = useState(0);\r\n  //歌手详情--MV列表--是否还有更多\r\n  const [hasMVMore, setHasMVMore] = useState(true);\r\n  //歌手详情-整个页面ref\r\n  const artistDetailRef = useRef();\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n\r\n  //切换tab index事件\r\n  const changeTabIndex = (event) => {\r\n    if (event.target.id) {\r\n      setTabIndex(event.target.id);\r\n    }\r\n  };\r\n\r\n  //事件---切换专辑列表浏览模式\r\n  const changeModalIndex = (event) => {\r\n    if (event.target.id || event.target.parentNode.id) {\r\n      setModalIndex(event.target.id || event.target.parentNode.id);\r\n    }\r\n  };\r\n\r\n  //事件---获取歌手详情数据 例如id='3684';\r\n  const getArtistDetail = async () => {\r\n    let params = {\r\n      id: \"3684\",\r\n    };\r\n    let data = await HTTPUtils.artist_detail(params);\r\n    setArtistDetailData(data.data?.artist);\r\n  };\r\n\r\n  //事件--获取歌手详情中相似歌手 例如id='3684'\r\n  const getSimiArtist = async () => {\r\n    let params = {\r\n      id: \"3684\",\r\n    };\r\n    let data = await HTTPUtils.simi_artist(params);\r\n    setSimiArtistData(data.artists);\r\n  };\r\n\r\n  //事件--获取歌手详细描述\r\n  const getArtistDetailDesc = async () => {\r\n    let params = {\r\n      id: \"3684\",\r\n    };\r\n    let data = await HTTPUtils.artist_desc(params);\r\n    setArtistDetailDest(data);\r\n  };\r\n\r\n  //获取歌手MV数据\r\n  const getArtistMV = async () => {\r\n    if (!hasMVMore) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      id: \"3684\",\r\n      limit: \"10\",\r\n      offset: mvsOffset * 10,\r\n    };\r\n    let data = await HTTPUtils.artist_mv(params);\r\n    if (!data.hasMore) {\r\n      setHasMVMore(false);\r\n    }\r\n    let newMVS = artistMV.length == 0 ? data.mvs : artistMV.concat(data.mvs);\r\n    setArtistMV(newMVS);\r\n  };\r\n\r\n  //事件--获取歌手专辑列表\r\n  const getArtistAlbum = async () => {\r\n    if (!hasMore) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      id: \"3684\",\r\n      limit: \"5\",\r\n      offset: albumsOffset * 5,\r\n    };\r\n    let data = await HTTPUtils.artist_album(params);\r\n    let hotalbums = data.hotAlbums;\r\n    if (!data.more) {\r\n      setHasMore(false);\r\n    }\r\n    if (hotalbums.length == 0) {\r\n      return false;\r\n    }\r\n    //存储每个请求专辑详细内容的promise请求\r\n    let arr = [];\r\n    //存储每个专辑列表是否expand\r\n    let expandArr = [];\r\n    hotalbums.map(async (item, index) => {\r\n      arr.push(\r\n        new Promise(async (resolve, reject) => {\r\n          let data = await getAlbumDetail(item);\r\n          return resolve(data);\r\n        })\r\n      );\r\n      expandArr[index] = {};\r\n      expandArr[index][item.id] = false;\r\n    });\r\n    Promise.all(arr).then((res) => {\r\n      hotalbums.map((item, index) => {\r\n        let filterArr = res.filter((zItem) => zItem.album?.id == item.id);\r\n        let filterItem = filterArr[0];\r\n        item.songs = filterItem.songs;\r\n      });\r\n      let newHotAlbumsData = hotAlbumsData.concat(hotalbums);\r\n      let newExpandArr =\r\n        expandAlbumsArr.length == 0\r\n          ? expandArr\r\n          : expandAlbumsArr?.concat(expandArr);\r\n      setExpandAlbumsArr(newExpandArr);\r\n      setHotAlbumsData(newHotAlbumsData);\r\n    });\r\n  };\r\n  //事件--获取专辑具体内容\r\n  const getAlbumDetail = async (item) => {\r\n    let params = {\r\n      id: item.id,\r\n    };\r\n    let data = await HTTPUtils.album(params);\r\n    return data;\r\n  };\r\n  const expandAlbum = (item, index) => {\r\n    let expandArr = JSON.parse(JSON.stringify(expandAlbumsArr));\r\n    if (expandArr[index]) {\r\n      let isExpand = expandArr[index][item.id];\r\n      isExpand = !isExpand;\r\n      expandArr[index][item.id] = isExpand;\r\n    }\r\n    setExpandAlbumsArr(expandArr);\r\n  };\r\n  //页面进入--只进行一次渲染\r\n  useEffect(async () => {\r\n    await getArtistDetail();\r\n    await getSimiArtist();\r\n    await getArtistDetailDesc();\r\n    await getArtistMV();\r\n    await getArtistAlbum();\r\n    //不能用addEventListener,\r\n    window.onscroll = throttle(scrollBottomLoadingAlbum, 1000);\r\n  }, []);\r\n  //节流-节流\r\n  const throttle = (func, delay) => {\r\n    let valid = true;\r\n    return function () {\r\n      if (!valid) {\r\n        return false;\r\n      }\r\n      valid = false;\r\n      setTimeout(() => {\r\n        func();\r\n        valid = true;\r\n      }, delay);\r\n    };\r\n  };\r\n  //事件--滚动到离底部100px时, 修改专辑列表依赖的offset\r\n  const scrollBottomLoadingAlbum = async () => {\r\n    if (artistDetailRef) {\r\n      let scrollTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let clientHeight = window.innerHeight;\r\n      let clientScrollHeight = artistDetailRef.current.scrollHeight;\r\n      if (scrollTop + clientHeight > clientScrollHeight - 100) {\r\n        setAlbumOffset((offset) => offset + 1);\r\n      }\r\n    }\r\n  };\r\n  //事件--滚动到离底部100px时, 修改MV列表依赖的offset\r\n  const scrollBottomLoadingMV = async () => {\r\n    if (artistDetailRef) {\r\n      let scrollTop =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      let clientHeight = window.innerHeight;\r\n      let clientScrollHeight = artistDetailRef.current.scrollHeight;\r\n      if (scrollTop + clientHeight > clientScrollHeight - 100) {\r\n        setMVOffset((offset) => offset + 1);\r\n      }\r\n    }\r\n  };\r\n  //依赖albumsOffset, 属性值变化, 会重新获取专辑列表\r\n  useEffect(async () => {\r\n    await getArtistAlbum();\r\n  }, [albumsOffset]);\r\n  //依赖mvsOffset, 属性值变化, 会重新获取专辑列表\r\n  useEffect(async () => {\r\n    await getArtistMV();\r\n  }, [mvsOffset]);\r\n  //依赖tabIndex--不同tab, 切换不同的滑动底部加载\r\n  useEffect(() => {\r\n    if (artistDetailRef) {\r\n      if (tabIndex == \"2\") {\r\n        window.onscroll = throttle(scrollBottomLoadingMV, 1000);\r\n      } else if (tabIndex == \"1\") {\r\n        window.onscroll = throttle(scrollBottomLoadingAlbum, 1000);\r\n      } else {\r\n        window.onscroll = null;\r\n      }\r\n    }\r\n  }, [tabIndex]);\r\n  //渲染--专辑列表图列模式--item\r\n  const PicListModalItem = ({ item, index }) => {\r\n    index = index + 1 < 10 ? \"0\" + (index + 1) : index + 1;\r\n    return (\r\n      <ul\r\n        // className={`content-header fontsize18 canSelectItem`}\r\n        className={`content-header fontsize18 canSelectItem ${\r\n          (parseInt(index) - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex=\"1\"\r\n      >\r\n        <li className=\"content-header-item flex6\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{item.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className=\"content-header-item flex2 txtCenter txtLightGray\">44</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染--专辑列表--图列模式--内容\r\n  const PiclistModal = ({ item, index }) => {\r\n    return (\r\n      <div style={{ position: \"relative\" }} className=\"piclistModal\">\r\n        <div className=\"header-left\">\r\n          <img\r\n            key={item.picId_str}\r\n            src={item.picUrl + \"?param=150y150\"}\r\n            className=\"img150\"\r\n          />\r\n        </div>\r\n        <div\r\n          className={`header-right list-right ${\r\n            !(expandAlbumsArr[index] && expandAlbumsArr[index][item.id])\r\n              ? \"list-right-750\"\r\n              : \"list-right-height-auto\"\r\n          } `}\r\n        >\r\n          <ul className=\"list-right-tabs\">\r\n            <li className=\"list-right-tab font-weight-20\">{item.name}</li>\r\n            <li className=\"list-right-tab\">播放</li>\r\n            <li className=\"list-right-tab\">收藏</li>\r\n          </ul>\r\n          {item.songs.map((zItem, zIndex) => {\r\n            if (\r\n              zIndex == 10 &&\r\n              !(expandAlbumsArr[index] && expandAlbumsArr[index][item.id])\r\n            ) {\r\n              return (\r\n                <p\r\n                  key={zIndex}\r\n                  style={{\r\n                    textAlign: \"right\",\r\n                    height: 60,\r\n                    lineHeight: \"60px\",\r\n                    paddingRight: 20,\r\n                  }}\r\n                  className=\"backGray txtLightGray\"\r\n                  onClick={() => expandAlbum(item, index)}\r\n                >\r\n                  查看全部{item.songs.length}首\r\n                </p>\r\n              );\r\n            }\r\n            return (\r\n              <PicListModalItem\r\n                key={zItem.id + \"_\" + zIndex}\r\n                item={zItem}\r\n                index={zIndex}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--专辑列表--列表模式-item\r\n  const ListModalItem = ({ item, index }) => {\r\n    return (\r\n      <li\r\n        className={`listModal-list-item canSelectItem ${\r\n          index % 2 == 0 ? \"backGray\" : \"\"\r\n        }`}\r\n        tabIndex={index}\r\n      >\r\n        <ul className=\"listModal-list-item-container\">\r\n          <li className=\"list-item list-item-left\">\r\n            <img\r\n              src={item.picUrl + \"?param=100y100\"}\r\n              className=\"list-item-img\"\r\n            />\r\n            <p className=\"list-item-left-title\">{item.name}</p>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <p className=\"list-item-center-title\">{item.songs?.length}</p>\r\n          </li>\r\n          <li className=\"list-item\">\r\n            <p className=\"list-item-center-title\">\r\n              发行时间: {exchangeTime(item.publishTime, 1)}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    );\r\n  };\r\n  //渲染--专辑列表--列表模式-内容\r\n  const ListModal = () => {\r\n    return (\r\n      <ul className=\"listModal-lists\">\r\n        {hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <ListModalItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染--专辑列表--大图模式--item\r\n  const PicModalItem = ({ item, index }) => {\r\n    return (\r\n      <li className=\"picmodal-list-item\">\r\n        <div className=\"picmodal-list-item-container\">\r\n          <img src={item.picUrl + \"?param=250y150\"} className=\"list-item-img\" />\r\n          <p className=\"list-item-title\">{item.name}</p>\r\n          <p className=\"list-item-subtitle\">{exchangeTime(item.publishTime)}</p>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n  //渲染--专辑列表--大图模式--内容\r\n  const PicModal = (props) => {\r\n    return (\r\n      <ul className=\"picmodal-lists\">\r\n        {hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <PicModalItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---专辑列表\r\n  const RenderContent = () => {\r\n    let View = null;\r\n    switch (modalIndex) {\r\n      case \"1\":\r\n        View = hotAlbumsData.map((item, index) => {\r\n          return (\r\n            <PiclistModal\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        });\r\n        break;\r\n      case \"2\":\r\n        View = <ListModal />;\r\n        break;\r\n      case \"3\":\r\n        View = <PicModal />;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <div className=\"artist-detail-header artist-detail-lists\">{View}</div>\r\n    );\r\n  };\r\n  //渲染--MV列表--item\r\n  const MVListItem = ({ item, index }) => {\r\n    return (\r\n      <div className=\"mv-list\">\r\n        <div className=\"mv-list-item-container\">\r\n          <div className=\"mv-list-item\">\r\n            <img\r\n              src={item.imgurl + \"?param=200y200\"}\r\n              className=\"list-item-img\"\r\n            />\r\n            <div className=\"list-item-count\">\r\n              <img\r\n                src={PlayPng}\r\n                style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n              />\r\n              <span>\r\n                {item.playCount > 100000\r\n                  ? Math.floor(item.playCount / 10000) + \"万\"\r\n                  : item.playCount}\r\n              </span>\r\n            </div>\r\n            <div className=\"list-item-time\">\r\n              {exchagneDuration(item.duration)}\r\n            </div>\r\n          </div>\r\n          <p className=\"mv-list-item-name\">{item.name}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--MV列表--内容\r\n  const MVList = (props) => {\r\n    return (\r\n      <div className=\"mv-lists\">\r\n        {artistMV.map((item, index) => {\r\n          return (\r\n            <MVListItem key={item.id + \"_\" + index} item={item} index={index} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--歌手详情页面\r\n  const DetailDesc = () => {\r\n    return (\r\n      <div className=\"detail-desc\">\r\n        <p className=\"detail-desc-jianjie detail-desc-title fongsize20\">\r\n          {artistDetailData.name}简介\r\n        </p>\r\n        <p className=\"desc-jianjie-content jianjie-indent-content\">\r\n          {artistDetailDesc.briefDesc}\r\n        </p>\r\n        {artistDetailDesc.introduction?.map((item, index) => {\r\n          let strArr = item.txt.split(\"●\");\r\n          strArr.splice(0, 1);\r\n          let newStrArr = strArr.map((i, j) => (i = \"●\" + i));\r\n          return (\r\n            <div key={index * 10}>\r\n              <p className=\"detail-desc-title fongsize20\">{item.ti}</p>\r\n              {newStrArr.map((str, strIndex) => (\r\n                <p\r\n                  key={index * 10 + \"_\" + strIndex}\r\n                  className=\"desc-jianjie-content\"\r\n                >\r\n                  {str}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--相似歌手--item\r\n  const SimilarListItem = ({ item, index }) => {\r\n    return (\r\n      <div className=\"similar-artist-list\">\r\n        <div className=\"list-item\">\r\n          <img\r\n            key={item.picId_str}\r\n            src={item.picUrl + \"?param=380y380\"}\r\n            className=\"list-item-img\"\r\n          />\r\n          <p className=\"list-item-title\">{item.name}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //渲染--相似歌手--内容\r\n  const SimilarList = (props) => {\r\n    return (\r\n      <div className=\"similar-artist-lists\">\r\n        {simiArtistData.map((item, index) => {\r\n          return (\r\n            <SimilarListItem\r\n              key={item.id + \"_\" + index}\r\n              item={item}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"artist-detail\" ref={artistDetailRef}>\r\n      <div className=\"artist-detail-header\">\r\n        <div className=\"header-left\">\r\n          <img src={artistDetailData.cover} className=\"img200\" />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <p className=\"header-right-title\">{artistDetailData.name}</p>\r\n          <p className=\"header-right-subtitle\">jj lin</p>\r\n          <button className=\"defineButton\">收藏</button>\r\n          <ul className=\"right-line\">\r\n            <li className=\"right-line-item\">\r\n              单曲数: {artistDetailData.musicSize}\r\n            </li>\r\n            <li className=\"right-line-item\">\r\n              专辑数: {artistDetailData.albumSize}\r\n            </li>\r\n            <li className=\"right-line-item\">MV数: {artistDetailData.mvSize}</li>\r\n          </ul>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 30 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              简介: {artistDetailData.briefDesc}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"artist-detail-tabs-container\">\r\n        <ul className=\"artist-detail-tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"1\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"1\"\r\n          >\r\n            专辑\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"2\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"2\"\r\n          >\r\n            MV\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"3\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"3\"\r\n          >\r\n            歌手详情\r\n          </li>\r\n          <li\r\n            className={`artist-detail-tab ${\r\n              tabIndex == \"4\" ? \"artist-detail-tab-active\" : null\r\n            }`}\r\n            id=\"4\"\r\n          >\r\n            相似歌手\r\n          </li>\r\n        </ul>\r\n        {tabIndex == \"1\" ? (\r\n          <ul className=\"right-imgs\" onClick={changeModalIndex}>\r\n            <li\r\n              id=\"3\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"3\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"3\" ? PicActivePng : PicNoActivePng}\r\n              />\r\n            </li>\r\n            <li\r\n              id=\"2\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"2\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"2\" ? ListActivePng : ListNoActivePng}\r\n              />\r\n            </li>\r\n            <li\r\n              id=\"1\"\r\n              className={`right-img-container ${\r\n                modalIndex == \"1\" ? \"right-img-container-active\" : null\r\n              }`}\r\n            >\r\n              <img\r\n                className=\"right-img\"\r\n                src={modalIndex == \"1\" ? PicListActivePng : PicListNoActivePng}\r\n              />\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n      {tabIndex == \"1\" ? <RenderContent /> : null}\r\n      {tabIndex == \"2\" ? <MVList /> : null}\r\n      {tabIndex == \"3\" ? <DetailDesc /> : null}\r\n      {tabIndex == \"4\" ? <SimilarList /> : null}\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\fetch.js",[],"D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\HTTPUtils\\request.js",["711","712","713","714","715"],"import c_fetch from './fetch';\r\n\r\nc_fetch.interceptors.request.use(\r\n  function(url, config) {\r\n    //发送请求前, 为每个请求添加timestamp;\r\n    let is_have_timestamp = url.indexOf('timestamp');\r\n    let is_have_wenhao = url.indexOf('?');\r\n    if(is_have_wenhao == -1) {\r\n      url += '?' + 'timestamp=' + Date.now();\r\n    }else {\r\n      url += '&' + 'timestamp=' + Date.now();\r\n    }\r\n    return {url, config};\r\n  }\r\n)\r\n//返回数据前, 处理数据, \r\nc_fetch.interceptors.response.use(function(res) {\r\n  if(res.status == 301) {\r\n    console.log('需要重新登录')\r\n    //这里可以reject, 不返回数据\r\n  }\r\n  return res;\r\n});\r\n\r\nconst request = () => {\r\n  return c_fetch;\r\n}\r\nexport default request;","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\Utils\\Cookies.js",["716","717"],"\r\nconst Cookies = {\r\n  getItem: function(name) {\r\n    let cookie_str = document.cookie;\r\n    //首先, 看有没有对应的name\r\n    let is_have = cookie_str.indexOf(name);\r\n    console.log(is_have)\r\n    if(is_have != -1) {\r\n      //如果存在, 截取位置以后的字符串\r\n      let str = cookie_str.substring(is_have);\r\n      //分割后, 取第一个值, \r\n      let str_arr = str.split(';');\r\n      let cookie = str_arr[0];\r\n      //截取该cookie等号后面的值\r\n      let cookie_val = cookie.substring(name.length+1);\r\n      //分割字符串, 第一个就是需要的value\r\n      console.log(cookie_val.split(';')[0])\r\n      let val = cookie_val.split(';')[0];\r\n      return val;\r\n    }\r\n    //如果不存在, 返回-1;\r\n    return -1;\r\n  },\r\n  setItem: function(name, value, expire) {\r\n    let str = name+'='+value+';';\r\n    switch(expire.constructor) {\r\n      //Number: 默认以小时为单位\r\n      case Number:\r\n        let expires = new Date(Date.now() + expire * 60 * 60 * 1000);\r\n        str += 'expires=' + expires;\r\n        break;\r\n      case Date:\r\n        str += 'expires=' + expire;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    document.cookie = str;\r\n  },\r\n  hasItem: function(name) {\r\n    //是否存在某cookie\r\n    let cookie_str = document.cookie;\r\n    let is_have = cookie_str.indexOf(name);\r\n    return is_have == -1 ? false : true;\r\n  },\r\n  removeItem: function(name) {\r\n    //首先检查是否存在\r\n    let is_have = this.hasItem(name);\r\n    if(is_have) {\r\n      let val = this.getItem(name);\r\n      this.setItem(name, val, new Date(1970, 1, 1));\r\n      //存在返回true;\r\n      return true;\r\n    }\r\n    //不存在返回false\r\n    return false;\r\n  }\r\n};\r\n\r\nexport {Cookies};\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\MusicSliderComponent.js",["718","719","720","721","722","723","724"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nlet startDistance = \"\"; //拖动开始位置\r\nlet is_moving = false; //是否开始滚动\r\nlet is_mine_ref = \"\"; //是否是本组件\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function MusicSliderComponent(props) {\r\n  const SliderRef = useRef(); //滑动条Ref\r\n  const SliderBackRef = useRef(); //已滑动条Ref\r\n  const SliderRoundBtnRef = useRef(); //圆形按钮ref\r\n  const [backWidth, setBackWidth] = useState(\"0%\"); //已滑动滚动条宽度\r\n  const [sliderRoundLeft, setSliderRoundLeft] = useState(\"0%\"); //滑动条上按钮距离左边距离\r\n  const [play, setPlay] = useState(false); //歌曲是否开始播放\r\n  const [time, setTime] = useState(\"0\"); //歌曲总时长\r\n  const [isReset, setIsReset] = useState(false); //是否重置\r\n  //设置滑动宽度\r\n  const setWidth = (width) => {\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    let percent = (width / slider.scrollWidth) * 100;\r\n    percent = percent.toFixed(2);\r\n    percent = parseFloat(percent);\r\n    //获取背景滑动条宽度, 数值, 半分比\r\n    let back_width = sliderBack.style.width;\r\n    //获取圆形按钮绝对定位left,\r\n    // let round_btn_position = sliderRoundBtn.style.left;\r\n    //因为back_width是百分比, 所以要转为Number\r\n    back_width = parseFloat(back_width);\r\n    //percent有可能是正值/负值, 所以需要用原来的值直接相加,\r\n    back_width += percent;\r\n    //如果相加后百分比>100; 则最大取100%\r\n    if (parseFloat(back_width) > 100) {\r\n      back_width = \"100\";\r\n    } else if (parseFloat(back_width) < 0) {\r\n      //同理, 相加后百分比<0, 则最小取0\r\n      back_width = \"0\";\r\n    }\r\n    back_width += \"%\";\r\n    //背景条/圆形拖动按钮, 百分比相同,\r\n    // console.log(\"component\", back_width);\r\n    setBackWidth(back_width);\r\n    setSliderRoundLeft(back_width);\r\n    props.onChange(back_width);\r\n  };\r\n  //只加载一次\r\n  useEffect(() => {\r\n    //取得相应ref所对应的组件\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    sliderRoundBtn.addEventListener(\"click\", (e) => {\r\n      //阻止冒泡\r\n      e.stopPropagation() || (e.cancelBubble = true);\r\n    });\r\n    //鼠标在圆形按钮上开始拖动\r\n    sliderRoundBtn.addEventListener(\"mousedown\", (e) => {\r\n      clearTimeout(interval_id);\r\n      //记录拖动开始位置, 初始化所需的属性\r\n      startDistance = e.clientX;\r\n      //是否开始移动\r\n      is_moving = true;\r\n      //是否是拖动的组件,(一个页面有可能有多个MusicSliderComponent)\r\n      is_mine_ref = SliderRef;\r\n    });\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        interval_id && clearTimeout(interval_id);\r\n        //计算出移动距离, 并更新startDistance,\r\n        //便于计算\r\n        //当然也可以不用更新startDistance, 那么setWidth中back_width就不用与percent相加了\r\n        let moveDistance = e.clientX - startDistance;\r\n        startDistance = e.clientX;\r\n        setWidth(moveDistance);\r\n      }\r\n    });\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      //放开鼠标, 重置拖动过程中所需的属性\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        is_moving = false;\r\n        is_mine_ref = null;\r\n        startDistance = 0;\r\n      }\r\n    });\r\n    document.addEventListener(\"dragstart\", (e) => {\r\n      //为了配合dragend事件\r\n      is_moving = true;\r\n      is_mine_ref = SliderRef;\r\n      document.onselectstart = function () {\r\n        return false;\r\n      };\r\n    });\r\n    document.addEventListener(\"dragend\", (e) => {\r\n      //不能只用moveup事件, 因为鼠标在拖动过程中, 不会触发mouseup事件, , 但是滑动条还是能滑动, 这个时候会触发dragend事件, 在这里可以处理一下\r\n      if (is_moving && SliderRef == is_mine_ref) {\r\n        //获取移动距离\r\n        let moveX = e.clientX - startDistance;\r\n        //将最终距离赋值给startDistance\r\n        startDistance = e.clientX;\r\n        setWidth(moveX);\r\n        is_moving = false;\r\n        is_mine_ref = \"\";\r\n        document.onselectstart = function () {\r\n          return true;\r\n        };\r\n      }\r\n    });\r\n    slider.addEventListener(\"click\", (e) => {\r\n      //点击滑动条, 改变已滑动条宽度\r\n      let slider_back_width = e.offsetX;\r\n      let slider_width = slider.scrollWidth;\r\n      let percent = (slider_back_width / slider_width) * 100;\r\n      percent = percent.toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //可以作为值, 传回组件onchange事件,\r\n      if (percent > 100) {\r\n        percent = \"100\";\r\n      } else if (percent < 0) {\r\n        percent = \"0\";\r\n      }\r\n      let percentStr = percent + \"%\";\r\n      //实际情况应该是: 先暂停播放, 获取加载资源, 加载完毕, 继续播放; 如果处于加载状态下, 暂停播放\r\n      // interval_id && clearInterval(interval_id)\r\n      setBackWidth(percentStr);\r\n      setSliderRoundLeft(percentStr);\r\n      props.onChange(percentStr);\r\n    });\r\n  }, []);\r\n  //重置滑动条\r\n  const reset = () => {\r\n    let back_width = \"0%\";\r\n    //暂停播放\r\n    setPlay(false);\r\n    //滑动条背景条归0\r\n    setBackWidth(back_width);\r\n    //滑动条圆形按钮归0\r\n    setSliderRoundLeft(back_width);\r\n    setIsReset(false);\r\n  };\r\n  //重置isReset状态改变, 执行reset方法, 重置MusicSliderComponent状态\r\n  useEffect(() => {\r\n    // console.log(\"is reset - \", isReset);\r\n    if (isReset) {\r\n      reset();\r\n    }\r\n  }, [isReset]);\r\n  //事件--当滑动条到达100%后需要处理的事件\r\n  useEffect(() => {\r\n    let back_width = parseFloat(backWidth);\r\n    if (back_width >= 100 && !is_moving) {\r\n      setIsReset(true);\r\n    }\r\n  }, [backWidth]);\r\n  //事件--处理定时进度条每隔一秒 更新一次进度条\r\n  const handleBackWidth = () => {\r\n    let sliderBack = SliderBackRef.current;\r\n    let back_width = sliderBack.style.width;\r\n    back_width = parseFloat(back_width);\r\n    if (back_width >= 100) {\r\n      //如果back_width已经到达100%,则直接reset()--造成这样情况有以下\r\n      //1: 直接拖动滑动条到达100%, 这样直接reset\r\n      setIsReset(true);\r\n    } else {\r\n      //这里150是歌曲的时间, 1/150获取每秒移动的百分比\r\n      let percent = ((1 / parseFloat(time)) * 100).toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //与原来的百分比相加, 得到新的百分比\r\n      back_width = back_width + percent;\r\n      //如果超过100%, 清除定时器\r\n      if (back_width >= 100) {\r\n        back_width = 100;\r\n        setPlay(false);\r\n        props.hasOwnProperty(\"onEndReached\") && props.onEndReached();\r\n      }\r\n      back_width += \"%\";\r\n      //更新滑动条\r\n      setBackWidth(back_width);\r\n      setSliderRoundLeft(back_width);\r\n      // props.onChange(back_width)\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (play) {\r\n      //这里要用一个单独的方法处理进度条, 不能用() => {}, 这样容易形成值backWidth不变化\r\n      interval_id = setInterval(handleBackWidth, 1000);\r\n    } else {\r\n      //暂停播放状态下, 清除定时器\r\n      interval_id && clearInterval(interval_id);\r\n    }\r\n  }, [play]);\r\n  //play播放状态依赖传过来的props.play\r\n  useEffect(() => {\r\n    setPlay(props.play);\r\n  }, [props.play]);\r\n  useEffect(() => {\r\n    setTime(props.duration);\r\n    setIsReset(true)\r\n  }, [props.duration]);\r\n  return (\r\n    <div\r\n      id=\"slider\"\r\n      ref={SliderRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: 5,\r\n        backgroundColor: \"#ccc\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        id=\"sliderBack\"\r\n        ref={SliderBackRef}\r\n        style={{ width: backWidth, height: 5, backgroundColor: \"#DD001B\" }}\r\n      ></div>\r\n      <div\r\n        id=\"sliderRoundBtn\"\r\n        ref={SliderRoundBtnRef}\r\n        style={{\r\n          width: 10,\r\n          height: 10,\r\n          borderRadius: \"50%\",\r\n          backgroundColor: \"#DD001B\",\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          transform: \"translateY(-50%)\",\r\n          left: sliderRoundLeft,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\BasicSlider.js",["725","726","727","728","729","730"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nlet startDistance = \"\"; //拖动开始位置\r\nlet is_moving = false; //是否开始滚动\r\nlet is_mine_ref = \"\"; //是否是本组件\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function BasicSlider(props) {\r\n  const SliderRef = useRef(); //滑动条Ref\r\n  const SliderBackRef = useRef(); //已滑动条Ref\r\n  const SliderRoundBtnRef = useRef(); //圆形按钮ref\r\n  const [backWidth, setBackWidth] = useState(\"0%\"); //已滑动滚动条宽度\r\n  const [sliderRoundLeft, setSliderRoundLeft] = useState(\"0%\"); //滑动条上按钮距离左边距离\r\n  //设置滑动宽度\r\n  const setWidth = (width) => {\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    let percent = (width / slider.scrollWidth) * 100;\r\n    percent = percent.toFixed(2);\r\n    percent = parseFloat(percent);\r\n    //获取背景滑动条宽度, 数值, 半分比\r\n    let back_width = sliderBack.style.width;\r\n    //获取圆形按钮绝对定位left,\r\n    // let round_btn_position = sliderRoundBtn.style.left;\r\n    //因为back_width是百分比, 所以要转为Number\r\n    back_width = parseFloat(back_width);\r\n    //percent有可能是正值/负值, 所以需要用原来的值直接相加,\r\n    back_width += percent;\r\n    //如果相加后百分比>100; 则最大取100%\r\n    if (parseFloat(back_width) > 100) {\r\n      back_width = \"100\";\r\n    } else if (parseFloat(back_width) < 0) {\r\n      //同理, 相加后百分比<0, 则最小取0\r\n      back_width = \"0\";\r\n    }\r\n    back_width += \"%\";\r\n    //背景条/圆形拖动按钮, 百分比相同,\r\n    // console.log(\"component\", back_width);\r\n    setBackWidth(back_width);\r\n    setSliderRoundLeft(back_width);\r\n    props.onChange(back_width);\r\n  };\r\n\r\n  //props.value变化\r\n  useEffect(() => {\r\n    setBackWidth(props.value);\r\n    setSliderRoundLeft(props.value);\r\n  }, [props.value])\r\n\r\n  //只加载一次\r\n  useEffect(() => {\r\n    //取得相应ref所对应的组件\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    sliderRoundBtn.addEventListener(\"click\", (e) => {\r\n      //阻止冒泡\r\n      e.stopPropagation() || (e.cancelBubble = true);\r\n    });\r\n    //鼠标在圆形按钮上开始拖动\r\n    sliderRoundBtn.addEventListener(\"mousedown\", (e) => {\r\n      clearTimeout(interval_id);\r\n      //记录拖动开始位置, 初始化所需的属性\r\n      startDistance = e.clientX;\r\n      //是否开始移动\r\n      is_moving = true;\r\n      //是否是拖动的组件,(一个页面有可能有多个MusicSliderComponent)\r\n      is_mine_ref = SliderRef;\r\n    });\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        interval_id && clearTimeout(interval_id);\r\n        //计算出移动距离, 并更新startDistance,\r\n        //便于计算\r\n        //当然也可以不用更新startDistance, 那么setWidth中back_width就不用与percent相加了\r\n        let moveDistance = e.clientX - startDistance;\r\n        startDistance = e.clientX;\r\n        setWidth(moveDistance);\r\n      }\r\n    });\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      //放开鼠标, 重置拖动过程中所需的属性\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        is_moving = false;\r\n        is_mine_ref = null;\r\n        startDistance = 0;\r\n      }\r\n    });\r\n    document.addEventListener(\"dragstart\", (e) => {\r\n      //为了配合dragend事件\r\n      is_moving = true;\r\n      is_mine_ref = SliderRef;\r\n      document.onselectstart = function () {\r\n        return false;\r\n      };\r\n    });\r\n    document.addEventListener(\"dragend\", (e) => {\r\n      //不能只用moveup事件, 因为鼠标在拖动过程中, 不会触发mouseup事件, , 但是滑动条还是能滑动, 这个时候会触发dragend事件, 在这里可以处理一下\r\n      if (is_moving && SliderRef == is_mine_ref) {\r\n        //获取移动距离\r\n        let moveX = e.clientX - startDistance;\r\n        //将最终距离赋值给startDistance\r\n        startDistance = e.clientX;\r\n        setWidth(moveX);\r\n        is_moving = false;\r\n        is_mine_ref = \"\";\r\n        document.onselectstart = function () {\r\n          return true;\r\n        };\r\n      }\r\n    });\r\n    slider.addEventListener(\"click\", (e) => {\r\n      //点击滑动条, 改变已滑动条宽度\r\n      let slider_back_width = e.offsetX;\r\n      let slider_width = slider.scrollWidth;\r\n      let percent = (slider_back_width / slider_width) * 100;\r\n      percent = percent.toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //可以作为值, 传回组件onchange事件,\r\n      if (percent > 100) {\r\n        percent = \"100\";\r\n      } else if (percent < 0) {\r\n        percent = \"0\";\r\n      }\r\n      let percentStr = percent + \"%\";\r\n      //实际情况应该是: 先暂停播放, 获取加载资源, 加载完毕, 继续播放; 如果处于加载状态下, 暂停播放\r\n      // interval_id && clearInterval(interval_id)\r\n      setBackWidth(percentStr);\r\n      setSliderRoundLeft(percentStr);\r\n      props.onChange(percentStr);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      id=\"slider\"\r\n      ref={SliderRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: 5,\r\n        backgroundColor: \"#ccc\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        id=\"sliderBack\"\r\n        ref={SliderBackRef}\r\n        style={{ width: backWidth, height: 5, backgroundColor: \"#DD001B\" }}\r\n      ></div>\r\n      <div\r\n        id=\"sliderRoundBtn\"\r\n        ref={SliderRoundBtnRef}\r\n        style={{\r\n          width: 10,\r\n          height: 10,\r\n          borderRadius: \"50%\",\r\n          backgroundColor: \"#DD001B\",\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          transform: \"translateY(-50%)\",\r\n          left: sliderRoundLeft,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\AudioSlider.js",["731","732","733","734","735","736","737","738"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BasicSlider from './BasicSlider';\r\n\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function AudioSlider(props) {\r\n\r\n  const [value, setValue] = useState('0%')\r\n  const [play, setPlay] = useState(false); //歌曲是否开始播放\r\n  const [time, setTime] = useState(\"0\"); //歌曲总时长\r\n  const [isReset, setIsReset] = useState(false); //是否重置\r\n\r\n  /**\r\n    * BasicSlider事件\r\n    */\r\n   //onChange事件\r\n   const handleBasicSliderChange = (percent) => {\r\n    console.log('basic slider change --', percent)\r\n    props.onChange(percent)\r\n  }\r\n\r\n  ////事件--处理定时进度条每隔一秒 更新一次进度条\r\n  // const handleBackWidth = () => {\r\n  //   console.log('handle back width')\r\n  //   console.log(value)\r\n  //   let back_width = value;\r\n  //   back_width = parseFloat(back_width);\r\n  //   if (back_width >= 100) {\r\n  //     //如果back_width已经到达100%,则直接reset()--造成这样情况有以下\r\n  //     //1: 直接拖动滑动条到达100%, 这样直接reset\r\n  //     setIsReset(true);\r\n  //   } else {\r\n  //     //这里150是歌曲的时间, 1/150获取每秒移动的百分比\r\n  //     let percent = ((1 / parseFloat(time)) * 100).toFixed(2);\r\n  //     percent = parseFloat(percent);\r\n  //     //与原来的百分比相加, 得到新的百分比\r\n  //     back_width = back_width + percent;\r\n  //     //如果超过100%, 清除定时器\r\n  //     if (back_width >= 100) {\r\n  //       back_width = 100;\r\n  //       setPlay(false);\r\n  //       // props.hasOwnProperty(\"onEndReached\") && props.onEndReached();\r\n  //     }\r\n  //     back_width += \"%\";\r\n  //     setValue(back_width)\r\n  //     //更新滑动条\r\n  //     // setBackWidth(back_width);\r\n  //     // setSliderRoundLeft(back_width);\r\n  //     // props.onChange(back_width)\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   if (play) {\r\n  //     //这里要用一个单独的方法处理进度条, 不能用() => {}, 这样容易形成值backWidth不变化\r\n  //     interval_id = setInterval(handleBackWidth, 1000);\r\n  //   } else {\r\n  //     //暂停播放状态下, 清除定时器\r\n  //     interval_id && clearInterval(interval_id);\r\n  //   }\r\n  // }, [play]);\r\n  //play播放状态依赖传过来的props.play\r\n  // useEffect(() => {\r\n  //   setPlay(props.play);\r\n  // }, [props.play]);\r\n  // useEffect(() => {\r\n  //   setTime(props.duration);\r\n  //   setIsReset(true)\r\n  // }, [props.duration]);\r\n  useEffect(() => {\r\n    setValue(props.value)\r\n  }, [props.value])\r\n  return (\r\n    <BasicSlider value={value} onChange={handleBasicSliderChange}/>\r\n  )\r\n}","D:\\react\\自己的文件\\net_music\\react_netase_music\\src\\MusicSlider\\VolumeSlider.js",["739"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BasicSlider from './BasicSlider';\r\n\r\nexport default function VolumeSlider(props) {\r\n  const [volume, setVolume] = useState('0%')\r\n  const handleVolumeChange = (percent) => {\r\n    //音量是小数点格式, 例如0.52\r\n    let volume = parseFloat(percent)/100;\r\n    volume = volume.toFixed(2);\r\n    volume = parseFloat(volume)//有没有这行都可以\r\n    props.onChange(volume)\r\n  }\r\n  useEffect(() => {\r\n    setVolume(props.value)\r\n  }, [props.value])\r\n  return (\r\n    <div>\r\n      <BasicSlider value={volume} onChange={handleVolumeChange}/>\r\n    </div>\r\n  )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\index.js",[],["740","741"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\reportWebVitals.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\App.js",["742","743","744","745","746","747","748","749","750","751","752","753","754","755","756"],"import './App.less';\nimport 'antd/dist/antd.css';\nimport 'moment/locale/zh-cn';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport { Button, } from 'antd'\nimport React, { useEffect, useState } from 'react';\nimport Login from './Login/Login'\nimport Home from './Home/Home'\nimport MusicSlider from './MusicSlider/MusicSlider'\nimport ContextMenu from './widgets/ContextMenu/ContextMenu';\nimport Search from './Search/Search';\nimport IconListItem from './widgets/IconListItem/IconListItem';\nimport Carousel from './widgets/Carousel/Carousel'\nimport { RouterOutlet } from 'react-easyroute';\nimport { withRouter, Switch, Route, } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport { connect } from 'react-redux';\nimport $ from 'jquery'\nimport { addToPlaylist, setActive } from './store/actions/playlistActions'\n\nfunction App(props) {\n  const [showSlider, setShowSlider] = useState(true);\n  //传给context menu的数据\n  const [contextMenuData, setContextMenuData] = useState({})\n  //context menu的类型, type: 1为歌曲; 2为歌单; 3为MV\n  const [contextMenuType, setContextMenuType] = useState(0)\n  useEffect(() => {\n    if (props.location.pathname == '/') {\n      //此时页面为登录页面, 所以不显示播放条\n      setShowSlider(false);\n    } else {\n      setShowSlider(true)\n    }\n  }, [props.location])\n  useEffect(() => {\n    document.addEventListener('contextmenu', function (event) {\n\n      //是否是歌曲elem, 通过判断点击的elem或其父元素中是否有类名为is_song, 如果其中一个有, 那么当前点击的elem为歌曲elem;\n      let is_song = $(event.target).parents('.is_song').length > 0 || $(event.target).hasClass('is_song')\n\n      //判断是否是歌单elem, 同样的判断方式, 来判断是否有类名is_playlist,\n      let is_playlist = $(event.target).parents('.is_playlist').length > 0 || $(event.target).hasClass('is_playlist')\n      \n      //判断是否是专辑elem, 同样的判断方式, 来判断是否有类名is_album,\n      let is_album = $(event.target).parents('.is_album').length > 0 || $(event.target).hasClass('is_album')\n\n      //判断是否是MV, 同样的方式, 来判断是否有类名is_mv;\n      let is_mv = $(event.target).parents('.is_mv').length > 0 || $(event.target).hasClass('is_mv');\n\n      //判断是否是Video, 同样的方式, 来判断是否有类名is_video;\n      let is_video = $(event.target).parents('.is_video').length > 0 || $(event.target).hasClass('is_mv');\n\n      if(is_song || is_playlist || is_mv || is_video || is_album) {\n\n        event.preventDefault();\n\n        let menuTransferData = null;\n\n        //获取歌曲数据\n        let songData = $(event.target).hasClass('is_song') ? $(event.target).data('song') : $(event.target).parents('.is_song').data('song')\n        // songData = JSON.parse(songData)\n\n        //获取歌单数据\n        let playlistId = $(event.target).hasClass('is_playlist') ? $(event.target).data('playlist') : $(event.target).parents('.is_playlist').data('playlist')\n        let albumId = $(event.target).hasClass('is_album') ? $(event.target).data('album') : $(event.target).parents('.is_album').data('album')\n        //获取MV数据\n        let mvId = $(event.target).hasClass('is_mv') ? $(event.target).data('mv') : $(event.target).parents('.is_mv').data('mv')\n        //获取Video数据\n        let videoId = $(event.target).hasClass('is_video') ? $(event.target).data('mv') : $(event.target).parents('.is_video').data('video')\n        let playlistData = {id: playlistId};\n        let mvData = {id: mvId}\n        let videoData = {id: videoId}\n        let albumData = {id: albumId};\n\n        //menuType: 存储类型的boolean值\n        let menuType = [is_song, is_playlist, is_mv, is_video, is_album];\n        let typeIndex = menuType.findIndex(item => item == true);\n        //因为数组从0开始, 所以得出结果后, 需要与设定的type进行数据\n        if(typeIndex != -1) {\n          typeIndex = typeIndex + 1;\n        }else {\n          typeIndex = menuType.length + 1;\n        }\n        let type = typeIndex;\n\n        //menuData: Object, 存储的是对应类型的数据\n        let menuData = {\n          '1': songData,\n          '2': playlistData,\n          '3': mvData,\n          '4': videoData,\n          '5': albumData\n        }\n        menuTransferData = menuData[type]\n        //设置需要传递给context menu的类型和数据\n        // let type = is_song ? 1 : (is_playlist ? 2 : (is_mv ? 3 : 4))\n        // menuTransferData = is_song ? songData : (is_playlist ? playlistData : (is_mv ? mvData : videoData))\n        menuTransferData.delete = false;\n        let can_delete = false;\n        if(is_song) {\n          let have_sliderplay_class = $(event.target).hasClass('.is_sliderplaylist') || $(event.target).parents('.is_sliderplaylist').length > 0;\n          can_delete = have_sliderplay_class\n          //menuTransferData的delete字段 主要是为了歌曲的context menu中有没有从列表中删除选项, delete: true为有从列表中删除选项; false为没有从列表中删除选项\n          menuTransferData.delete = have_sliderplay_class;\n        }\n\n        //获取鼠标的位置, clientX: 距离浏览器可视区域左边的距离; clientY: 距离浏览器可视区域顶部的距离\n        let left = event.clientX;\n        let top = event.clientY;\n\n        //滚动的高度\n        let scrollTop = $(document).scrollTop();\n\n        //页面左右滚动的距离\n        let scrollLeft = $(document).scrollLeft();\n\n        //不同类型, context menu的高度高通\n        let relative_type_height = type == 1 ? (can_delete ? 300 : 250) : (type == 2 ? 150 : 50)\n\n        //将自定义的context menu的left和top设为鼠标的位置, top和left都要加上scrollTop和scrollLeft, 否则滚动后, context menu位置不对\n        //下面要解决的问题: 如果鼠标位置距离底部/顶部/左边/右边距离小于自定义的context menu的高/宽, 那么要重新调整自定义context menu的位置\n        //首先获取距离浏览器右边距离是否小于自定义context menu的宽度200,\n        //这里需要用到#root根元素的宽度, #root的宽度是固定的, 不像document的宽/高不是固定的, $(document).height() -- 等同与 scrollHeight()\n        let is_shorter_contextmenu_width = left + scrollLeft + 210 > $('#root').width();\n        if(is_shorter_contextmenu_width) {\n          //如果超过document的宽度, 那么left就反向朝左显示\n          left -= 210\n        }\n\n        //然后获取距离浏览器底部距离是否小于自定义context menu的高度400;\n        let is_shorter_contextmenu_height = top  + relative_type_height > $('#root').height();\n        if(is_shorter_contextmenu_height) {\n          //如果超过document的高度, 那么top就反方向朝上显示\n          top -= relative_type_height;\n        }\n        //设置context menu 的位置和elem的高度\n        $('#contextmenu').css({left: left+ scrollLeft + 10, top: top + scrollTop + 10, height: relative_type_height})\n        setContextMenuType(type)\n        setContextMenuData(menuTransferData)\n        $('#contextmenu').show()\n        //显示的时候, 需要将焦点设为自定义的context menu\n        $('#contextmenu').focus()\n      }else {\n        $('#contextmenu').hide()\n      }\n    })\n    //自定义context menu失去焦点后, 需要将context menu隐藏, 注意: 触发blur事件的前提: 需要elem首先focus, (不是input select, textarea的元素如果需要focus, 必须添加tabIndex)\n    $('#contextmenu').blur(function() {\n      $(this).hide()\n    })\n    let list = localStorage.getItem('playlist')\n    let activeSong = localStorage.getItem('activeSong');\n    activeSong = activeSong ? JSON.parse(activeSong) : null\n    list = list ? JSON.parse(list) : []\n    if(list && (list instanceof Array)) {\n      props.addSong(list)\n    }else {\n      props.addSong([])\n    }\n    if(activeSong) {\n      props.setActiveSong(activeSong)\n    }\n  }, [])\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <div className=\"App\" style={{ position: 'relative' }}>\n        {renderRoutes(props.routes)}\n        {/* <Login/> */}\n        {/* <Search/> */}\n        {/* <IconListItem/> */}\n        {/* <Carousel/> */}\n        {/* <MusicSlider /> */}\n        {/* <Home/> */}\n        {/* <RouterOutlet/> */}\n        {showSlider ? <div style={{ height: 100 }}>\n\n        </div> : null}\n        {showSlider ? <div style={{ position: 'fixed', width: '100%', height: 100, backgroundColor: 'blue', bottom: '0', left: 0, boxShadow: '0 0 5px #ccc', zIndex: 100 }}>\n          <MusicSlider />\n        </div> : null}\n        <div id=\"contextmenu\" tabIndex='1'>\n          <ContextMenu type={contextMenuType} data={contextMenuData}/>\n        </div>\n      </div>\n    </ConfigProvider>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSong: (data) => {\n      dispatch(addToPlaylist(data));\n    },\n    setActiveSong: data => {\n      dispatch(setActive(data))\n    }\n  }\n}\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default withRouter(AppContainer);\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Router\\router.js",["757","758","759"],"import Router from 'react-easyroute';\r\nimport Login from '../Login/Login'\r\nimport Home from '../Home/Home';\r\nimport PersonalSuggest from '../Home/PersonalSuggest/PersonalSuggest';\r\nimport SubHome from '../Home/SubHome/SubHome';\r\nimport Playlist from '../Home/Playlist/Playlist';\r\nimport PlaylistDetail from '../Home/Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Home/Test/Test';\r\nimport ArtistDetail from '../Home/Artists/ArtistDetail/ArtistDetail'\r\nimport PersonalCenter from '../Home/PersonalCenter/PersonalCenter';\r\nimport MVDetail from '../Home/MVDetail/MVDetail';\r\nimport VideoDetail from '../Home/VideoDetail/VideoDetail';\r\nimport AlbumsDetail from '../Home/NewestSong/AlbumsDetail/AlbumsDetail';\r\n\r\n\r\nconst router = new Router({\r\n    mode: 'hash',\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            component: Login,\r\n            name: 'Login'\r\n        },\r\n        {\r\n            path: '/home',\r\n            component: Home,\r\n            name: 'Home',\r\n            children: [\r\n                {\r\n                    path: '/',\r\n                    component: PersonalSuggest,\r\n                    name: 'PersonalSuggest'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n})\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n        routes: [\r\n            {\r\n                path: '/home',\r\n                exact: true,\r\n                component: PersonalSuggest,\r\n            },\r\n            {\r\n                path: '/home/:id',\r\n                exact: true,\r\n                component: SubHome,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/playlist/:id',\r\n        exact: true,\r\n        component: PlaylistDetail,\r\n    },\r\n    {\r\n        path: '/personal/:id',\r\n        exact: true,\r\n        component: PersonalCenter,\r\n    },\r\n    {\r\n        path: '/personal',\r\n        exact: true,\r\n        component: PersonalCenter,\r\n    },\r\n    {\r\n        path: '/artist/:id',\r\n        exact: true,\r\n        component: ArtistDetail\r\n    },\r\n    {\r\n        path: '/mv/:id',\r\n        exact: true,\r\n        component: MVDetail\r\n    },\r\n    {\r\n        path: '/video/:id',\r\n        exact: true,\r\n        component: VideoDetail\r\n    },\r\n    {\r\n        path: '/album/:id',\r\n        exact: true,\r\n        component: AlbumsDetail\r\n    },\r\n\r\n]\r\n\r\nexport default routes;","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Login\\Login.js",["760","761","762","763","764","765"],"\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, Button, Checkbox, Select, Tooltip, message } from 'antd'\r\nimport './Login.less'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\n\r\nconst { Option } = Select;\r\n\r\nconst FormItem = Form.Item;\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 }\r\n}\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 6, span: 16 }\r\n}\r\nconst loginLayout = {\r\n    wrapperCol: { span: 24 }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @export  登录页面\r\n * @return {*} \r\n */\r\nexport default function Login(props) {\r\n    const formRef = useRef();\r\n    const [isPhoneMode, setIsPhoneMode] = useState('1');             //是否使用手机验证码登录\r\n    const [namePlaceholder, setNamePlaceholder] = useState('请输入手机号码');         //用户名input框placeholder\r\n    const [isOnSendCode, setIsonsendcode] = useState(false);                      //是否处于发送验证码\r\n    const [sendCodeMil, setSendcodeMil] = useState(60);                           //处于发送验证码时间段内, 定时读秒的秒数\r\n\r\n\r\n    /**\r\n     * sendVerifCode和下面的useEffect 是发送验证码相关事件\r\n     */\r\n    /**\r\n     * 处于手机登录状态下, 点击发送验证码, 出现'已发送60秒'\r\n     */\r\n    const sendVerifCode = async () => {\r\n        let currentValue = formRef.current.getFieldsValue()\r\n        console.log(formRef.current.getFieldsValue())\r\n        let phone = currentValue.userName;\r\n        if(!phone) {\r\n            message.error('请先输入手机号');\r\n            return false;\r\n        }\r\n        let params = {\r\n            phone: phone,\r\n        }\r\n        let data = await HTTPUtils.captcha_sent(params);\r\n        setIsonsendcode(true)\r\n        setSendcodeMil(sendCodeMil)\r\n    }\r\n    /**\r\n     * 处于发送验证码时间段内, 定时读秒, sendcodemil为0时, 恢复显示发送验证码按钮, 并将读秒重置为60s\r\n     * 依赖isOnSendCode和sendCodeMil\r\n     */\r\n    useEffect(() => {\r\n        if(isOnSendCode) {\r\n            let codeTimer = setInterval(() => {\r\n                if(sendCodeMil >0 && sendCodeMil <= 60) {\r\n                    setSendcodeMil(sendCodeMil-1)\r\n                }else if(sendCodeMil == 0) {\r\n                    setIsonsendcode(false)\r\n                    setSendcodeMil(60)\r\n                }\r\n            }, 1000)\r\n            //为了清除codeTimer\r\n            return () => {\r\n                clearInterval(codeTimer)\r\n            }\r\n        }\r\n    }, [isOnSendCode, sendCodeMil])\r\n\r\n\r\n\r\n    /**\r\n     *提交成功\r\n     *\r\n     * @param {value: Object} value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     * isphonemode: true: 用手机登录; false: 邮箱登录\r\n     */\r\n    const onFinish = async (value) => {\r\n        isPhoneMode != '3' ? await loginWithPhone(value) : await loginWithEmail(value);\r\n    }\r\n    /**\r\n     *提交失败\r\n     *\r\n     * @param {*} err\r\n     */\r\n    const onFinishFailed = (err) => {\r\n        console.log(err)\r\n    }\r\n    /**\r\n     * \r\n     * @param {obj: Object} obj : value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     */\r\n    const loginWithPhone = async (obj) => {\r\n        console.log(obj)\r\n        let password = obj['password'];\r\n        let phone = obj['userName']\r\n        if(isPhoneMode == '1') {\r\n            //手机验证码登录\r\n            let params1 = {\r\n                phone,\r\n                captcha: password,\r\n            }\r\n            let data1 = await HTTPUtils.captcha_verify(params1);\r\n            console.log(data1)\r\n        }else {\r\n            //手机密码登录\r\n            let params = {\r\n                phone,\r\n                password,\r\n            }\r\n            let data = await HTTPUtils.login_cellphone(params);\r\n            console.log(data)\r\n        }\r\n        message.success('登录成功')\r\n        props.history.push('/home')\r\n        // let params = {\r\n        //     phone: obj.userName,\r\n        //     password: obj.password,\r\n        //     timestamp: Date.now()\r\n        // }\r\n        // let data = await HTTPUtils.login_cellphone(params);\r\n        // if(data.code !== 200) {\r\n        //     console.log(data)\r\n        //     message.error(data.msg || '请输入正确的用户名或者密码');\r\n        //     return\r\n        // }\r\n        // console.log(data)\r\n\r\n    }\r\n     /**\r\n     * \r\n     * @param {obj: Object} obj : value: 参数: userName: 手机号/邮箱; password: 密码; remember: 是否记住用户和密码\r\n     */\r\n    const loginWithEmail = async (obj) => {\r\n        let params = {\r\n            email: obj.userName,\r\n            password: obj.password,\r\n            timestamp: Date.now()\r\n        }\r\n        let data = await HTTPUtils.login(params);\r\n        console.log('邮箱登录')\r\n        console.log(data);\r\n        document.cookie = data.cookie;//登录以后, 要存储cookie, 为的是保持登录状态, 请求需要登录的接口\r\n        props.history.push('/home')\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {val: String} val : 选择手机/邮箱, 设置密码框里的tooltips, 用户名里的placeholder\r\n     */\r\n    const selectedType = (val) => {\r\n        setIsPhoneMode(val);\r\n        let holder = val === '3' ? '请输入邮箱' : '请输入手机号码';\r\n        setNamePlaceholder(holder)\r\n    }\r\n\r\n\r\n\r\n    const getdata = async () => {\r\n        let obj = {\r\n            id: 58100\r\n        }\r\n        let data = await HTTPUtils.video_group(obj);\r\n        console.log('视频')\r\n        console.log(data)\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <div\r\n                className='loginContent'\r\n                draggable='true'\r\n            >\r\n                <Button\r\n                    className='closeBtn'\r\n                >\r\n                    <CloseOutlined className='closeImg' />\r\n                </Button>\r\n                <Form\r\n                    ref={formRef}\r\n                    {...layout}\r\n                    name='loginData'\r\n                    autoComplete='false'\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <FormItem\r\n                        {...loginLayout}\r\n                    >\r\n                        <p\r\n                            style={{ textAlign: 'center', fontSize: '25px', borderBottom: '1px solid #C20C0C', paddingBottom: '10px', color: '#C20C0C' }}\r\n                        >\r\n                            网易云音乐\r\n                        </p>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label='用户名'\r\n                        style={{ width: '500px' }}\r\n                    >\r\n                        <Input.Group compact>\r\n                            <Select\r\n                                defaultValue=\"1\"\r\n                                style={{ width: '35%', height: '50px' }}\r\n                                onSelect={selectedType}\r\n                            >\r\n                                <Option value=\"1\">手机验证码</Option>\r\n                                <Option value=\"2\">手机密码</Option>\r\n                                <Option value=\"3\">邮箱</Option>\r\n                            </Select>\r\n                            <FormItem\r\n                                name='userName'\r\n                                style={{ width: '65%' }}\r\n                                rules={[{ required: true, message: '请输入用户名' }]}\r\n                            >\r\n                                <Input\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder={namePlaceholder}\r\n                                />\r\n                            </FormItem>\r\n                        </Input.Group>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label='密码'\r\n                        name='password'\r\n                        style={{ width: '500px' }}\r\n                        rules={[{ required: true, message: '请输入密码' }]}\r\n                    >\r\n                        {\r\n                            !(isPhoneMode == '1') ?\r\n                                <Input.Password\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder='请输入密码'\r\n                                />\r\n                                :\r\n                                <Input\r\n                                    style={{ height: '50px' }}\r\n                                    placeholder='请输入验证码'\r\n                                    suffix={\r\n                                        <Tooltip\r\n                                            title=\"Extra information\"\r\n                                        >\r\n                                            {\r\n                                                !isOnSendCode ?\r\n                                                    <Button\r\n                                                        type='text'\r\n                                                        style={{ color: '#1890ff' }}\r\n                                                        onClick={sendVerifCode}\r\n                                                    >\r\n                                                        发送验证码\r\n                                                </Button>\r\n                                                    :\r\n                                                    <span\r\n                                                        style={{ color: 'gray' }}\r\n                                                    >\r\n                                                        已发送\r\n                                                    <span\r\n                                                        style={{padding: 5}}\r\n                                                    >\r\n                                                            {sendCodeMil}\r\n                                                        </span>\r\n                                                    秒\r\n                                                </span>\r\n                                            }\r\n                                        </Tooltip>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem\r\n                        name='remember'\r\n                        {...tailLayout}\r\n                        valuePropName='checked'\r\n                    >\r\n                        <Checkbox\r\n                        >\r\n                            记住我\r\n                        </Checkbox>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        wrapperCol={{ offset: 6, span: 12 }}\r\n\r\n                    >\r\n                        <Button\r\n                            type='primary'\r\n                            htmlType='submit'\r\n                            className='subBtn'\r\n                            shape='round'\r\n                        >\r\n                            登录\r\n                        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n            {/* <Button onClick={getdata}>获取登录</Button> */}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Home.js",["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, Slider, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Home.less';\r\nimport PersonalSuggest from './PersonalSuggest/PersonalSuggest';\r\nimport SubHome from './SubHome/SubHome';\r\nimport { RouterOutlet } from 'react-easyroute';\r\nimport { Route, Switch, Link, useParams } from 'react-router-dom'\r\nimport { renderRoutes } from 'react-router-config';\r\nimport $ from 'jquery'\r\nconst paths = {\r\n    '/home/0': 0,\r\n    '/home/1': 1,\r\n    '/home/2': 2,\r\n    '/home/3': 3,\r\n    '/home/4': 4,\r\n}\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Home(props) {\r\n    const [homeTags, setHomeTags] = useState(['个性推荐', '歌单', '排行榜', '歌手', '最新音乐']);       //首页tags\r\n    const [activeHomeTag, setActiveHomeTag] = useState('0');            //当前active的home tag\r\n    useEffect(() => {\r\n        console.log(props.route.routes);\r\n        let pathname = props.location.pathname;\r\n        setActiveHomeTag(paths[pathname])\r\n    })\r\n    /**\r\n     * \r\n     * @param {type: String} type : 0: 个性推荐; 1: 歌单; 2: 排行榜; 3: 歌手; 4: 最新音乐\r\n     */\r\n    const clickHomeTag = (type) => {\r\n        setActiveHomeTag(type)\r\n    }\r\n    return (\r\n        <div className='homePage'>\r\n            <div\r\n                className='catHeader'\r\n            >\r\n                {\r\n                    homeTags.map((item, index) => {\r\n                        return (\r\n                            <Link\r\n                                key={index}\r\n                                className={`${activeHomeTag == index ? 'activeCatHeaderItem' : ''} catHeaderItem`}\r\n                                onClick={() => clickHomeTag(index)}\r\n                                to={`/home/${index}`}\r\n                            >\r\n                                {item}\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {renderRoutes(props.route.routes)}\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Search\\Search.js",["782","783","784","785","786","787","788","789","790","791","792","793"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport './Search.less';\r\nimport $ from 'jquery'\r\n/**\r\n *\r\n *\r\n * @export 搜索框组件\r\n * @param {*} props\r\n * @return {*} \r\n */\r\nexport default function Search(props) {\r\n    const searchRef = useRef();\r\n    //state---默认搜索词--placeholder\r\n    const [searchDefault, setSearchDefault] = useState({\r\n        realkeyword: '',\r\n        showKeyword: ''\r\n    })\r\n    //state---搜索keyword\r\n    const [searchKeyword, setSearchKeyword] = useState('')\r\n    //state---热搜列表\r\n    const [searchHot, setSearchHot] = useState([]);\r\n    //state---搜索input是否聚焦\r\n    const [isSearchFocus, setIsSearchFocus] = useState(false);\r\n\r\n    //search focus 时,获取热搜列表\r\n    useEffect(async () => {\r\n        await search_default();\r\n        // searchRef.current.focus();\r\n        // console.log(searchRef.current.onBlur())\r\n    }, [searchDefault.showKeyword]);\r\n\r\n    //search input keyword改变所触发的事件\r\n    useEffect(async () => {\r\n        if (searchKeyword) {\r\n            await search_suggest();\r\n        }else {\r\n            await search_hot();\r\n        }\r\n    }, [searchKeyword])\r\n    //search input focus触发事件\r\n    useEffect(async () => {\r\n        if (isSearchFocus) {\r\n            if (searchKeyword) {\r\n                await search_suggest();\r\n            } else {\r\n                await search_hot();\r\n            }\r\n        }\r\n    }, [isSearchFocus])\r\n    //事件---默认搜索词\r\n    const search_default = async () => {\r\n        let data = await HTTPUtils.search_default();\r\n        // console.log(data)\r\n        setSearchDefault({\r\n            realkeyword: data.data.realkeyword,\r\n            showKeyword: data.data.showKeyword,\r\n        })\r\n    }\r\n\r\n    //事件---热搜列表\r\n    const search_hot = async () => {\r\n        let data = await HTTPUtils.search_hot();\r\n        setSearchHot(data.result.hots)\r\n    }\r\n\r\n    //事件---搜索聚焦\r\n    const searchFocus = async () => {\r\n        setIsSearchFocus(true)\r\n        // await search_hot();\r\n    }\r\n\r\n    //事件---搜索失去焦点\r\n    const searchBlur = async () => {\r\n        // setIsSearchFocus(false)\r\n    }\r\n\r\n    //事件---点击search_list_item\r\n    const list_item_click = async (value) => {\r\n        setSearchKeyword(value)\r\n        console.log('ppp');\r\n        setIsSearchFocus(false)\r\n    }\r\n\r\n    //事件---search enter\r\n    const searchEnter = async () => {\r\n        // console.log(searchKeyword)\r\n    }\r\n\r\n    //事件---search input onChange\r\n    const searchChange = async (e) => {\r\n        let value = e.target.value\r\n        setSearchKeyword(value)\r\n    }\r\n\r\n    //事件---请求搜索建议\r\n    const search_suggest = async () => {\r\n        let obj = {\r\n            keywords: searchKeyword,\r\n        }\r\n        let search_hot = [];\r\n        let data = await HTTPUtils.search_suggest(obj)\r\n        // console.log(data.result.playlists)\r\n        console.log(data.result.songs)\r\n        // console.log(data.result.albums)\r\n        // console.log(data.result.artists)\r\n        let res = data.result;\r\n        if (res.songs) {\r\n            let len = search_hot.length;\r\n            search_hot[len] = {}\r\n            search_hot[len].type = 'songs';\r\n            search_hot[len].category = '歌曲';\r\n            search_hot[len].list = [];\r\n            res.songs.map((item, index) => {\r\n                let list_item = {};\r\n                list_item.id = item.id;\r\n                list_item.title = item.name + '-' + item.artists[0].name;\r\n                search_hot[len].list.push(list_item);\r\n            })\r\n        }\r\n        if(res.albums) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'albums';\r\n            item.category = '专辑';\r\n            item.list = [];\r\n            res.albums.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name + '-' + zItem.artist.name;\r\n                // console.log(item)\r\n                // console.log(item.list instanceof Array)\r\n                item.list.push(list_item);\r\n            })\r\n            search_hot[len] = item;\r\n        }\r\n        if(res.artists) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'artists';\r\n            item.category = '歌手';\r\n            item.list = [];\r\n            res.artists.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name;\r\n                item.list.push(list_item)\r\n            })\r\n            search_hot[len] = item;\r\n        }\r\n        if(res.playlists) {\r\n            let len = search_hot.length;\r\n            let item = {};\r\n            item.type = 'playlists';\r\n            item.category = '歌单';\r\n            item.list = [];\r\n            res.playlists.map(zItem => {\r\n                let list_item = {};\r\n                list_item.id = zItem.id;\r\n                list_item.title = zItem.name;\r\n                item.list.push(list_item)\r\n            })\r\n            search_hot[len] = item\r\n        }\r\n        setSearchHot(search_hot)\r\n    }\r\n    //渲染---不同情况下的热搜列表\r\n    const renderHotItem = (item) => {\r\n        // console.log(item)\r\n        if (!item.type) {\r\n            return (\r\n                <p\r\n                    style={{ paddingLeft: 10 }}\r\n                    className='p_no_pad p_line_height'\r\n                    onClick={() => list_item_click(item.first)}\r\n                >\r\n                    {item.first}\r\n                </p>\r\n            )\r\n        }\r\n        return (\r\n            <div className='hot_arr_item' style={{ display: 'flex', flexDirection: 'row' }}>\r\n                <p style={{ flex: 1 }} className='p_line_height p_center'>\r\n                    {item.category}\r\n                </p>\r\n                <div style={{ flex: 3, flexDirection: 'column', borderBottom: '1px solid gray' }}>\r\n                    {\r\n                        item.list.length && item.list.map((zItem, zIndex) => {\r\n                            return (\r\n                                <p\r\n                                    key={zItem.id}\r\n                                    style={{ paddingLeft: 10 }}\r\n                                    className='p_no_pad p_line_height'\r\n                                    onClick={() => list_item_click(zItem.title)}\r\n                                >\r\n                                    {zItem.title}\r\n                                </p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                className='header'\r\n            >\r\n                <div className='header_search'>\r\n                    <Input\r\n                        ref={searchRef}\r\n                        placeholder={searchDefault.showKeyword}\r\n                        value={searchKeyword}\r\n                        style={{ width: '350px', height: '40px', borderRadius: '10px' }}\r\n                        allowClear\r\n                        onFocus={searchFocus} onBlur={searchBlur}\r\n                        onChange={searchChange}\r\n                        onPressEnter={searchEnter}\r\n                    />\r\n                    <div className={`header_search_list ${isSearchFocus ? 'header_search_list_active' : null}`}>\r\n                        {\r\n                            searchHot.length > 0 && searchHot.map((item, index) => {\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        className='header_search_list_item'\r\n                                    >\r\n                                        {renderHotItem(item)}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSlider.js",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { addToPlaylist, deleteAllSongs, deleteSong, setActive, } from '../store/actions/playlistActions'\r\nimport { connect } from 'react-redux'\r\nimport { Input, message, Button, Slider } from \"antd\";\r\nimport HTTPUtils from \"../HTTPUtils/HTTPUtils\";\r\nimport \"./MusicSlider.less\";\r\n// const mp3Path = require('../Sounds/test.mp3')\r\n//测试本地mp3地址\r\nimport mp3Path from \"../Sounds/test.mp3\";\r\nimport hongyanPath from \"../Sounds/hongyan.mp3\";\r\n//播放/暂停img\r\nimport playActive from \"../images/music/play-active.png\";\r\nimport playNoActive from \"../images/music/play-no-active.png\";\r\nimport pauseActive from \"../images/music/pause-active.png\";\r\nimport pauseNoActive from \"../images/music/pause-no-active.png\";\r\n//上一首\r\nimport forwardActive from \"../images/music/forward-active.png\";\r\nimport forwardNoActive from \"../images/music/forward-no-active.png\";\r\n//下一首\r\nimport lastActive from \"../images/music/last-active.png\";\r\nimport lastNoActive from \"../images/music/last-no-active.png\";\r\n//快进\r\nimport fastActive from \"../images/music/fast-active.png\";\r\nimport fastNoActive from \"../images/music/fast-no-active.png\";\r\n//快退\r\nimport backFastActive from \"../images/music/back-fast-active.png\";\r\nimport backFastNoActive from \"../images/music/back-fast-no-active.png\";\r\n//音量\r\nimport volumeActive from \"../images/music/volume-active.png\";\r\nimport volumeNoActive from \"../images/music/volume-no-active.png\";\r\n//静音\r\nimport mutedActive from \"../images/music/muted-active.png\";\r\nimport mutedNoActive from \"../images/music/muted-no-active.png\";\r\n//播放列表\r\nimport listActive from \"../images/music/list-active.png\";\r\nimport listNoActive from \"../images/music/list-no-active.png\";\r\n//循环\r\n///列表循环\r\nimport allLoopActive from \"../images/music/all-loop-active.png\";\r\nimport allLoopNoActive from \"../images/music/all-loop-no-active.png\";\r\n///单曲循环\r\nimport singleLoopActive from \"../images/music/single-loop-active.png\";\r\nimport singleLoopNoActive from \"../images/music/single-loop-no-active.png\";\r\n///无循环\r\nimport noLoopActive from \"../images/music/none-loop-active.png\";\r\nimport noLoopNoActive from \"../images/music/none-loop-no-active.png\";\r\n\r\n//音乐列表item图片\r\n///加入播放列表\r\nimport add from \"../images/music/musicListItem/add.png\";\r\nimport noAdd from \"../images/music/musicListItem/no-add.png\";\r\n///下一首播放\r\nimport joinNext from \"../images/music/musicListItem/join-next.png\";\r\nimport noJoinNext from \"../images/music/musicListItem/no-join-next.png\";\r\n///收藏like\r\nimport like from \"../images/music/musicListItem/like.png\";\r\nimport noLike from \"../images/music/musicListItem/no-like.png\";\r\n///播放\r\nimport itemPlay from \"../images/music/musicListItem/play.png\";\r\n//MV\r\nimport MV from \"../images/music/musicListItem/mv.png\";\r\n\r\n\r\n//引入的组件\r\nimport MusicSliderComponent from \"./MusicSliderComponent\";\r\nimport AudioSlider from \"./AudioSlider\";\r\nimport VolumeSlider from \"./VolumeSlider\";\r\nimport SliderPlaylist from \"../SliderPlaylist/SliderPlaylist\";\r\n\r\n//时间转换--秒转为00:00格式,例如150 -->> 02:30\r\nconst covertTime = (time) => {\r\n  let min = time / 60;\r\n  min = Math.floor(min);\r\n  min = isNaN(min) ? 0 : min;\r\n  min = min >= 10 ? min : \"0\" + min;\r\n  let sec = time % 60;\r\n  sec = isNaN(sec) ? 0 : sec;\r\n  sec = sec >= 10 ? sec : \"0\" + sec;\r\n  return min + \":\" + sec;\r\n};\r\nfunction MusicSlider(props) {\r\n  const [musicPath, setMuscipath] = useState(\"\"); //歌曲地址\r\n  const [sliderPause, setSliderPause] = useState(false); //Audio的播放状态; true: 正在播放; false: 停止播放;\r\n  const [isOnPlaying, setIsOnPlaying] = useState(false);//是否正在播放, 用于切换歌曲, 加载完资源后, 是否自动播放;\r\n  const [canPlay, setCanplay] = useState(false);//是否能播放, \r\n  const [sliderEnd, setSliderEnd] = useState(false); //musicSldierComponent是否播放完毕\r\n  const ownAudioRef = useRef(); //配合MusicSliderComponent的audio\r\n  const [duration, setDuration] = useState(\"0\"); //歌曲总时长\r\n  const [currentAudioTime, setCurrentAudioTime] = useState(\"0%\");\r\n  const [isFirst, setIsFirst] = useState(0); //是否切换歌曲, isFirst== 1时, 表明是切换歌曲, 设置完事件后, 再将isFirst重置为0\r\n\r\n  //action--图片相关变量\r\n  const [forwardImg, setForwardImg] = useState(forwardNoActive); //上一首\r\n  const [playImg, setPlayImg] = useState(playNoActive); //播放/暂停\r\n  const [lastImg, setLastImg] = useState(lastNoActive); //下一首\r\n  const [volumeImg, setVolumeImg] = useState(volumeNoActive);\r\n  //action--音量条变量\r\n  const [sliderVolume, setSliderVolume] = useState(\"20%\");\r\n  //是否显示播放列表\r\n  const [showPlaylist, setShowPlaylist] = useState(false)\r\n\r\n  //获取父元素类为name的ele\r\n  const getMusicacbtnEle = (e, name) => {\r\n    if (e.className == name) {\r\n      return e;\r\n    }\r\n    if (e.parentNode.className == name) {\r\n      return e.parentNode;\r\n    }\r\n    return getMusicacbtnEle(e.parentNode, name);\r\n  };\r\n  //MusicSliderComponent播放/暂停\r\n  const handleSliderPause = () => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    let time = audioCurrent.duration;\r\n    setDuration(time);\r\n    if(!musicPath) {\r\n      //如果当前播放列表中没有歌曲地址, 但是播放列表中有数据, 那么直接播放列表中第一首歌曲\r\n      if((props.songs instanceof Array) && props.songs.length > 0) {\r\n        props.setActiveSong(props.songs[0])\r\n      }else {\r\n        if(props.activeSong.data.id) {\r\n          getMusicUrl(props.activeSong.data.id)\r\n        }\r\n      }\r\n    }\r\n    if(canPlay) {\r\n      setSliderPause(!sliderPause)\r\n      setIsOnPlaying(!sliderPause)\r\n    }else {\r\n      setSliderPause(false)\r\n      setIsOnPlaying(false)\r\n    }\r\n  };\r\n  //播放状态- -也要更新audio的播放状态\r\n  useEffect(() => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    if (sliderPause) {\r\n      setPlayImg(pauseNoActive);\r\n      audioCurrent.play();\r\n    } else {\r\n      setPlayImg(playNoActive);\r\n      audioCurrent.pause();\r\n    }\r\n  }, [sliderPause]);\r\n\r\n  //播放结束事件--暂停播放, 重置audio当前时间为0\r\n  useEffect(() => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    setSliderPause(false);\r\n    audioCurrent.currentTime = 0;\r\n  }, [sliderEnd]);\r\n\r\n  //播放下一首, 或者播放上一首\r\n  const playPreOrNextSong = (type) => {\r\n    let songs = props.songs;\r\n    let len = songs.length;\r\n    let activeSong = props.activeSong;\r\n    if(type == 1) {\r\n      //播放上一首\r\n      if(activeSong.index == 0) {\r\n        props.setActiveSong(songs[len-1]);\r\n      }else {\r\n        props.setActiveSong(songs[activeSong.index - 1])\r\n      }\r\n    }else {\r\n      //播放下一首\r\n      if(activeSong.index == len-1) {\r\n        props.setActiveSong(songs[0]);\r\n      }else {\r\n        props.setActiveSong(songs[activeSong.index + 1])\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  //切换歌曲\r\n  const switchSongs = (type) => {\r\n    setSliderPause(false);\r\n    // let songs = props.songs;\r\n    // let len = songs.length;\r\n    // let activeSong = props.activeSong;\r\n    //上一首/下一首\r\n    //上一首: 如果当前歌曲是列表中第一首; 那么上一首为列表最后一首;\r\n    //下一首: 如果当前歌曲是列表中最后一首, 那么下一首是列表第一首\r\n    switch(type) {\r\n      case 1:\r\n        playPreOrNextSong(1)\r\n        break;\r\n      case 2:\r\n        playPreOrNextSong(2)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n  //在ownAudioRef能够播放时, 获取总时长,\r\n  const handleAudioCanPlay = () => {\r\n    console.log('handle auto can play');\r\n    let audioCurrent = ownAudioRef.current;\r\n    setDuration(audioCurrent.duration);\r\n    setCanplay(true)\r\n  };\r\n\r\n  //ownAudioRef总时长变化后, 播放musicSliderComponent\r\n  useEffect(() => {\r\n    if (isFirst == 1) {\r\n      setSliderPause(true);\r\n      setIsFirst(0);\r\n    }\r\n  }, [duration]);\r\n  /**\r\n   * ownAudioRef 静音事件\r\n   */\r\n\r\n  const mutedAudio = () => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    let volume = audioCurrent.volume;\r\n    if (volume) {\r\n      audioCurrent.volume = 0;\r\n    } else {\r\n      audioCurrent.volume = 0.2;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * AudioSlider事件\r\n   */\r\n  //ownAudioRef每次更新progress\r\n  const handleAudioUpdate = () => {\r\n    console.log('audio time update')\r\n    let audioCurrent = ownAudioRef.current;\r\n    let audioTime = audioCurrent.currentTime;\r\n    let percent =\r\n      ((parseFloat(audioTime) / parseFloat(duration)) * 100).toFixed(2) + \"%\";\r\n    setCurrentAudioTime(percent);\r\n  };\r\n  //进度条变化onChange事件\r\n  const handleAudioSliderChange = (percent) => {\r\n    let audioCurrent = ownAudioRef.current;\r\n    percent = parseFloat(percent);\r\n    let audioDuration = audioCurrent.duration;\r\n    let time = (audioDuration * percent) / 100;\r\n    percent += \"%\";\r\n    console.log('time', time)\r\n    try {\r\n      audioCurrent.currentTime = time;\r\n    } catch(e) {\r\n      console.log('error: ', e)\r\n    }\r\n    setCurrentAudioTime(percent);\r\n  };\r\n\r\n  /**\r\n   * 各种按钮事件\r\n   */\r\n  //按钮点击事件\r\n  const handleActionClick = (event) => {\r\n    let id = event.target.id;\r\n    switch (id) {\r\n      case \"forward\":\r\n        switchSongs(1);\r\n        break;\r\n      case \"play\":\r\n        handleSliderPause();\r\n        break;\r\n      case \"last\":\r\n        switchSongs(2);\r\n        break;\r\n      case 'volume':\r\n        let volume = parseInt(sliderVolume);\r\n        if(volume == 0) {\r\n          handleVolumeSliderChange(0.2)\r\n        }else {\r\n          handleVolumeSliderChange(0)\r\n        }\r\n        break;\r\n      case 'list':\r\n        setShowPlaylist(!showPlaylist)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //按钮hover事件 type: 1为mouseOver; 2: mouseOut\r\n  const handleActionHover = (type, event) => {\r\n    let id = event.target.id;\r\n    switch (id) {\r\n      case \"forward\":\r\n        type == 1\r\n          ? setForwardImg(forwardActive)\r\n          : setForwardImg(forwardNoActive);\r\n        break;\r\n      case \"play\":\r\n        if (sliderPause) {\r\n          type == 1 ? setPlayImg(pauseActive) : setPlayImg(pauseNoActive);\r\n        } else {\r\n          type == 1 ? setPlayImg(playActive) : setPlayImg(playNoActive);\r\n        }\r\n        break;\r\n      case \"last\":\r\n        type == 1 ? setLastImg(lastActive) : setLastImg(lastNoActive);\r\n        break;\r\n      case \"volume\":\r\n        type == 1 ? setVolumeImg(volumeActive) : setVolumeImg(volumeNoActive);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //音量条change事件\r\n  const handleVolumeSliderChange = (vol) => {\r\n    console.log('handle volume slider');\r\n    console.log(vol);\r\n    //vol是小数, 例如0.52\r\n    let audioRef = ownAudioRef.current;\r\n    audioRef.volume = vol;\r\n    let percent = vol * 100 + \"%\";\r\n    setSliderVolume(percent);\r\n  };\r\n\r\n  //获取音乐url\r\n  const getMusicUrl = async (id) => {\r\n    if(!id) {\r\n      return;\r\n    }\r\n    let params = {\r\n      id,\r\n    }\r\n    let data = await HTTPUtils.song_url(params);\r\n    console.log('get music url');\r\n    console.log(data);\r\n    let url = data.data[0].url\r\n    if(!url) {\r\n      //url返回null, 那么说明没有版权, 直接进入下一个数据\r\n      let songs = props.songs;\r\n      let len = songs.length;\r\n      let activeSong = props.activeSong\r\n      if(activeSong.index != -1) {\r\n        //同样的上一首/下一首逻辑\r\n        // if(activeSong.index == (len-1)) {\r\n        //   props.setActiveSong(songs[0])\r\n        // }else {\r\n        //   props.setActiveSong(songs[activeSong.index + 1])\r\n        // }\r\n        playPreOrNextSong(2)\r\n      }\r\n    }else {\r\n      setMuscipath(url)\r\n    }\r\n  }\r\n\r\n  //每次播放的歌曲url变化都要重新获取音乐的url\r\n  useEffect(() => {\r\n    setSliderPause(false)\r\n    setCanplay(false)\r\n    getMusicUrl(props.activeSong.data.id);\r\n  }, [props.activeSong.data.id])\r\n\r\n  //每首歌曲播放完毕, 继续播放下一首\r\n  useEffect(() => {\r\n    if(parseInt(currentAudioTime) == 100) {\r\n      let songs = props.songs;\r\n      let len = songs.length;\r\n      let activeSong = props.activeSong\r\n      if(activeSong.index != -1) {\r\n        //同样的上一首/下一首逻辑\r\n        playPreOrNextSong(2)\r\n      }\r\n    }\r\n  }, [currentAudioTime])\r\n\r\n  //依赖canplay, 如果当前能播放, 并且isOnPlaying为true的情况下, 自动播放歌曲\r\n  useEffect(() => {\r\n    if(canPlay && isOnPlaying) {\r\n      setSliderPause(true)\r\n    }\r\n  }, [canPlay])\r\n\r\n  return (\r\n    <div id={props.id} style={{ position: 'relative' }}>\r\n      <audio\r\n        ref={ownAudioRef}\r\n        id=\"audio\"\r\n        src={musicPath}\r\n        onCanPlay={handleAudioCanPlay}\r\n        onTimeUpdate={handleAudioUpdate}\r\n      ></audio>\r\n      {/* <button onClick={handleSliderPause}>开始播放</button>\r\n      <button onClick={switchSongs}>切换歌曲</button>\r\n      <button onClick={mutedAudio}>静音</button> */}\r\n      <div className=\"audioSlider\">\r\n        <AudioSlider\r\n          value={currentAudioTime}\r\n          onChange={handleAudioSliderChange}\r\n        />\r\n        <div className=\"sliderActions\">\r\n          <div className=\"actionRowContainer\">\r\n            <ul\r\n              className=\"actionRow\"\r\n              onClick={handleActionClick}\r\n              onMouseOver={(event) => handleActionHover(1, event)}\r\n              onMouseOut={(event) => handleActionHover(2, event)}\r\n            >\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id=\"forward\"\r\n                  src={forwardImg}\r\n                />\r\n              </li>\r\n              <li className=\"actionItem\" >\r\n                <img\r\n                  className=\"actionItemImg50 marginHon10\"\r\n                  id=\"play\"\r\n                  src={playImg}\r\n                />\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id=\"last\"\r\n                  src={lastImg}\r\n                />\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id=\"volume\"\r\n                  src={volumeImg}\r\n                />\r\n                <div style={{ backgroundColor: \"red\", width: 100, display: 'inline-block' }}>\r\n                  <VolumeSlider\r\n                    value={sliderVolume}\r\n                    onChange={handleVolumeSliderChange}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <li className=\"actionItem\">\r\n                <img\r\n                  className=\"actionItemImg35 marginHon10\"\r\n                  id='list'\r\n                  src={listNoActive}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showPlaylist ? <SliderPlaylist/> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songs: state.playlistReducer.data,\r\n    activeSong: state.playlistReducer.active\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addSong: (data, index) => {\r\n      dispatch(addToPlaylist(data, index));\r\n    },\r\n    deleteSong: (data, index) => {\r\n      dispatch(deleteSong(data, index))\r\n    },\r\n    deleteAllSongs: () => {\r\n      dispatch(deleteAllSongs())\r\n    },\r\n    setActiveSong: data => {\r\n      console.log(dispatch);\r\n      dispatch(setActive(data))\r\n    }\r\n  }\r\n}\r\n\r\nconst MusicSliderContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MusicSlider)\r\n\r\nexport default MusicSliderContainer;\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\SubHome\\SubHome.js",["852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872"],"import React, { useState, useEffect,  } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './SubHome.less'\r\nimport PersonalSuggest from '../PersonalSuggest/PersonalSuggest'\r\nimport Playlist from '../Playlist/Playlist';\r\nimport Toplist from '../Toplist/Toplist';\r\nimport Artists from '../Artists/Artists';\r\nimport NewestSong from '../NewestSong/NewestSong';\r\nimport PlaylistDetail from '../Playlist/PlaylistDetail/PlaylistDetail';\r\nimport Test from '../Test/Test';\r\nimport MusicSlider from '../../MusicSlider/MusicSlider'\r\nimport MusicSliderComponent from '../../MusicSlider/MusicSliderComponent';\r\nimport ArtistDetail from '../Artists/ArtistDetail/ArtistDetail'\r\nimport PersonalCenter from '../PersonalCenter/PersonalCenter';\r\nimport Search from '../../Search/Search';\r\nimport VideoSlider from '../../VideoSlider/VideoSlider';\r\nimport MVDetail from '../MVDetail/MVDetail';\r\nimport VideoDetail from '../VideoDetail/VideoDetail';\r\nimport Video from '../../Video/Video/Video';\r\nimport MV from '../../Video/MV/MV';\r\n\r\n\r\nexport default function SubHome(props) {\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n    })\r\n\r\n    return (\r\n        <div\r\n            className='subhomepage'\r\n        >\r\n            {\r\n                id == 0 ?\r\n                <PersonalSuggest/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 1 ?\r\n                <Playlist/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 2 ?\r\n                <Toplist/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id == 3?\r\n                <Artists/>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                id!= 0 && id != 1 && id !=2 && id != 3 ?\r\n                // <VideoDetail/>\r\n                // <MVDetail/>\r\n                // <VideoSlider/>\r\n                <NewestSong/>\r\n                // <Video/>\r\n                // <MV/>\r\n                // <Search/>\r\n                // <PlaylistDetail/>\r\n                // <PersonalCenter/>\r\n                // <MusicSliderComponent/>\r\n                // <MusicSlider/>\r\n                // <ArtistDetail/>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\PlaylistDetail.js",["873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\PersonalSuggest\\PersonalSuggest.js",["930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, message, Button, Slider } from \"antd\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./PersonalSuggest.less\";\r\nimport PlayImg from \"../../images/music/play-active.png\";\r\nimport Carousel from \"../../widgets/Carousel/Carousel\";\r\nimport { withRouter } from \"react-router\";\r\n/**\r\n *\r\n *\r\n * @export\r\n * @param {*} props\r\n * @return {*}\r\n */\r\nfunction PersonalSuggest(props) {\r\n  const [songsData, setSongsData] = useState([]); //推荐音乐\r\n  const [perPlaylists, setPerPlaylists] = useState([]); //推荐歌单数据\r\n  const [videoGroupList, setVideoGroupList] = useState([]); //视频标签列表数据\r\n  const [selGroupID, setSelGroupID] = useState(\"0\"); //选中的视频标签item ID\r\n  const [isSpreadGroupList, setIsSpreadGroupList] = useState(false); //是否展开视频标签列表\r\n  const [perMV, setPerMV] = useState([]); //获取推荐MV数据\r\n  const [allMV, setAllMV] = useState([]); //获取全部MV数据\r\n  const [newMV, setNewMV] = useState([]); //获取最新MV\r\n  const [priContent, setPricontent] = useState([]); //独家放送\r\n  const [priContentList, setPricontentList] = useState([]); //独家放送列表\r\n  const [bannerData, setBannerData] = useState([]); //轮播图数据\r\n\r\n  /**\r\n   * 获取推荐歌曲\r\n   * @returns\r\n   */\r\n  const getPersonlizedSongs = async () => {\r\n    let data = await HTTPUtils.personalized_newsong();\r\n    setSongsData(data.result);\r\n  };\r\n  /**\r\n   * 获取推荐歌单\r\n   * @param {limit: 获取数量, 默认30} obj\r\n   */\r\n  const getPersonlizedPlaylists = async (obj) => {\r\n    let data = await HTTPUtils.personalized(obj);\r\n    setPerPlaylists(data.result);\r\n  };\r\n  const getPersonlizedMV = async () => {\r\n    let data = await HTTPUtils.personalized_mv();\r\n    console.log(data);\r\n    setPerMV(data.result);\r\n  };\r\n  /**\r\n   * 获取独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontent = async () => {\r\n    let data = await HTTPUtils.personalized_privatecontent();\r\n    console.log(\"独家放送1111\");\r\n    console.log(data);\r\n    setPricontent(data.result);\r\n  };\r\n  /**\r\n   * 获取所有独家放送列表\r\n   */\r\n  const getPersonlizedPrivatecontentList = async () => {\r\n    let obj = {\r\n      limit: 19,\r\n    };\r\n    let data = await HTTPUtils.personalized_privatecontent_list(obj);\r\n    console.log(\"独家放送列表2222\");\r\n    console.log(data);\r\n    setPricontentList(data.result);\r\n  };\r\n  const getBanner = async () => {\r\n    let obj = {\r\n      type: 0,\r\n    };\r\n    let data = await HTTPUtils.banner(obj);\r\n    console.log(data);\r\n    if (data.code != 200) {\r\n      message.error(data.msg || \"轮播图数据出错\");\r\n      return;\r\n    }\r\n    let list = data.banners;\r\n    let len = list.length;\r\n    // let loopCount = Math.floor(len/3);\r\n    // list.length = loopCount * 3;\r\n    list.length = 9\r\n    setBannerData(list);\r\n  };\r\n  /**\r\n   * 页面加载时, 获取推荐系列数据, 只执行一次----------------------------------------|\r\n   */\r\n  useEffect(async () => {\r\n    await getPersonlizedSongs();\r\n    let obj = {\r\n      limit: 12,\r\n    };\r\n    await getPersonlizedPlaylists(obj);\r\n    await getVideoCatList();\r\n    await getplaylistCatlist();\r\n    await getPlaylistCat();\r\n    await getPersonlizedPrivatecontent();\r\n    await getPersonlizedPrivatecontentList();\r\n    await getBanner();\r\n    await getPersonlizedMV();\r\n    console.log('登录状态');\r\n    // let data = await HTTPUtils.login_status();\r\n    // console.log(data);\r\n  }, []);\r\n  /**\r\n   * 需要登录\r\n   * 获取视频系列接口-----------------------------------------------------------------\r\n   */\r\n  //接口---获取视频标签列表\r\n  const getVideoCatList = async () => {\r\n    let data = await HTTPUtils.video_group_list();\r\n    data.data.unshift({ id: \"0\", name: \"全部\" });\r\n    setSelGroupID(data.data[0].id);\r\n    setVideoGroupList(data.data);\r\n  };\r\n  //事件---视频标签item click点击事件\r\n  const selectVideoGroup = async (item) => {\r\n    setSelGroupID(item.id);\r\n    await getVideoGroup(item.id);\r\n  };\r\n  //事件---展开/关闭视频标签列表\r\n  const changeGroupListHeight = () => {\r\n    setIsSpreadGroupList(!isSpreadGroupList);\r\n  };\r\n  //接口---获取相应视频标签下视频列表\r\n  const getVideoGroup = async (id) => {\r\n    if (id == 0) {\r\n      return;\r\n    }\r\n    let obj = {\r\n      id: id,\r\n    };\r\n    console.log(\"id id id\");\r\n    console.log(id);\r\n    let data = await HTTPUtils.video_group(obj);\r\n    console.log(\"视频\");\r\n    console.log(data);\r\n    // let data = await HTTPUtils.video_timeline_all();\r\n  };\r\n\r\n\r\n  /**\r\n   * 进入歌单详情\r\n   */\r\n  const navigateDetail = (item) => {\r\n    props.history.push('/playlist/' + item.id)\r\n  }\r\n\r\n\r\n  /**\r\n   * 歌单系列接口--------------------------------------------||\r\n   */\r\n  /**\r\n   * 获取歌单分类列表\r\n   */\r\n  const getplaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    console.log(data);\r\n  };\r\n  const getPlaylistCat = async (obj) => {\r\n    let bb = {\r\n      cat: \"古风\",\r\n      limit: 10,\r\n    };\r\n    let data = await HTTPUtils.top_playlist(bb);\r\n    console.log(data);\r\n  };\r\n\r\n\r\n  //进入个人中心\r\n  const navigatePersonalCenter = () => {\r\n    let item = {\r\n      \"defaultAvatar\": false,\r\n      \"province\": 110000,\r\n      \"authStatus\": 0,\r\n      \"followed\": false,\r\n      \"avatarUrl\": \"http://p1.music.126.net/d95alxoqc97Xr_cPNBsBGw==/109951164615466395.jpg\",\r\n      \"accountStatus\": 0,\r\n      \"gender\": 2,\r\n      \"city\": 110101,\r\n      \"birthday\": 814427052290,\r\n      \"userId\": 261258614,\r\n      \"userType\": 0,\r\n      \"nickname\": \"威严满满的女王大人\",\r\n      \"signature\": \"一条咸鱼~\",\r\n      \"description\": \"\",\r\n      \"detailDescription\": \"\",\r\n      \"avatarImgId\": 109951164615466400,\r\n      \"backgroundImgId\": 109951164687067890,\r\n      \"backgroundUrl\": \"http://p1.music.126.net/w80L88QY30ALvKym1GPyVQ==/109951164687067882.jpg\",\r\n      \"authority\": 0,\r\n      \"mutual\": false,\r\n      \"expertTags\": null,\r\n      \"experts\": null,\r\n      \"djStatus\": 0,\r\n      \"vipType\": 11,\r\n      \"remarkName\": null,\r\n      \"subscribeTime\": 1630394522117,\r\n      \"backgroundImgIdStr\": \"109951164687067882\",\r\n      \"avatarImgIdStr\": \"109951164615466395\",\r\n      \"vipRights\": null,\r\n      \"avatarImgId_str\": \"109951164615466395\",\r\n      \"avatarDetail\": null\r\n    }\r\n    props.history.push('/personal')\r\n  }\r\n\r\n  //进入MV详情页面\r\n  const navigateMVDetail = (item) => {\r\n    props.history.push('/mv/'+item.id)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={navigatePersonalCenter}>导航进入个人中心</Button>\r\n      <Carousel data={bannerData} />\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"50px 0\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">最新音乐</p>\r\n          </div>\r\n          <div style={{ flex: 1 }}>\r\n            {songsData.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={`personSongsItem is_song\r\n                                ${index == 0 && \"firstImg\"}\r\n                                ${index == 1 && \"secImg\"}\r\n                                ${index == 2 && \"thirdImg\"}\r\n                            `}\r\n                  key={item.id}\r\n                  data-song={JSON.stringify(item)}\r\n                >\r\n                  <p style={{ width: 50 }}>{index}</p>\r\n                  <img src={item.picUrl + \"?param=200y200\"} />\r\n                  <div>\r\n                    {item.name +\r\n                      \" \" +\r\n                      \"-\" +\r\n                      \" \" +\r\n                      item.song.album.artists[0].name}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <div className=\"headerTitle\">\r\n            <p className=\"headerTitleContent\">推荐歌单</p>\r\n          </div>\r\n          <div className=\"playlist_suggest\">\r\n            {perPlaylists.map((item, index) => {\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"playlistItem min30PlaylistItem is_playlist\"\r\n                  // onMouseOver={() => playlistOver(item.id, 1)}\r\n                  // onMouseOut={() => playlistOver(item.id, 2)}\r\n                  onClick={() => navigateDetail(item)}\r\n                  data-playlist={item.id}\r\n                >\r\n                  <div className=\"playlistItemContent\">\r\n                    <img\r\n                      className=\"playlistItemContentImg\"\r\n                      src={item.picUrl ? item.picUrl + \"?param=200y200\" : ''}\r\n                    />\r\n                    <div className=\"playlistItemContentImgCon\">\r\n                      <img src={PlayImg} />\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"playlistItemDes\">{item.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">视频标签列表</p>\r\n      </div>\r\n      <div\r\n        className={`videoGroupList\r\n                    ${isSpreadGroupList ? \"autoHeight\" : \"fixedHeight\"}\r\n                    `}\r\n      >\r\n        {videoGroupList.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={item.id}\r\n              className={`\r\n                                    videoGroupListItem \r\n                                    ${item.id == selGroupID\r\n                  ? \"videoGroupListItemActive\"\r\n                  : null\r\n                }\r\n                                `}\r\n              onClick={() => selectVideoGroup(item)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        style={{ borderBottom: \"1px solid red\", cursor: \"pointer\" }}\r\n        onClick={changeGroupListHeight}\r\n      >\r\n        <p style={{ color: \"red\", textAlign: \"right\", padding: \"0 20px\" }}>\r\n          展开\r\n        </p>\r\n      </div> */}\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContent.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem is_mv\"\r\n              data-mv={item.id}\r\n              onClick={() => navigateMVDetail(item)}\r\n            // onMouseOver={() => playlistOver(item.id, 1)}\r\n            // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl ? item.picUrl + \"?param=200y200\" : ''}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">独家放送列表</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {priContentList.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min30PlaylistItem is_mv\"\r\n              data-mv={item.id}\r\n              onClick={() => navigateMVDetail(item)}\r\n            // onMouseOver={() => playlistOver(item.id, 1)}\r\n            // onMouseOut={() => playlistOver(item.id, 2)}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl ? item.picUrl + \"?param=200y200\" : ''}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"headerTitle\">\r\n        <p className=\"headerTitleContent\">推荐MV</p>\r\n      </div>\r\n      <div className=\"playlist\">\r\n        {perMV.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"playlistItem min20PlaylistItem is_mv\"\r\n              onClick={() => navigateMVDetail(item)}\r\n            // onMouseOver={() => playlistOver(item.id, 1)}\r\n            // onMouseOut={() => playlistOver(item.id, 2)}\r\n              data-mv={item.id}\r\n            >\r\n              <div className=\"playlistItemContent\">\r\n                <img\r\n                  className=\"playlistItemContentImg\"\r\n                  src={item.picUrl ? item.picUrl + \"?param=200y200\" : ''}\r\n                />\r\n                <div className=\"playlistItemContentImgCon\">\r\n                  <img src={PlayImg} />\r\n                </div>\r\n              </div>\r\n              <p className=\"playlistItemDes\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PersonalSuggest)","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Test\\Test.js",["958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router';\r\nimport { Cookies } from \"../../Utils\";\r\nimport \"./Test.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PlayNoActivePng from \"@/images/music/play-no-active.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport GenderMail from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport AddWhite from \"@/images/Playlist/addWhite.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { exchangeTime, exchangeDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nfunction Test(props) {\r\n  //用户id, 创建时间信息\r\n  const [account, setAccount] = useState({});\r\n  //用户详细信息\r\n  const [profile, setProfile] = useState({});\r\n  //用户等级信息\r\n  const [userLV, setUserLV] = useState({});\r\n  //用户各种收藏信息\r\n  const [userSubs, setUserSubs] = useState({});\r\n  //用户关注列表总数\r\n  const [userFollowsCount, setUserFollowsCount] = useState(0);\r\n  //用户关注列表数据\r\n  const [userFollowsData, setUserFollowsData] = useState([]);\r\n  //用户粉丝列表总数\r\n  const [userFollowedsCount, setUserFollowedsCount] = useState(0);\r\n  //用户粉丝列表数据\r\n  const [userFollowedsData, setUserFollowedsData] = useState([]);\r\n  //用户动态列表总数\r\n  const [userEventCount, setUserEventCount] = useState(0);\r\n  //用户动态列表数\r\n  const [userEvents, setUserEvents] = useState([]);\r\n  //用户创建的歌单\r\n  const [userCreatePlaylists, setUserCreatePlaylists] = useState([]);\r\n  //用户收藏的歌单\r\n  const [userSubPlaylists, setUserSubPlaylists] = useState([]);\r\n\r\n  //获取用户账户信息\r\n  const getUserAccount = async () => {\r\n    let data = await HTTPUtils.user_account();\r\n    setAccount(data.account);\r\n    setProfile(data.profile);\r\n  };\r\n  //获取用户等级\r\n  const getUserLV = async () => {\r\n    let data = await HTTPUtils.user_level();\r\n    setUserLV(data.data);\r\n  };\r\n  //获取用户信息, 歌单, 收藏, mv, dj数量\r\n  const getUserSubcount = async () => {\r\n    let data = await HTTPUtils.user_subcount();\r\n    setUserSubs(data);\r\n  };\r\n  //获取用户关注列表\r\n  const getUserFollows = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_follows(params);\r\n    setUserFollowsCount(data.follow?.length || 0);\r\n    setUserFollowsData(data.follow);\r\n  };\r\n  //获取用户粉丝列表\r\n  const getUserFolloweds = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_followeds(params);\r\n    setUserFollowedsCount(data.size);\r\n    setUserFollowedsData(data.followeds);\r\n  };\r\n  //获取用户动态列表\r\n  const getUserEvent = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_event(params);\r\n    setUserEventCount(data.size);\r\n  };\r\n  //获取用户歌单\r\n  const getUserPlaylists = async () => {\r\n    if (!profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_playlist(params);\r\n    let createPlaylists = data.playlist.filter(\r\n      (item) => item.subscribed == false\r\n    );\r\n    let subPlaylists = data.playlist.filter((item) => item.subscribed == true);\r\n    setUserCreatePlaylists(createPlaylists);\r\n    setUserSubPlaylists(subPlaylists);\r\n  };\r\n  //上传图片\r\n  const headerPictureChange = async (props) => {\r\n    console.log('图片')\r\n    console.log(props)\r\n    let file = props.target.files[0];\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n      let url = e.target.result;\r\n      let profileCopy = JSON.parse(JSON.stringify(profile));\r\n      profileCopy.avatarUrl = url;\r\n      setProfile(profileCopy)\r\n    }\r\n    fileReader.readAsDataURL(file)\r\n  }\r\n  //关注/取消关注\r\n  const followsUser = async (userId, followed) => {\r\n    let params = {\r\n      userId,\r\n    };\r\n    params.t = followed ? 0 : 1;\r\n    let data = await HTTPUtils.follow(params);\r\n  };\r\n  //事件--进入歌单详情\r\n  const navigateDetail = (item) => {\r\n    props.history.push('/playlist/'+item.id)\r\n  }\r\n  //事件--进入个人中心\r\n  const navigatePersonalCenter = (item) => {\r\n    console.log(item)\r\n    props.history.push('/personal/'+item.userId)\r\n  }\r\n  //粉丝列表/关注列表item\r\n  const FocusListItem = ({ data }) => {\r\n    return (\r\n      <div className=\"focus-list-item\" onClick={() => navigatePersonalCenter(data)}>\r\n        <div className=\"focus-list-item-image-con\">\r\n          <img\r\n            src={data.avatarUrl + \"?param=120y120\"}\r\n            alt=\"http://p2.music.126.net/vkAMXteRw5GHV0VNFoNxrA==/109951164751196732.jpg?param=120y120\"\r\n            className=\"focus-list-item-image\"\r\n          />\r\n        </div>\r\n        <div className=\"focus-list-item-detail\">\r\n          <ul className=\"focus-list-name-gender\">\r\n            <li>{data.nickname}</li>\r\n            <li>\r\n              <img\r\n                src={data.gender == \"0\" ? GenderFemale : GenderMail}\r\n                style={{\r\n                  width: 30,\r\n                  height: 30,\r\n                  objectFit: \"cover\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <ul className=\"focus-list-all-count\">\r\n            <li>动态 {data.eventCount}</li>\r\n            <li>关注 {data.follows}</li>\r\n            <li>粉丝 {data.followeds}</li>\r\n          </ul>\r\n          <p className=\"focus-list-desc\">{data.signature}</p>\r\n        </div>\r\n        <div className=\"focus-list-item-btn\">\r\n          <div className=\"btn-container\">\r\n            <button\r\n              className=\"btn-define\"\r\n              onClick={() => followsUser(data.userId, data.followed)}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  height: \"100%\",\r\n                  lineHeight: \"40px\",\r\n                }}\r\n              >\r\n                <span style={{ float: \"left\" }}>\r\n                  <img\r\n                    src={AddWhite}\r\n                    style={{\r\n                      width: 30,\r\n                      height: 30,\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span style={{ float: \"left\" }}>\r\n                  {data.followed ? \"已关注\" : \"关注\"}\r\n                </span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //歌单列表item\r\n  const PlaylistItem = ({ data }) => {\r\n    return (\r\n      <div className=\"my-create-playlist-item\" onClick={() => navigateDetail(data)}>\r\n        <div>\r\n          <div className=\"my-create-playlist-item-main\">\r\n            <img\r\n              src={data.coverImgUrl + \"?param=250y250\"}\r\n              alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=250y250\"\r\n              className=\"item-main-image\"\r\n            />\r\n            <ul className=\"item-main-desc-row\">\r\n              <li className=\"item-main-desc-count\">{data.playCount}</li>\r\n              <li className=\"item-main-desc-play\">\r\n                <img\r\n                  src={PlayNoActivePng}\r\n                  style={{\r\n                    width: 15,\r\n                    height: 15,\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <p className=\"my-create-playlist-item-name\">{data.name}</p>\r\n      </div>\r\n    );\r\n  };\r\n  //有了用户信息后, 获取用户的动态, 关注, 粉丝\r\n  useEffect(async () => {\r\n    await getUserEvent();\r\n    await getUserFollows();\r\n    await getUserFolloweds();\r\n    await getUserPlaylists();\r\n  }, [profile]);\r\n  useEffect(async () => {\r\n    await getUserAccount();\r\n    await getUserLV();\r\n    await getUserSubcount();\r\n  }, []);\r\n  return (\r\n    <div className=\"personal-center\">\r\n      <div className=\"personal-center-header\">\r\n        <div className=\"header-head-picture\">\r\n          <img\r\n            src={profile.avatarUrl}\r\n            // src={profile.avatarUrl + \"?param=180y180\"}\r\n            alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=180y180\"\r\n            className=\"head-picture-img\"\r\n          />\r\n          <div className='header-head-hover'>\r\n            <input type='file' onChange={headerPictureChange}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-detail-desc\">\r\n          <div className=\"header-desc-name-lv\">\r\n            <span className=\"desc-name\">{profile.nickname}</span>\r\n            <span className=\"desc-lv\">LV.{userLV.level}</span>\r\n            <span className=\"desc-edit\">编辑个人资料</span>\r\n          </div>\r\n          <ul className=\"header-desc-all-count\">\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userEventCount}</p>\r\n              <p className=\"all-count-item-cat\">动态</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowsCount}</p>\r\n              <p className=\"all-count-item-cat\">关注</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowedsCount}</p>\r\n              <p className=\"all-count-item-cat\">粉丝</p>\r\n            </li>\r\n          </ul>\r\n          <p className=\"header-desc-region\">所在地区: 河北石家庄市</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"listen-rank\">\r\n        <ul className=\"listen-rank-header\">\r\n          <li className=\"listen-rank-header-item\">\r\n            <span className=\"fontsize20\">听歌排行</span>\r\n            <span style={{ marginLeft: 10 }}>累计听歌20首</span>\r\n          </li>\r\n          <li className=\"listen-rank-header-item header-right-item\">\r\n            <span\r\n              className=\"right-item-active\"\r\n              style={{\r\n                marginRight: 10,\r\n                padding: \"0 10px\",\r\n                borderRight: \"1px solid #aaa\",\r\n              }}\r\n            >\r\n              最近一周\r\n            </span>\r\n            <span className=\"right-item-active\">所有时间</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"listen-rank-list\">\r\n          {[1, 2, 3, 4, 5].map((item, index) => {\r\n            return (\r\n              <ul className=\"listen-rank-list-row\" key={index}>\r\n                <li className=\"listen-rank-list-item flex3\">\r\n                  <ul>\r\n                    <li className=\"listen-rank-list-item\">\r\n                      {index < 10 ? \"0\" + (index + 1) : index}\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">\r\n                      <img\r\n                        src={PlayNoActivePng}\r\n                        style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n                      />\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10 boldTxt\">\r\n                      不只是想你\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">梦然</li>\r\n                  </ul>\r\n                </li>\r\n                <li\r\n                  className=\"listen-rank-list-item flex1\"\r\n                  style={{ borderRadius: 5, position: \"relative\" }}\r\n                >\r\n                  <div className=\"bgblue\" style={{ height: \"100%\" }}></div>\r\n                  <span className=\"list-item-count\">6次</span>\r\n                </li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n        <p className=\"list-rank-look-all\">查看全部>></p>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我创建的歌单\r\n            {userSubs.createdPlaylistCount && userSubs.createdPlaylistCount > 0\r\n              ? `(${userSubs.createdPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userCreatePlaylists.length > 0 &&\r\n              userCreatePlaylists.map((item, index) => {\r\n                return (\r\n                  <PlaylistItem key={item.id} data={item}/>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我收藏的歌单\r\n            {userSubs.subPlaylistCount && userSubs.subPlaylistCount > 0\r\n              ? `(${userSubs.subPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userSubPlaylists.length > 0 &&\r\n              userSubPlaylists.map((item, index) => {\r\n                return <PlaylistItem key={item.id} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">关注列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowsData &&\r\n              userFollowsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">粉丝列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowedsData &&\r\n              userFollowedsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Test)","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\Playlist.js",["988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004"],"import React, { useState, useEffect } from \"react\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport \"./Playlist.less\";\r\nimport VipImg from \"../../images/Playlist/vip.png\"; //歌单item---vip图片\r\nimport HeaderImg from \"../../images/Playlist/header.png\"; //歌单item---头像图片\r\nimport PlayImg from \"../../images/Playlist/play.png\"; //歌单item---播放图片\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\"; //歌单item---hover时现实的播放图片\r\nimport LanguageImg from \"../../images/Playlist/language.png\"; //歌单标签下拉列表---语种图片\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction Playlist(props) {\r\n  const [allCatList, setAllCatList] = useState([]); //歌单分类\r\n  const [hotCatList, setHotCatList] = useState([]); //热门歌单分类\r\n  const [allPlaylist, setAllPlayList] = useState([]); //歌单(网友精选碟)\r\n  const [hgquaPlaylist, setHgquaPlaylist] = useState([]); //精品歌单\r\n\r\n  const [catlistHotActiveItem, setCatlistHotActiveItem] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n  }); //当前热门标签item.id---用于active class\r\n  const [expandIndex, setExpandIndex] = useState(-1); //歌单列表item expand\r\n  /**\r\n   * 歌单标签下拉列表数据\r\n   */\r\n  const [showDropCatlist, setShowDropCatlist] = useState(false); //是否显示歌单标签下拉列表\r\n  const [catlistActiveItem, setCatlistActiveItem] = useState({\r\n    id: 0,\r\n    name: \"全部\",\r\n  }); //当前点击item.id--用于active class\r\n\r\n  const playlistDetail = (item) => {\r\n    console.log(\"查看歌单详情\");\r\n    console.log(item)\r\n    console.log(props)\r\n    props.history.push('/playlist/'+item.id)\r\n  };\r\n  const playTheList = (e) => {\r\n    //阻止冒泡\r\n    e.stopPropagation();\r\n    console.log(\"播放歌单\");\r\n  };\r\n\r\n  /**\r\n   * 获取歌单标签列表\r\n   */\r\n  const getPlaylistCatlist = async () => {\r\n    let data = await HTTPUtils.playlist_catlist();\r\n    let allData = [];\r\n    let cats = data.categories;\r\n    let subs = data.sub;\r\n    //为每个子标签加个id, 用于active class\r\n    subs.map((item, index) => {\r\n      item.id = index + 1;\r\n    });\r\n    //重组数据, 重组后结构为[{cat: {id, name}, sub: Array}]\r\n    Object.entries(cats).map((item, index) => {\r\n      let sinData = {};\r\n      let cat = {};\r\n      cat.id = item[0];\r\n      cat.val = item[1];\r\n      let newSub = subs.filter((s) => s.category == cat.id);\r\n      sinData.cat = cat;\r\n      sinData.sub = newSub;\r\n      allData.push(sinData);\r\n    });\r\n    //更新歌单列表\r\n    setAllCatList(allData);\r\n  };\r\n  /**\r\n   * 获取歌单热门标签列表\r\n   */\r\n  const getPlaylistHot = async () => {\r\n    let data = await HTTPUtils.playlist_hot();\r\n    setHotCatList(data.tags);\r\n  };\r\n  /**\r\n   * 获取对应标签下, 歌单列表; 默认全部\r\n   * @param {obj: Object} obj :标签信息\r\n   */\r\n  const getAllPlaylist = async (obj) => {\r\n    let data = await HTTPUtils.top_playlist(obj);\r\n    console.log(\"歌单数据\");\r\n    console.log(data);\r\n    setAllPlayList(data.playlists);\r\n  };\r\n\r\n  const getHGPlaylsit = async (item) => {\r\n    let obj = {\r\n      limit: 1,\r\n    };\r\n    if (item) {\r\n      obj.cat = item.name;\r\n    }\r\n    let data = await HTTPUtils.top_playlist_highquality(obj);\r\n    console.log(data);\r\n    setHgquaPlaylist(data.playlists);\r\n  };\r\n\r\n  /**\r\n   * 页面加载后调用, 只执行一次;\r\n   */\r\n  useEffect(async () => {\r\n    await getPlaylistCatlist();\r\n    await getPlaylistHot();\r\n    await getAllPlaylist();\r\n    await getHGPlaylsit();\r\n  }, []);\r\n\r\n  /**\r\n   * 初始化热门标签列表, 选中对应标签, 获取对应标签歌单列表\r\n   * @param {item: Object} item : 点击的item\r\n   */\r\n  const selectDropItem = async (item) => {\r\n    setCatlistActiveItem(item);\r\n    setCatlistHotActiveItem({ id: 0, name: \"\" });\r\n    let obj = {\r\n      cat: item.name,\r\n    };\r\n    // showAllCatlist();\r\n    await getAllPlaylist(obj);\r\n  };\r\n  /**\r\n   * 初始化所有标签列表, 选中对应热门标签, 获取对应标签歌单列表\r\n   * @param {item: Object} item: 热门标签active的item\r\n   */\r\n  const selectHotItem = async (item) => {\r\n    setCatlistHotActiveItem(item);\r\n    setCatlistActiveItem({ id: 0, name: \"全部\" });\r\n    let obj = {\r\n      cat: item.name,\r\n    };\r\n    await getAllPlaylist(obj);\r\n  };\r\n  /**\r\n   * 开启/关闭所有标签列表dropdown\r\n   */\r\n  const showAllCatlist = () => {\r\n    setShowDropCatlist(!showDropCatlist);\r\n  };\r\n\r\n  /**\r\n   * 当该item处于onmouseover事件中, 改变该item和当前行其他item的宽度, 通过expandindex计算\r\n   * @param {index: Number} index : 歌单列表item的index\r\n   */\r\n  const expandOver = (index) => {\r\n    setExpandIndex(index);\r\n  };\r\n  /**\r\n   * 当该item处于onmouseout事件中, 重置改变该item和当前行其他item的宽度, 设置expandindex为-1即可\r\n   * @param {index: Number} index : 歌单列表item的index\r\n   */\r\n  const expandOut = () => {\r\n    setExpandIndex(-1);\r\n  };\r\n  return (\r\n    <div className=\"allPl\">\r\n      <div className=\"allPlHeader\" style={{ position: \"relative\" }}>\r\n        <img\r\n          src={hgquaPlaylist.length > 0 ? hgquaPlaylist[0].coverImgUrl : \"\"}\r\n          className=\"allPlHeaderBackImg\"\r\n        />\r\n        <div className=\"allPlHeaderFront\">\r\n          <div className=\"allPlHeaderFrontLeft\">\r\n            <img\r\n              className=\"allPlHeaderFrontLeftImg\"\r\n              src={hgquaPlaylist.length > 0 ? hgquaPlaylist[0].coverImgUrl : \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"allPlHeaderFrontRight\">\r\n            <span className=\"allPlHeaderFrontRightTop\">精品歌单</span>\r\n            <p className=\"allPlHeaderFrontRightName\">\r\n              {hgquaPlaylist.length > 0 ? hgquaPlaylist[0].name : \"\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"allPlTags\">\r\n        <div className=\"allPlTagsSelRow\">\r\n          <div className=\"allPlTagsSel\" onClick={showAllCatlist}>\r\n            <span>{catlistActiveItem.name}</span>\r\n          </div>\r\n          {showDropCatlist ? (\r\n            <div className=\"allPlTagsSelDrop\">\r\n              <div className=\"allPlTagsSelDropHeader\">\r\n                <span\r\n                  className={`${\r\n                    catlistActiveItem.id == 0\r\n                      ? \"allPlTagsSelDropRowRightItemActive\"\r\n                      : \"\"\r\n                  }  allPlTagsSelDropHeaderTitle`}\r\n                  onClick={() => selectDropItem({ id: 0, name: \"全部\" })}\r\n                >\r\n                  全部歌单\r\n                </span>\r\n              </div>\r\n              {allCatList.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"allPlTagsSelDropRow\">\r\n                    <div\r\n                      key={index + \"_\" + item.cat.id}\r\n                      className=\"allPlTagsSelDropRowLeft\"\r\n                    >\r\n                      <img\r\n                        src={LanguageImg}\r\n                        style={{ width: 30, height: 30 }}\r\n                      />\r\n                      <span>{item.cat.val} </span>\r\n                    </div>\r\n                    <div className=\"allPlTagsSelDropRowRight\">\r\n                      {item.sub.map((zItem, zIndex) => {\r\n                        return (\r\n                          <p\r\n                            key={zItem.id}\r\n                            className={`${\r\n                              catlistActiveItem.id == zItem.id\r\n                                ? \"allPlTagsSelDropRowRightItemActive\"\r\n                                : \"\"\r\n                            } allPlTagsSelDropRowRightItem`}\r\n                            onClick={() => selectDropItem(zItem)}\r\n                          >\r\n                            {zItem.name}\r\n                          </p>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <ul className=\"allPlTagsHot\">\r\n          {hotCatList.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                className={`${\r\n                  catlistHotActiveItem.id == item.id\r\n                    ? \"allPlTagsHotItemActive\"\r\n                    : \"\"\r\n                } allPlTagsHotItem`}\r\n                onClick={() => selectHotItem(item.playlistTag)}\r\n              >\r\n                {item.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div style={{ padding: 20, overflow: 'auto' }}>\r\n        {allPlaylist.map((item, index) => {\r\n          //Math.floor(expandIndex/5) == Math.floor(index/5)---是否是当前行, 因为默认一行有5个元素\r\n          //expandIndex == index : 是否是当前行, hover元素, 如果是当前元素, 加宽类expand; 如果不是, 缩小宽度类noexpand\r\n          return (\r\n            <div\r\n              key={item.id + \"-\" + index}\r\n              className={`${\r\n                Math.floor(expandIndex / 5) == Math.floor(index / 5)\r\n                  ? expandIndex == index\r\n                    ? \"expand\"\r\n                    : \"noexpand\"\r\n                  : \"\"\r\n              } allPlItem is_playlist`}\r\n              data-playlist={item.id}\r\n            >\r\n              <div\r\n                className=\"allPlItemImgContainer\"\r\n                onClick={() => playlistDetail(item)}\r\n                onMouseOver={() => expandOver(index)}\r\n                onMouseOut={expandOut}\r\n              >\r\n                <img\r\n                  src={item.coverImgUrl + \"?param=280y280\"}\r\n                  className=\"allPlItemImgConMain\"\r\n                />\r\n                <div className=\"allPlItemImgContainerTL\">\r\n                  <img src={PlayImg} className=\"deImg\" />\r\n                  <span>{item.playCount}</span>\r\n                </div>\r\n                <div className=\"allPlItemImgContainerLB\">\r\n                  <img src={HeaderImg} className=\"deImg\" />\r\n                  <span>{item.creator.nickname}</span>\r\n                  <img src={VipImg} className=\"deImg\" />\r\n                </div>\r\n                <div\r\n                  className=\"allPlItemImgContainerRB\"\r\n                  onClick={(e) => playTheList(e)}\r\n                >\r\n                  <img src={PlayHoverImg} className=\"rbImg\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"allPlItemDesc\">{item.name}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Playlist)","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\IconListItem\\IconListItem.js",["1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\Carousel\\Carousel.js",["1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047"],"import React, { useState, useEffect, useRef, } from 'react';\r\nimport './Carousel.less';\r\nimport { Input, message, Button, } from 'antd';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';;\r\nlet timer = ''\r\nexport default function Carousel(props) {\r\n    const [index, setIndex] = useState('0');//用于控制class\r\n    const [left, setLeft] = useState(false)//和index配合使用, 控制class\r\n    const [isHover, setIsHover] = useState(false);//鼠标在组件上, 那么组件就不进行左移/右移\r\n    const [dataStartIndex, setDataStartIndex] = useState(0);//传过来数据, 截取数据的开始index, 第一次进来, 默认为0\r\n    const [bannerData, setBannerData] = useState([])//banner总数据, \r\n    const [activeBannerData, setActiveBannerData] = useState([]);//当前显示的banner数据\r\n    //点击组件的左侧, banner向左滚动\r\n    const leftClickDiv = () => {\r\n        //向左滚动, 如果当前位置不是bannerData的最后项, 那么 + 1 ; 如果是第一项, 那么需要设为bannerData的第一项\r\n\r\n        let bannerDataLength = bannerData.length;\r\n        if (dataStartIndex > 0 && dataStartIndex <= bannerDataLength - 1) {\r\n            setDataStartIndex(dataStartIndex - 1)\r\n        } else {\r\n            setDataStartIndex(bannerDataLength - 1)\r\n        }\r\n        // setDataStartIndex(dataStartIndex + 1)\r\n        let dex = parseInt(index);\r\n        //123分别对应第一次进入页面的banner元素div顺序\r\n        //index=1 左边 312 右边 123\r\n        //index=2 左边 231 右边 312\r\n        //index=3 左边 123 右边 231\r\n        //下面是动画变化逻辑\r\n        //动画 left一直为true, 说明一直left click, 或者 left一直为false, 说明一直right click 那么index正常加减\r\n        //重要的是left从true变为false, 或者left从false变为true\r\n        //例如index=1, left从true变为false, 此时 页面是需要从312变回123, 对应右边的index=1的情况, 所以此时不需要对index进行加减\r\n        //其他的这种情况, 也是同要的处理方式\r\n        if(left) {\r\n            if (dex < 3) {\r\n                dex += 1;\r\n            } else {\r\n                dex = 1;\r\n            }\r\n        }else if(!left && dex == '0') {\r\n            //第一次进入页面, 此时index还处于0, 且left为true的时候, 此时需要将index设为3\r\n            dex = 1\r\n        }\r\n        //其他情况, 从left为true变为false的时候, 不需要进行改变index的操作, 因为动画animation是如下对应关系\r\n        setIndex(dex.toString())\r\n        setLeft(true)\r\n    }\r\n    //点击组件的右侧, banner向右滚动\r\n    const rightClickDiv = () => {\r\n        //向右滚动, 如果当前位置不是bannerData的第一项, 那么 - 1 ; 如果是第一项, 那么需要设为bannerData的最后一项\r\n\r\n        let bannerDataLength = bannerData.length;\r\n        if (dataStartIndex >= 0 && dataStartIndex < bannerDataLength - 1) {\r\n            setDataStartIndex(dataStartIndex + 1)\r\n        } else {\r\n            setDataStartIndex(0)\r\n        }\r\n        // if(dataStartIndex - 1 < 0) {\r\n        //     setDataStartIndex(bannerData.length-1);\r\n        // }else {\r\n        //     setDataStartIndex(dataStartIndex-1)\r\n        // }\r\n        let dex = parseInt(index);\r\n        //123分别对应第一次进入页面的banner元素div顺序\r\n        //index=1 左边 312 右边 123\r\n        //index=2 左边 231 右边 312\r\n        //index=3 左边 123 右边 231\r\n        //下面是动画变化逻辑\r\n        //动画 left一直为true, 说明一直left click, 或者 left一直为false, 说明一直right click 那么index正常加减\r\n        //重要的是left从true变为false, 或者left从false变为true\r\n        //例如index=1, left从true变为false, 此时 页面是需要从312变回123, 对应右边的index=1的情况, 所以此时不需要对index进行加减\r\n        //其他的这种情况, 也是同要的处理方式\r\n        if(!left) {\r\n            //每次\r\n            if (dex > 1) {\r\n                dex -= 1;\r\n            } else {\r\n                dex = 3;\r\n            }\r\n        }else if(left) {\r\n            //第一次进入页面, 此时index还处于0, 且left为true的时候, 此时需要将index设为3\r\n            if(dex == 0) {\r\n                dex = 3\r\n            }\r\n        }\r\n        //其他情况, 从left为true变为false的时候, 不需要进行改变index的操作,\r\n        setIndex(dex.toString())\r\n        setLeft(false)\r\n    }\r\n    //index会变, 如果当前没有处于hover状态, 那么继续原先的timer\r\n    useEffect(() => {\r\n        if(bannerData.length > 0) {\r\n            //加上对bannerData的判断, 是为了防止第一个进入该页面, 但数据还没有传过来的时候, 会对数据筛选产生影响\r\n            if (!isHover) {\r\n                timer = setTimeout(rightClickDiv, 3000);\r\n            }\r\n            return () => {\r\n                timer && clearTimeout(timer)\r\n            }\r\n        }\r\n    }, [index, bannerData, left])\r\n    //清除定时器\r\n    const clearMyTimer = () => {\r\n        setIsHover(true)\r\n        clearTimeout(timer)\r\n    }\r\n    //创建定时器\r\n    const createMyTimer = () => {\r\n        setIsHover(false)\r\n        timer = setTimeout(rightClickDiv, 3000);\r\n    }\r\n\r\n    //截取数组数据 例如arr = [1, 2, 3, 4, 5, 6], start = 4; num = 3; 那么type为1: 返回数据为[5, 6, 1], type: 2 返回数据 [1, 5, 6];\r\n    const sliceArr = (arr, start = 0, type = 1, num = 3) => {\r\n        if (start >= 0 && num >= 0) {\r\n            start %= arr.length;\r\n            //differStartToEndCount: 获取startArr的长度,\r\n            let differStartToEndCount = arr.length - start;\r\n            if (arr.length > 0) {\r\n                //开始位置到数组结尾数据放入startArr\r\n                let startArr = [];\r\n                if (start + num <= arr.length - 1) {\r\n                    startArr = arr.slice(start, start + num);\r\n                } else {\r\n                    startArr = arr.slice(start)\r\n                }\r\n                //如果num<arr.length; name loopArrCount为0;\r\n                let loopArrCount = Math.floor((num - differStartToEndCount) / arr.length);//循环次数\r\n                let loopArr = [];\r\n                let i = 1;\r\n                //循环次数内 添加arr到loopArr\r\n                while (i <= loopArrCount) {\r\n                    loopArr = loopArr.concat(arr)\r\n                    i++\r\n                }\r\n                let loopEndSurplusArr = []\r\n                if (differStartToEndCount < num) {\r\n                    let lastCount = (num - differStartToEndCount) % arr.length;//循环后剩余的次数\r\n                    //循环剩余的数据放入数组loopEndSurplusArr\r\n                    loopEndSurplusArr = arr.slice(0, lastCount);\r\n                }\r\n                let res = startArr.concat(loopArr);\r\n                res = type == 1 ? res.concat(loopEndSurplusArr) : loopEndSurplusArr.concat(res)\r\n                return res\r\n            }\r\n            else {\r\n                return []\r\n            }\r\n        }\r\n    }\r\n    \r\n    //变换数据顺序\r\n    const sortDataByStartIndex = (start, arr) => {\r\n        if(arr instanceof Array) {\r\n            let loopLength = (arr instanceof Array) && arr.length;//数组长度\r\n            let loopCount = Math.ceil(start / loopLength);\r\n            let keyIndex = (loopLength * loopCount - start);\r\n            let startToEndArr = arr.slice(keyIndex);\r\n            let zeroToStartArr = arr.slice(0, keyIndex);\r\n            return startToEndArr.concat(zeroToStartArr);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ((bannerData instanceof Array) && bannerData.length >= 3) {\r\n            let newBannerData = JSON.parse(JSON.stringify(bannerData));\r\n            // let newActiveBannerData = newBannerData.slice(dataStartIndex, dataStartIndex + 4)\r\n            //截取数据\r\n            let newActiveBannerData = sliceArr(newBannerData, dataStartIndex);\r\n            //然后变化数据顺序, 和view层面顺序相符\r\n            let sortBannerData = sortDataByStartIndex(dataStartIndex, newActiveBannerData)\r\n            setActiveBannerData(sortBannerData)\r\n        }\r\n    }, [bannerData, dataStartIndex])\r\n\r\n    //依赖传过来的banner 数据\r\n    useEffect(() => {\r\n        setBannerData(props.data)\r\n    }, [props.data])\r\n\r\n    return (\r\n        <div style={{position: 'relative', height: '400px'}} onMouseOver={clearMyTimer} onMouseOut={createMyTimer}>\r\n            {/* <div className='aniDiv' style={{width: '400px', height: '200px', backgroundColor: '#9FEAF9', margin: '10px', position: 'absolute', right: 0, top: 0, boxShadow: '0 0 10px gray'}}>\r\n\r\n            </div>\r\n            <div className='aniDiv' style={{width: '400px', height: '200px', backgroundColor: '#9FEAF9', margin: '10px', position: 'absolute', left: 0, top: 0, boxShadow: '0 0 10px gray'}}>\r\n\r\n            </div> */}\r\n\r\n            {/* <div className={ `allT ${index == '1' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : `${index == '2' ? `${left ? 'ani2' : 'ani2Reverse'}` : `${index == '3' ? `${left ? 'anima3' : 'anima3Reverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 ? props.data[0].imageUrl : ''} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div className={ `allT1 ${index == '1' ? `${left ? 'ani2' : 'ani2Reverse'}` : `${index == '2' ? `${left ? 'anima3' : 'anima3Reverse'}` : `${index == '3' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 ? props.data[1].imageUrl : ''} style={{width: '100%', height: '100%'}}/>\r\n            </div>\r\n            <div className={ `allT2 ${index == '1' ? `${left ? 'anima3' : 'anima3Reverse'}` : `${index == '2' ? `${left ? 'aniDiv' : 'aniDivReverse'}` : `${index == '3' ? `${left ? 'ani2' : 'ani2Reverse'}` : ''}`}`}`}>\r\n                <img src={props.data.length > 0 ? props.data[2].imageUrl : ''} style={{width: '100%', height: '100%'}}/>\r\n            </div> */}\r\n\r\n            <div className={`allT1 ${index == '1' ? `${!left ? 'aniDiv' : 'ani2Reverse'}` : `${index == '2' ? `${!left ? 'anima3' : 'aniDivReverse'}` : `${index == '3' ? `${!left ? 'ani2' : 'anima3Reverse'}` : ''}`}`}`}>\r\n                <img src={activeBannerData && activeBannerData.length > 0 ? activeBannerData[0].imageUrl : ''} style={{ width: '100%', height: '100%' }} />\r\n            </div>\r\n            <div className={`allT ${index == '1' ? `${!left ? 'anima3' : 'aniDivReverse'}` : `${index == '2' ? `${!left ? 'ani2' : 'anima3Reverse'}` : `${index == '3' ? `${!left ? 'aniDiv' : 'ani2Reverse'}` : ''}`}`}`}>\r\n                <img src={activeBannerData && activeBannerData.length > 0 ? activeBannerData[1].imageUrl : ''} style={{ width: '100%', height: '100%' }} />\r\n            </div>\r\n            <div className={`allT2 ${index == '1' ? `${!left ? 'ani2' : 'anima3Reverse'}` : `${index == '2' ? `${!left ? 'aniDiv' : 'ani2Reverse'}` : `${index == '3' ? `${!left ? 'anima3' : 'aniDivReverse'}` : ''}`}`}`}>\r\n                <img src={activeBannerData && activeBannerData.length > 0 ? activeBannerData[2].imageUrl : ''} style={{ width: '100%', height: '100%' }} />\r\n            </div>\r\n            <div style={{ position: 'absolute', left: 0, top: 0, width: '100%', height: '100%', zIndex: 3, opacity: 0.5, display: 'flex', flexDirection: 'row' }}>\r\n                <div style={{ flex: 1, opacity: 0.5, cursor: 'pointer' }} onClick={leftClickDiv}>\r\n\r\n                </div>\r\n                <div style={{ flex: 1, opacity: 0.5, cursor: 'pointer' }} onClick={rightClickDiv}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\AudioSlider.js",["1048","1049","1050","1051","1052","1053","1054","1055"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport BasicSlider from './BasicSlider';\r\n\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function AudioSlider(props) {\r\n\r\n  const [value, setValue] = useState('0%')\r\n  const [play, setPlay] = useState(false); //歌曲是否开始播放\r\n  const [time, setTime] = useState(\"0\"); //歌曲总时长\r\n  const [isReset, setIsReset] = useState(false); //是否重置\r\n\r\n  /**\r\n    * BasicSlider事件\r\n    */\r\n   //onChange事件\r\n   const handleBasicSliderChange = (percent) => {\r\n    console.log('basic slider change --', percent)\r\n    props.onChange(percent)\r\n  }\r\n\r\n  ////事件--处理定时进度条每隔一秒 更新一次进度条\r\n  // const handleBackWidth = () => {\r\n  //   console.log('handle back width')\r\n  //   console.log(value)\r\n  //   let back_width = value;\r\n  //   back_width = parseFloat(back_width);\r\n  //   if (back_width >= 100) {\r\n  //     //如果back_width已经到达100%,则直接reset()--造成这样情况有以下\r\n  //     //1: 直接拖动滑动条到达100%, 这样直接reset\r\n  //     setIsReset(true);\r\n  //   } else {\r\n  //     //这里150是歌曲的时间, 1/150获取每秒移动的百分比\r\n  //     let percent = ((1 / parseFloat(time)) * 100).toFixed(2);\r\n  //     percent = parseFloat(percent);\r\n  //     //与原来的百分比相加, 得到新的百分比\r\n  //     back_width = back_width + percent;\r\n  //     //如果超过100%, 清除定时器\r\n  //     if (back_width >= 100) {\r\n  //       back_width = 100;\r\n  //       setPlay(false);\r\n  //       // props.hasOwnProperty(\"onEndReached\") && props.onEndReached();\r\n  //     }\r\n  //     back_width += \"%\";\r\n  //     setValue(back_width)\r\n  //     //更新滑动条\r\n  //     // setBackWidth(back_width);\r\n  //     // setSliderRoundLeft(back_width);\r\n  //     // props.onChange(back_width)\r\n  //   }\r\n  // };\r\n  // useEffect(() => {\r\n  //   if (play) {\r\n  //     //这里要用一个单独的方法处理进度条, 不能用() => {}, 这样容易形成值backWidth不变化\r\n  //     interval_id = setInterval(handleBackWidth, 1000);\r\n  //   } else {\r\n  //     //暂停播放状态下, 清除定时器\r\n  //     interval_id && clearInterval(interval_id);\r\n  //   }\r\n  // }, [play]);\r\n  //play播放状态依赖传过来的props.play\r\n  // useEffect(() => {\r\n  //   setPlay(props.play);\r\n  // }, [props.play]);\r\n  // useEffect(() => {\r\n  //   setTime(props.duration);\r\n  //   setIsReset(true)\r\n  // }, [props.duration]);\r\n  useEffect(() => {\r\n    console.log('audio slider')\r\n    setValue(props.value)\r\n  }, [props.value])\r\n  return (\r\n    <BasicSlider value={value} onChange={handleBasicSliderChange}/>\r\n  )\r\n}","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\MusicSliderComponent.js",["1056","1057","1058","1059","1060","1061","1062"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\VolumeSlider.js",["1063"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTPUtils.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\ExchangeTime.js",["1064"],"/**\r\n * \r\n * @param {String} time : 传过来的毫秒数\r\n * @param {Number} type : undefined返回2021-05-12 07:25:21; 1返回2021-05-12\r\n * @returns 几秒前/几分钟前/几小时前/具体时间\r\n */\r\nfunction exchangeTime(time, type) {\r\n  let differTime = Date.now() - time;\r\n  let onesecTime = 1000;\r\n  let oneminTime = 60*1000;\r\n  let onehourTime = 3600000;\r\n  let onedayTime = 60*60*24*1000;\r\n  let title = ''\r\n  if(differTime<= oneminTime) {\r\n      title = Math.floor(differTime/onesecTime) + '秒前';\r\n  }else if(differTime > oneminTime && differTime<onehourTime) {\r\n      title = Math.floor(differTime/oneminTime) + '分钟前';\r\n  }else if(differTime >= onehourTime && differTime < onedayTime) {\r\n      title = Math.floor(differTime/onehourTime) + '小时前';\r\n  }else {\r\n      //具体时间\r\n      let date = new Date(time);\r\n      let year = date.getFullYear();\r\n      let month = date.getMonth() + 1;\r\n      month = month < 10 ? '0'+month : month;\r\n      let day = date.getDate();\r\n      day = day < 10 ? '0'+day : day;\r\n      let hour = date.getHours();\r\n      hour = hour < 10 ? '0'+hour : hour;\r\n      let min = date.getMinutes();\r\n      min = min < 10 ? '0'+min : min;\r\n      let sec = date.getSeconds();\r\n      sec = sec < 10 ? '0'+sec : sec;\r\n      title = !type ?  year + ' - ' + month + ' - ' + day + ' ' + hour + ' : ' + min + ' : ' +sec : year + ' - ' + month + ' - ' + day;\r\n  }\r\n  return title;\r\n}\r\n/**\r\n * 返回音乐/视频/MV时间duration\r\n * @param {Number | String} time : 例如212000毫秒数\r\n * @returns 05:36:25 || 05:36\r\n */\r\nfunction exchangeDuration(time) {\r\n    time = parseInt(time);\r\n    let dur = 212000;\r\n    time = time / 1000;\r\n    if(time < 1){\r\n        // return '小于1s';\r\n        return '00:00';\r\n    }\r\n    if(time > 24*60*60) {\r\n        // return '大于一天'\r\n        return '23:59:59'\r\n    }\r\n    let h,\r\n        m,\r\n        sec,\r\n        allMin;\r\n    allMin = Math.floor(time / 60);\r\n    sec = time - allMin*60;\r\n    //转换成整数, 因为很有可能有许多位的小数\r\n    sec = parseInt(sec)\r\n    sec = sec < 10 ? '0'+sec : sec;\r\n    h = Math.floor(time / 3600);\r\n    m = h < 1 ? Math.floor(time / 60) : (time - h*3600 - sec)/60;\r\n    m = m<10 ? '0'+m : m;\r\n    let title = '';\r\n    title = h < 1 ? m + ':' + sec : h+':'+m+':'+sec;\r\n    return title;\r\n}\r\n/**\r\n * 返回音乐/榜单/视频/MV播放量, 例如588888-->58万; 201-->201; \r\n */\r\nexport { exchangeTime, exchangeDuration };","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Playlist\\PlaylistDetail\\MyTextarea.js",["1065"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\index.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\MusicSlider\\BasicSlider.js",["1066","1067","1068","1069","1070","1071"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nlet startDistance = \"\"; //拖动开始位置\r\nlet is_moving = false; //是否开始滚动\r\nlet is_mine_ref = \"\"; //是否是本组件\r\nlet interval_id = null; //播放定时\r\n\r\nexport default function BasicSlider(props) {\r\n  const SliderRef = useRef(); //滑动条Ref\r\n  const SliderBackRef = useRef(); //已滑动条Ref\r\n  const SliderRoundBtnRef = useRef(); //圆形按钮ref\r\n  const [backWidth, setBackWidth] = useState(\"0%\"); //已滑动滚动条宽度\r\n  const [sliderRoundLeft, setSliderRoundLeft] = useState(\"0%\"); //滑动条上按钮距离左边距离\r\n  //设置滑动宽度\r\n  const setWidth = (width) => {\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    let percent = (width / slider.scrollWidth) * 100;\r\n    percent = percent.toFixed(2);\r\n    percent = parseFloat(percent);\r\n    //获取背景滑动条宽度, 数值, 半分比\r\n    let back_width = sliderBack.style.width;\r\n    //获取圆形按钮绝对定位left,\r\n    // let round_btn_position = sliderRoundBtn.style.left;\r\n    //因为back_width是百分比, 所以要转为Number\r\n    back_width = parseFloat(back_width);\r\n    //percent有可能是正值/负值, 所以需要用原来的值直接相加,\r\n    back_width += percent;\r\n    //如果相加后百分比>100; 则最大取100%\r\n    if (parseFloat(back_width) > 100) {\r\n      back_width = \"100\";\r\n    } else if (parseFloat(back_width) < 0) {\r\n      //同理, 相加后百分比<0, 则最小取0\r\n      back_width = \"0\";\r\n    }\r\n    back_width += \"%\";\r\n    //背景条/圆形拖动按钮, 百分比相同,\r\n    // console.log(\"component\", back_width);\r\n    setBackWidth(back_width);\r\n    setSliderRoundLeft(back_width);\r\n    props.onChange(back_width);\r\n  };\r\n\r\n  //props.value变化\r\n  useEffect(() => {\r\n    console.log('props value', props.value)\r\n    setBackWidth(props.value);\r\n    setSliderRoundLeft(props.value);\r\n  }, [props.value])\r\n\r\n  //只加载一次\r\n  useEffect(() => {\r\n    //取得相应ref所对应的组件\r\n    let slider = SliderRef.current;\r\n    let sliderBack = SliderBackRef.current;\r\n    let sliderRoundBtn = SliderRoundBtnRef.current;\r\n    sliderRoundBtn.addEventListener(\"click\", (e) => {\r\n      //阻止冒泡\r\n      e.stopPropagation() || (e.cancelBubble = true);\r\n    });\r\n    //鼠标在圆形按钮上开始拖动\r\n    sliderRoundBtn.addEventListener(\"mousedown\", (e) => {\r\n      clearTimeout(interval_id);\r\n      //记录拖动开始位置, 初始化所需的属性\r\n      startDistance = e.clientX;\r\n      //是否开始移动\r\n      is_moving = true;\r\n      //是否是拖动的组件,(一个页面有可能有多个MusicSliderComponent)\r\n      is_mine_ref = SliderRef;\r\n    });\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        interval_id && clearTimeout(interval_id);\r\n        //计算出移动距离, 并更新startDistance,\r\n        //便于计算\r\n        //当然也可以不用更新startDistance, 那么setWidth中back_width就不用与percent相加了\r\n        let moveDistance = e.clientX - startDistance;\r\n        startDistance = e.clientX;\r\n        setWidth(moveDistance);\r\n      }\r\n    });\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      //放开鼠标, 重置拖动过程中所需的属性\r\n      if (is_moving && is_mine_ref == SliderRef) {\r\n        is_moving = false;\r\n        is_mine_ref = null;\r\n        startDistance = 0;\r\n      }\r\n    });\r\n    document.addEventListener(\"dragstart\", (e) => {\r\n      //为了配合dragend事件\r\n      is_moving = true;\r\n      is_mine_ref = SliderRef;\r\n      document.onselectstart = function () {\r\n        return false;\r\n      };\r\n    });\r\n    document.addEventListener(\"dragend\", (e) => {\r\n      //不能只用moveup事件, 因为鼠标在拖动过程中, 不会触发mouseup事件, , 但是滑动条还是能滑动, 这个时候会触发dragend事件, 在这里可以处理一下\r\n      if (is_moving && SliderRef == is_mine_ref) {\r\n        //获取移动距离\r\n        let moveX = e.clientX - startDistance;\r\n        //将最终距离赋值给startDistance\r\n        startDistance = e.clientX;\r\n        setWidth(moveX);\r\n        is_moving = false;\r\n        is_mine_ref = \"\";\r\n        document.onselectstart = function () {\r\n          return true;\r\n        };\r\n      }\r\n    });\r\n    slider.addEventListener(\"click\", (e) => {\r\n      //点击滑动条, 改变已滑动条宽度\r\n      let slider_back_width = e.offsetX;\r\n      let slider_width = slider.scrollWidth;\r\n      let percent = (slider_back_width / slider_width) * 100;\r\n      percent = percent.toFixed(2);\r\n      percent = parseFloat(percent);\r\n      //可以作为值, 传回组件onchange事件,\r\n      if (percent > 100) {\r\n        percent = \"100\";\r\n      } else if (percent < 0) {\r\n        percent = \"0\";\r\n      }\r\n      let percentStr = percent + \"%\";\r\n      //实际情况应该是: 先暂停播放, 获取加载资源, 加载完毕, 继续播放; 如果处于加载状态下, 暂停播放\r\n      // interval_id && clearInterval(interval_id)\r\n      setBackWidth(percentStr);\r\n      setSliderRoundLeft(percentStr);\r\n      props.onChange(percentStr);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      id=\"slider\"\r\n      ref={SliderRef}\r\n      style={{\r\n        width: \"100%\",\r\n        height: 5,\r\n        backgroundColor: \"#ccc\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div\r\n        id=\"sliderBack\"\r\n        ref={SliderBackRef}\r\n        style={{ width: backWidth, height: 5, backgroundColor: \"#DD001B\" }}\r\n      ></div>\r\n      <div\r\n        id=\"sliderRoundBtn\"\r\n        ref={SliderRoundBtnRef}\r\n        style={{\r\n          width: 10,\r\n          height: 10,\r\n          borderRadius: \"50%\",\r\n          backgroundColor: \"#DD001B\",\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          transform: \"translateY(-50%)\",\r\n          left: sliderRoundLeft,\r\n          zIndex: 999\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\HTTP.js",["1072","1073","1074","1075","1076","1077"],"import { message, } from 'antd';\r\nimport request from './request'\r\n\r\nlet Http = {};\r\nHttp.Get = function(url, params) {\r\n    const method = 'GET';\r\n    let fetchUrl = url;\r\n    if(params) {\r\n        fetchUrl += stringParams(params);\r\n    }\r\n    //credentials: 'include', 设置此项, 是为了fetch在请求时带上cookie, \r\n    const fetchParams = {method: method, credentials: 'include',};\r\n    return Http.handleFetchData(fetchUrl, fetchParams);\r\n}\r\nHttp.Post = function(url, params = {}) {\r\n    const method = 'POST';\r\n    const body = JSON.stringify(params);\r\n    const fetchParams = {\r\n        method: method,\r\n        body: body,\r\n\r\n    }\r\n    return Http.handleFetchData(url, fetchParams);\r\n}\r\n\r\nHttp.handleFetchData = (url, fetchParams) => {\r\n    const fetchPromise = new Promise((resolve, reject) => {\r\n        request()(url, fetchParams).then(\r\n            response => {\r\n                response.json().then(jsonBody => {\r\n                    if(response.ok) {\r\n                        if(jsonBody.code != 200) {\r\n                            reject(Http.handleFailedResult(jsonBody))\r\n                        }else {\r\n                            resolve(Http.handleResult(jsonBody));\r\n                        }\r\n                    }\r\n                    else {\r\n                        let msg = '服务器繁忙, 请稍后再试!';\r\n                        if(response.code === 404) {\r\n                            msg = '你访问的页面走丢了'\r\n                        }\r\n                        // resolve(Http.handleResult({fetchStatus: 'error', netStatus: response.status, error: msg}))\r\n                        reject(Http.handleFailedResult({code: response.code, error: msg}))\r\n                        // message.error(msg);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    const errMsg = e.name + ' ' + e.message;\r\n                    reject(Http.handleFailedResult({code: response.code, error: errMsg}))\r\n                    // message.error(errMsg);\r\n                })\r\n            }\r\n        )\r\n        .catch(e => {\r\n            console.log('最后捕捉错误')\r\n            console.log(e)\r\n            console.log(e.name)\r\n            console.log(e.message)\r\n            const errMsg = e.name + ' ' + e.message;\r\n            // reject(Http.handleFailedResult({fetchStatus: 'error', error: errMsg}))\r\n            message.error(errMsg)\r\n        })\r\n    })\r\n    return Promise.race([fetchPromise])\r\n}\r\n\r\nHttp.handleResult = (result) => {\r\n    if(result.code != 200 && result.data?.code != 200) {\r\n        console.log('处理结果')\r\n        console.log(result)\r\n        // const errMsg= result.msg || result.message || '服务器开了小差, 请稍后再试!';\r\n        const errMsg= result.error;\r\n        const errStr = `${errMsg} (${result.code})`;\r\n        message.error(errStr)\r\n        return;\r\n    }\r\n    return result;\r\n}\r\n\r\nHttp.handleFailedResult = (result) => {\r\n    if(result.code != 200 && result.data?.code != 200) {\r\n        const errMsg= result.msg || result.message || '服务器开了小差, 请稍后再试!';\r\n        const errStr = `${errMsg} (${result.code})`;\r\n        message.error(errStr)\r\n        return;\r\n    }\r\n    const errorMsg = 'Uncaught PromiseError: ' + (result.netcode || '') + ' ' + (result.error || result.msg || result.message);\r\n    return errorMsg; \r\n}\r\n\r\n\r\nfunction stringParams(params) {\r\n    let paramsArr = [];\r\n    Object.keys(params).map(item => {\r\n        let str = item + '=' +params[item];\r\n        paramsArr.push(str);\r\n    })\r\n    let paramsStr = '?' + paramsArr.join('&');\r\n    return paramsStr;\r\n}\r\n\r\nexport default Http;","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\NewestSong\\NewestSong.js",["1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./NewestSong.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport PlayActiveImg from \"../../images/music/play-active.png\";\r\nimport SubImg from \"../../images/NewestSong/sub.png\";\r\nimport PlayHoverImg from \"../../images/Playlist/play_hover.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst getDate = () => {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let obj = {\r\n    year,\r\n    month,\r\n  };\r\n  return obj;\r\n};\r\nfunction NewestSong(props) {\r\n  //组件ref\r\n  const NewSongRef = useRef()\r\n  const [activeTab, setActiveTab] = useState(1); //当前选中的tab; 1为新歌速递; 2位新碟上架\r\n  const [areaCat, setAreaCat] = useState([\r\n    {\r\n      id: 0,\r\n      value: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      value: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      value: \"欧美\",\r\n    },\r\n    {\r\n      id: 16,\r\n      value: \"韩国\",\r\n    },\r\n    {\r\n      id: 8,\r\n      value: \"日本\",\r\n    },\r\n  ]);\r\n  const [activeCat, setActiveCat] = useState(0); //当前active的area type\r\n  const [paramsDate, setParamsDate] = useState({\r\n    year: getDate().year,\r\n    month: getDate().month,\r\n  }); //请求新碟上架数据所需要的参数year和month\r\n  const [temMonthData, setTemMonthData] = useState({}); //存储每次数据请求返回的月数据monthData;\r\n  const [allData, setAllData] = useState([]); //所有新碟上架数据\r\n  const [arriveBottom, setArriveBottom] = useState(false);//是否到达底部, 用于滚动加在数据\r\n  /**\r\n   *\r\n   * @param {Number} tab : 选择的tab; 1为新歌速递; 2位新碟上架\r\n   */\r\n  const selectTab = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  /**\r\n   *\r\n   * @param {Number} cat :选择的地区;\r\n   */\r\n  const selectCat = (cat) => {\r\n    setActiveCat(cat);\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} item : 新歌速递每个item的数据\r\n   * @returns item的元素element\r\n   */\r\n  const SongsListItem = (item) => {\r\n    return (\r\n      <div tabIndex=\"1\" className=\"songsListItem\">\r\n        <div style={{ flex: 2 }} className=\"padItem lightColorItem centerItem\">\r\n          01\r\n        </div>\r\n        <div\r\n          style={{ flex: 3, position: \"relative\" }}\r\n          className=\"padItem centerItem \"\r\n        >\r\n          <img\r\n            className=\"itemImg\"\r\n            src=\"http://p4.music.126.net/slF9RoIs27y3dR73tkmmEg==/109951165599739964.jpg\"\r\n          />\r\n          <img className=\"centerImg\" src={PlayHoverImg} />\r\n        </div>\r\n        <div style={{ flex: 16 }} className=\"padItem leftItem\">\r\n          Run\r\n        </div>\r\n        <div style={{ flex: 6 }} className=\"padItem leftItem colorItem\">\r\n          OneRepublic\r\n        </div>\r\n        <div style={{ flex: 8 }} className=\"padItem leftItem colorItem\">\r\n          Run\r\n        </div>\r\n        <div style={{ flex: 2 }} className=\"padItem centerItem colorItem\">\r\n          02:49\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} data : 生成指定结构的数据{title(标题): String, year(年份): String, month(月份): String, week(是否是周数据): Boolean, list(数据): Array}\r\n   * 组合数据, 同一时间段, 在相应时间的对象中, 滑动加载, 添加数据; 如果没有更多数据, 那么添加更早时间段, 并请求相应时间段数据, 以此循环\r\n   * 第一次加载时, 会返回本周新碟和本月数据, , \r\n   */\r\n  const geneCorStucData = async (data) => {\r\n    //如果是最新数据, 则有weekData数据,\r\n    //这里判断是否传入data, 是因为第一次加载数据, 会有本周新碟数据和本月新碟数据, 先处理本周新碟数据, 本月新碟数据会先存入临时月数据temMonthData中\r\n    console.log(temMonthData);\r\n    let tem = data ? data : temMonthData;\r\n    let newTemData = JSON.parse(JSON.stringify(tem));\r\n    let newAllData = JSON.parse(JSON.stringify(allData));\r\n    //是否是第一次加载数据, 如果有weekData这个字段, 说明是最新数据, \r\n    let isNewest = newTemData.hasOwnProperty(\"weekData\");\r\n    let newData = [];\r\n    let obj = {};\r\n    console.log(isNewest);\r\n    console.log(newTemData);\r\n    console.log(data);\r\n    if (isNewest) {\r\n      if (newAllData.length == 0) {\r\n        //第一次加载数据, \r\n        obj.title = \"本周新碟\";\r\n        obj.week = true;\r\n        obj.year = paramsDate.year;\r\n        obj.month = paramsDate.month;\r\n        obj.list = [];\r\n        obj.list = newTemData.weekData.splice(0, 20);\r\n        newAllData.push(obj);\r\n      } else {\r\n        console.log('new all data length not 0');\r\n        if (newAllData[newAllData.length - 1].week) {\r\n          if (newTemData.weekData.length != 0) {\r\n            newAllData[newAllData.length - 1].list = newAllData[\r\n              newAllData.length - 1\r\n            ].list.concat(newTemData.weekData.splice(0, 20));\r\n          } else {\r\n            obj.title = paramsDate.year + \"-\" + paramsDate.month;\r\n            obj.week = false;\r\n            obj.year = paramsDate.year;\r\n            obj.month = paramsDate.month;\r\n            obj.list = [];\r\n            obj.list = newTemData.monthData.splice(0, 20);\r\n            newAllData.push(obj);\r\n          }\r\n        } else {\r\n          if (newTemData.monthData.length != 0) {\r\n            newAllData[newAllData.length - 1].list = newAllData[\r\n              newAllData.length - 1\r\n            ].list.concat(newTemData.monthData.splice(0, 20));\r\n          } else {\r\n            let params = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            let p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n            setParamsDate(p);\r\n            getTopAlbum(params);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (\r\n        newAllData[newAllData.length - 1]?.year == paramsDate.year &&\r\n        newAllData[newAllData.length - 1]?.month == paramsDate.month\r\n      ) {\r\n        if (newTemData.monthData.length != 0) {\r\n          newAllData[newAllData.length - 1].list = newAllData[\r\n            newAllData.length - 1\r\n          ].list.concat(newTemData.monthData.splice(0, 20));\r\n        } else {\r\n          let params = {};\r\n          let p = {};\r\n          if(parseInt(paramsDate.month > 1)) {\r\n            params = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n          }else {\r\n            params = {\r\n              year: (parseInt(paramsDate.year)-1).toString,\r\n              month: '12',\r\n              area: \"ALL\",\r\n              type: \"new\",\r\n            };\r\n            p = {\r\n              year: paramsDate.year,\r\n              month: (parseInt(paramsDate.month) - 1).toString(),\r\n            };\r\n          }\r\n          setParamsDate(p);\r\n          getTopAlbum(params);\r\n        }\r\n      } else {\r\n        obj.title = paramsDate.year + \"-\" + paramsDate.month;\r\n        obj.week = false;\r\n        obj.year = paramsDate.year;\r\n        obj.month = paramsDate.month;\r\n        obj.list = [];\r\n        obj.list = newTemData.monthData?.splice(0, 20);\r\n        newAllData.push(obj);\r\n      }\r\n    }\r\n    console.log(newTemData);\r\n    setTemMonthData(newTemData);\r\n    setAllData(newAllData);\r\n    let intersectionObserver = new IntersectionObserver(function(entries) {\r\n      entries.forEach((item, index) => {\r\n        if(item.intersectionRatio > 0) {\r\n          let realUrl = item.target.getAttribute('data-imgurl');\r\n          let temUrl = item.target.src;\r\n          if(temUrl != realUrl) {\r\n            realUrl = realUrl +'?param=240y240';\r\n            item.target.setAttribute('src', realUrl)\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let eles = document.querySelectorAll('#pp');\r\n    eles.forEach((item, index) => {\r\n      intersectionObserver.observe(item)\r\n    })\r\n  };\r\n  /**\r\n   *\r\n   * @param {Object} params : 请求新碟数据所需要的参数{limit, type, area, year, month, offset}\r\n   */\r\n  const getTopAlbum = async (params) => {\r\n    let data = await HTTPUtils.top_album(params);\r\n    console.log('获取新碟上架数据');\r\n    console.log(data);\r\n    geneCorStucData(data);\r\n    // setTemMonthData(data);\r\n    // setTemMonthData(async (x) => {\r\n    //   await geneCorStucData(data);\r\n    // })\r\n    // let obj = {a: 1};\r\n    // console.log(data)\r\n    // setTemMonthData(data);\r\n    // await setTemMonthData((x) => {\r\n    //   console.log('临时数据')\r\n    //   console.log(x)\r\n    //   return x;\r\n    // })\r\n    // console.log('444444444444444')\r\n    // await console.log(temMonthData)\r\n  };\r\n  /**\r\n   *\r\n   * @returns 返回新碟上架请求参数area\r\n   */\r\n  const getAlbumArea = () => {\r\n    let val = \"\";\r\n    switch (activeCat) {\r\n      case 0:\r\n        val = \"ALL\";\r\n        break;\r\n      case 7:\r\n        val = \"ZH\";\r\n        break;\r\n      case 96:\r\n        val = \"EA\";\r\n        break;\r\n      case 16:\r\n        val = \"KR\";\r\n        break;\r\n      case 8:\r\n        val = \"JP\";\r\n        break;\r\n      default:\r\n        val = \"ALL\";\r\n        break;\r\n    }\r\n    return val;\r\n  };\r\n\r\n  //点击碟item, 进入专辑详情页面\r\n  const navigateAlbumDetail = (item) => {\r\n    props.history.push('/album/'+item.id)\r\n  }\r\n\r\n  /**\r\n   * 依赖项paramsDate, 每次变化都要重新获取新碟数据(第一次请求或者获取上一月新碟上架数据)\r\n   */\r\n  useEffect(async () => {\r\n    let params = JSON.parse(JSON.stringify(paramsDate));\r\n    params.type = \"new\";\r\n    params.area = getAlbumArea();\r\n    await getTopAlbum(params)\r\n  }, [paramsDate]);\r\n  /**\r\n   * 依赖项activeCat, 每次变化, 都要将请求参数paramsDate中的year和month更新成最新年月\r\n   */\r\n  useEffect(() => {\r\n    let obj = getDate()\r\n    setParamsDate(obj);\r\n    setTemMonthData({})\r\n    setAllData([])\r\n    setArriveBottom(false)\r\n  }, [activeCat]);\r\n  /**\r\n   * 页面加载完成后, 请求数据, 只执行一次\r\n   */\r\n  useEffect(async () => {\r\n    let intersectionObserver = new IntersectionObserver(function(entries) {\r\n      //监听elem是否到达可视区域,\r\n      entries.forEach((item, index) => {\r\n        if(item.intersectionRatio > 0) {\r\n          let realUrl = item.target.getAttribute('data-imgurl');\r\n          let temUrl = item.target.src;\r\n          if(temUrl != realUrl) {\r\n            realUrl = realUrl +'?param=280y280';\r\n            item.target.setAttribute('src', realUrl)\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let eles = document.querySelectorAll('#pp');\r\n    eles.forEach((item, index) => {\r\n      intersectionObserver.observe(item)\r\n    })\r\n    console.log(getDate().year);\r\n    console.log(getDate().month);\r\n    let params = {\r\n      limit: \"10\",\r\n      area: \"ALL\",\r\n      type: \"new\",\r\n      year: getDate().year.toString(),\r\n      month: getDate().month.toString(),\r\n    };\r\n    await getTopAlbum(params);\r\n    if(NewSongRef.current) {\r\n      //   NewSongRef.current.onscroll = throttle(doSomething, 500);\r\n        NewSongRef.current.addEventListener('scroll', throttle(doSomething, 500))\r\n      }\r\n  }, []);\r\n  \r\n\r\n  //依赖--arriveBottom, 是否到达底部, 用于滚动加载数据的一句\r\n  useEffect(() => {\r\n    if(arriveBottom) {\r\n      geneCorStucData()\r\n      setArriveBottom(false)\r\n    }\r\n  }, [arriveBottom])\r\n\r\n\r\n  const throttle = (func, delay) => {\r\n    let isValid = false;\r\n    return function () {\r\n      if (isValid) {\r\n        return false;\r\n      }\r\n      isValid = true;\r\n      let timer = setTimeout(() => {\r\n        func();\r\n        isValid = false;\r\n      }, delay);\r\n    };\r\n  };\r\n  //滚动加载-到达底部事件, 设置arriveBottom为true\r\n  const doSomething = () => {\r\n    let scrH =\r\n    NewSongRef.current.scrollHeight;\r\n    let cliH =\r\n      NewSongRef.current.clientHeight;\r\n    let scrTop = NewSongRef.current.scrollTop;\r\n    if (scrTop + 100 > scrH - cliH) {\r\n      // geneCorStucData();\r\n      console.log('到达底部1111');\r\n      setArriveBottom(true)\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"newestSong\" ref={NewSongRef}>\r\n      <div className=\"newestSongTabs\">\r\n        <span className=\"newestSongTabsCon\">\r\n          <span\r\n            className={`newestSongTabsConTab ${\r\n              activeTab == 1 ? \"newestSongTabsConTabActive\" : \"\"\r\n            } `}\r\n            onClick={() => selectTab(1)}\r\n          >\r\n            新歌速递\r\n          </span>\r\n          <span\r\n            className={`newestSongTabsConTab ${\r\n              activeTab == 2 ? \"newestSongTabsConTabActive\" : \"\"\r\n            } `}\r\n            onClick={() => selectTab(2)}\r\n          >\r\n            新碟上架\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"newestSongArea\">\r\n        <div className=\"newestSongAreaLeft\">\r\n          {areaCat.map((item, index) => {\r\n            return (\r\n              <span\r\n                key={item.id}\r\n                className={`newestSongAreaLeftItem ${\r\n                  item.id == activeCat ? \"newestSongAreaLeftItemActive\" : \"\"\r\n                }`}\r\n                onClick={() => selectCat(item.id)}\r\n              >\r\n                {item.value}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"newestSongAreaRight\">\r\n          <span className=\"newestSongAreaRightItem newestSongAreaRightItemRed\">\r\n            <img className=\"newestSongAreaRightItemImg\" src={PlayActiveImg} />\r\n            <span>播放全部</span>\r\n          </span>\r\n          <span className=\"newestSongAreaRightItem newestSongAreaRightItemBor\">\r\n            <img className=\"newestSongAreaRightItemImg\" src={SubImg} />\r\n            <span>收藏全部</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"songsList\">\r\n        {allData.map((item, index) => {\r\n          return (\r\n            <div className='songsListNewItem' key={index}>\r\n              <div\r\n                className='songsListNewItemTitleCon'\r\n                >\r\n                <div\r\n                  className='songsListNewItemTitleDiv'\r\n                >\r\n                  <p \r\n                  className='songsListNewItemTitleDivTitle'\r\n                  >\r\n                    {item.title}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className='songsListNewItemRight'\r\n              >\r\n                <div\r\n                  className='songsListNewItemRightCon'\r\n                >\r\n                  {item.list && item.list.map((zItem, zIndex) => {\r\n                    return (\r\n                      <div id=\"ele\" className='songsListNewItemRightItem is_album' data-album={zItem.id} key={zItem.id+'-'+zIndex} onClick={navigateAlbumDetail.bind(this, zItem)}>\r\n                        <div\r\n                          className='songsListNewItemRightItemImgCon'\r\n                        >\r\n                          <img\r\n                            id=\"pp\"\r\n                            className='songsListNewItemRightItemImgSrc'\r\n                            src='https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2879430259,1145403574&fm=26&gp=0.jpg'\r\n                            data-imgurl={zItem.picUrl}\r\n                          />\r\n                          <img\r\n                            className='songsListNewItemRightItemImgStatic'\r\n                            src={PlayHoverImg}\r\n                          />\r\n                        </div>\r\n                        <div className='songsListNewItemRightItemDescCon'>\r\n                          <p className='songsListNewItemRightItemDescName'>\r\n                            {zItem.name}\r\n                          </p>\r\n                          <p className='songsListNewItemRightItemDescArtist'>\r\n                            {zItem.artist.name}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n           );\r\n        })} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(NewestSong)","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\Artists.js",["1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Artists.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Pagination } from 'antd'\r\n\r\nfunction Artists(props) {\r\n  const artistsRef = useRef();\r\n  const [types, setTypes] = useState([\r\n    //歌手筛选分类\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"男歌手\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"女歌手\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"乐队组合\",\r\n    },\r\n  ]);\r\n  const [areas, setAreas] = useState([\r\n    //歌手筛选语种\r\n    {\r\n      id: -1,\r\n      name: \"全部\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"华语\",\r\n    },\r\n    {\r\n      id: 96,\r\n      name: \"欧美\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"日本\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"韩国\",\r\n    },\r\n    {\r\n      id: 0,\r\n      name: \"其他\",\r\n    },\r\n  ]);\r\n  const [cats, setCats] = useState([\r\n    //筛选名字首字母信息\r\n    { id: -1, name: \"热门\" },\r\n    { id: \"A\", name: \"A\" },\r\n    { id: \"B\", name: \"B\" },\r\n    { id: \"C\", name: \"C\" },\r\n    { id: \"D\", name: \"D\" },\r\n    { id: \"E\", name: \"E\" },\r\n    { id: \"F\", name: \"F\" },\r\n    { id: \"G\", name: \"G\" },\r\n    { id: \"H\", name: \"H\" },\r\n    { id: \"I\", name: \"I\" },\r\n    { id: \"J\", name: \"J\" },\r\n    { id: \"K\", name: \"K\" },\r\n    { id: \"L\", name: \"L\" },\r\n    { id: \"M\", name: \"M\" },\r\n    { id: \"N\", name: \"N\" },\r\n    { id: \"O\", name: \"O\" },\r\n    { id: \"P\", name: \"P\" },\r\n    { id: \"Q\", name: \"Q\" },\r\n    { id: \"R\", name: \"R\" },\r\n    { id: \"S\", name: \"S\" },\r\n    { id: \"T\", name: \"T\" },\r\n    { id: \"U\", name: \"U\" },\r\n    { id: \"V\", name: \"V\" },\r\n    { id: \"W\", name: \"W\" },\r\n    { id: \"X\", name: \"X\" },\r\n    { id: \"Y\", name: \"Y\" },\r\n    { id: \"Z\", name: \"Z\" },\r\n    { id: \"#\", name: \"#\" },\r\n  ]);\r\n  const [activeType, setActiveType] = useState(\"-1\"); //当前active的歌手分类\r\n  const [activeArea, setActiveArea] = useState(\"-1\"); //当前active的歌手语种\r\n  const [activeCat, setActiveCat] = useState(\"-1\"); //当前active的歌手筛选\r\n  const [artistsData, setArtistsData] = useState([]); //歌手分类列表数据\r\n  const [hasMoreData, setHasMoreData] = useState(true);//是否还有更多歌手数据\r\n  const [arriveBottom, setArriveBottom] = useState(false);//是否到达底部\r\n  const [dataPage, setDataPage] = useState(1);//当前页数\r\n\r\n  /**\r\n   * \r\n   * @param {Number} id : 所选对应类别item的id\r\n   * @param {Number} type : 1为语种; 2位性别和组合; 3为歌手首字母筛选\r\n   */\r\n  const selectCatItem = (id, type) => {\r\n    setDataPage(1)\r\n    switch (type) {\r\n      case 1:\r\n        setActiveArea(id);\r\n        break;\r\n      case 2:\r\n        setActiveType(id);\r\n        break;\r\n      case 3:\r\n        setActiveCat(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getArtistsList = async (obj) => {\r\n    let data = await HTTPUtils.artist_list(obj);\r\n    //如果当前数据是第一页, 直接将数据赋给artistsData\r\n    if (!hasMoreData) {\r\n      return;\r\n    }\r\n    let artists = dataPage == 1 ? data.artists : artistsData.concat(data.artists);\r\n    setArtistsData(artists)\r\n    setHasMoreData(data.more)\r\n    setArriveBottom(false)\r\n  }\r\n  //依赖项语种, 男/女/组合, 每次点击都要重新获取数据\r\n  useEffect(async () => {\r\n    let obj = {\r\n      area: activeArea,\r\n      type: activeType,\r\n      initial: activeCat,\r\n      offset: (dataPage - 1) * 40,\r\n      limit: 40\r\n    }\r\n    await getArtistsList(obj)\r\n  }, [activeArea, activeType, activeCat, dataPage])\r\n  //依赖项歌手数据, 每个更新数据, 都要为每个img添加懒加载, \r\n  useEffect(() => {\r\n    let imgs = document.querySelectorAll('.artistsListItemImg');\r\n    imgs.forEach((item, index) => {\r\n      let dataSrc = item.getAttribute('data-imgurl');\r\n      if (item.src != dataSrc) {\r\n        let offsetTop = item.offsetTop;\r\n        let clientHeight = window.innerHeight;\r\n        let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n        if (offsetTop < (clientHeight + scrollTop - 100)) {\r\n          item.src = dataSrc;\r\n        }\r\n      }\r\n    })\r\n  }, [artistsData])\r\n\r\n\r\n  /**\r\n   * 歌手列表系列事件\r\n   */\r\n  //进入歌手详情页面\r\n  const navigateDetail = (item) => {\r\n    console.log(props);\r\n    console.log(item);\r\n    props.history.push('/artist/' + item.id)\r\n  }\r\n\r\n  //依赖 arriveBottom 到达底部 会获取更多数据\r\n  //逻辑 将当前获取数据页数+1, 会触发相关依赖, 获取更多数据\r\n  useEffect(() => {\r\n    if (arriveBottom) {\r\n      setDataPage(dataPage + 1)\r\n    }\r\n  }, [arriveBottom])\r\n\r\n  //\r\n  const throttle = (func, delay) => {\r\n    let isValid = false;\r\n    return function() {\r\n      if (isValid) {\r\n        return;\r\n      }\r\n      isValid = true;\r\n      setTimeout(() => {\r\n        func();\r\n        isValid = false\r\n      }, delay)\r\n    }\r\n  }\r\n\r\n  const handleArriveBottomLoadMoreData = () => {\r\n    if(artistsRef.current) {\r\n      const { height } = artistsRef.current.getBoundingClientRect();\r\n      //artistRef当前垂直滚动距离\r\n      let scrollTop = artistsRef.current.scrollTop;\r\n      //artistRef滚动高度\r\n      let scrollHeight = artistsRef.current.scrollHeight;\r\n      if (height + scrollTop > scrollHeight - 200) {\r\n        setArriveBottom(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  //依赖  第一次加载页面\r\n  useEffect(() => {\r\n\r\n    //滚动加载图片\r\n    if (artistsRef.current) {\r\n      artistsRef.current.addEventListener('scroll', throttle(handleArriveBottomLoadMoreData, 500))\r\n      artistsRef.current.addEventListener('scroll', function () {\r\n        //artistRef的高度\r\n        const { height } = artistsRef.current.getBoundingClientRect();\r\n        //artistRef当前垂直滚动距离\r\n        let scrollTop = artistsRef.current.scrollTop;\r\n        //artistRef滚动高度\r\n        //首先将真实图片url添加到data-imgurl中, 通过判断距离, 来将真实url, 添加到src中, 实现懒加载\r\n        let imgs = document.querySelectorAll('.artistsListItemImg');\r\n        imgs.forEach((item, index) => {\r\n          let dataSrc = item.getAttribute('data-imgurl');\r\n          if (item.src != dataSrc) {\r\n            //图片距离\r\n            let offsetTop = item.offsetTop;\r\n            if (offsetTop < (height + scrollTop - 100)) {\r\n              item.src = dataSrc;\r\n            }\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div\r\n      className='artists'\r\n      ref={artistsRef}\r\n    >\r\n      <div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">语种: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {areas.map((item, index) => {\r\n              return (\r\n                <span key={item.id + '_' + index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${activeArea == item.id ? \"activeItem\" : \"\"\r\n                      } artistItem`}\r\n                    onClick={() => selectCatItem(item.id, 1)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index != areas.length - 1 ? <span style={{ padding: '0 10px' }}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">分类: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {types.map((item, index) => {\r\n              return (\r\n                <span key={item.id + '_' + index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${activeType == item.id ? \"activeItem\" : \"\"\r\n                      } artistItem`}\r\n                    onClick={() => selectCatItem(item.id, 2)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index != types.length - 1 ? <span style={{ padding: '0 10px' }}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">筛选: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {cats.map((item, index) => {\r\n              return (\r\n                <span key={item.id + '_' + index} className=\"artistItemContainer\">\r\n                  <span\r\n                    key={item.id}\r\n                    className={`${activeCat == item.id ? \"activeItem\" : \"\"\r\n                      } artistItem`}\r\n                    onClick={() => selectCatItem(item.id, 3)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index != cats.length - 1 ? <span style={{ padding: '0 10px' }}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='artistsList'\r\n      >\r\n        {\r\n          artistsData.map((item, index) => {\r\n            return (\r\n              <div\r\n                key={item.id + '_' + index}\r\n                className='artistsListItem'\r\n                onClick={() => navigateDetail(item)}\r\n              >\r\n                <div className='artistsListItemImgCon'>\r\n                  <img\r\n                    className='artistsListItemImg'\r\n                    src=''\r\n                    data-imgurl={item.picUrl + '?param=280y280'}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p className='artistsListItemName'>\r\n                    {item.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Artists)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Artists\\ArtistDetail\\ArtistDetail.js",["1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\Toplist\\Toplist.js",["1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\Cookies.js",["1186","1187"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\request.js",["1188","1189","1190","1191","1192"],"import c_fetch from './fetch';\r\nimport Tools from '../Utils/Tools'\r\n\r\n\r\nc_fetch.interceptors.request.use(\r\n  function(url, config) {\r\n    //发送请求前, 为每个请求添加timestamp;\r\n    let is_have_timestamp = url.indexOf('timestamp');\r\n    let is_have_wenhao = url.indexOf('?');\r\n    if(is_have_wenhao == -1) {\r\n      url += '?' + 'timestamp=' + Date.now();\r\n    }else {\r\n      url += '&' + 'timestamp=' + Date.now();\r\n    }\r\n    return {url, config};\r\n  }\r\n)\r\n//返回数据前, 处理数据, \r\nc_fetch.interceptors.response.use(function(res) {\r\n  if(res.status == 301) {\r\n    console.log('需要重新登录')\r\n    console.log(res)\r\n    //这里可以reject, 不返回数据\r\n    Tools.push('/')\r\n  }else {\r\n    return res;\r\n  }\r\n});\r\n\r\nconst request = () => {\r\n  return c_fetch;\r\n}\r\nexport default request;","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\HTTPUtils\\fetch.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\store\\reducers\\index.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\store\\reducers\\playlistReducer.js",["1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207"],"const playlistReducer = (state = { data: [], active: { data: {}, index: -1 } }, action) => {\r\n  let data = ''\r\n  let index = 0;\r\n  let stateData = JSON.parse(JSON.stringify(state));\r\n  let dataStr = '';\r\n  switch (action.type) {\r\n    case 'add':\r\n      //向播放列表中添加歌曲\r\n      //对于传过来的action.data, 下面有两种处理形式\r\n      //1, 如果传过来的action.data 是 Array 类型, 那么, 添加数据的时候需要使用...data\r\n      //2, 如果传过来的action.data 是 Object 类型, 那么不用使用...data;\r\n      data = action.data;\r\n      if (data instanceof Array) {\r\n        if (action.hasOwnProperty('index') && index) {\r\n          stateData.data && stateData.data.splice(action.index, 0, ...data);\r\n        } else {\r\n          stateData.data = [...stateData.data, ...data]\r\n        }\r\n      } else {\r\n        if (action.hasOwnProperty('index') && index) {\r\n          stateData.data && stateData.data.splice(action.index, 0, data);\r\n          return stateData;\r\n        } else {\r\n          stateData.data = [...stateData.data, data]\r\n        }\r\n      }\r\n      //将数据存入localStorage\r\n      storeToLocalStorage(stateData.data, 1)\r\n      //添加歌曲后, 同时需要更新当前播放歌曲的index\r\n      index = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == stateData.active.data.id);\r\n      stateData.active.index = index;\r\n      return stateData;\r\n    case 'delete':\r\n      //删除播放列表中的某条数据\r\n      //关于传过来的action.data类型, 处理方式类似于add中所描述的那样\r\n      data = action.data;\r\n      if (data instanceof Array) {\r\n        //这里暂时有问题, 不能使用\r\n        //如果传过来的是多选删除数组\r\n        if (action.hasOwnProperty('index') && index) {\r\n          stateData.data && stateData.data.splice(action.index, data.length);\r\n        } else {\r\n          //没有指定index, 那么需要先获取,该歌曲在播放列表中的位置, 再进行删除\r\n          //\r\n          let songIndex = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == stateData.active.data.id)\r\n          stateData.data && stateData.data.splice(songIndex, 1);\r\n        }\r\n      } else {\r\n        if (action.hasOwnProperty('index') && index) {\r\n          //如果有指定index, \r\n          stateData.data && stateData.data.splice(action.index, 1);\r\n        } else {\r\n          //没有指定index, 那么需要先获取,该歌曲在播放列表中的位置, 再进行删除\r\n          let songIndex = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == data.id)\r\n          stateData.data && stateData.data.splice(songIndex, 1);\r\n        }\r\n      }\r\n      //将数据存入localStorage\r\n      storeToLocalStorage(stateData.data, 1)\r\n      index = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == stateData.active.data.id);\r\n      stateData.active.index = index;\r\n      return stateData;\r\n    case 'empty':\r\n      //清空播放列表数据\r\n      stateData.data = [];\r\n      stateData.active = {\r\n        data: {},\r\n        index: -1\r\n      };\r\n      //将数据存入localStorage\r\n      storeToLocalStorage([], 1)\r\n      return stateData;\r\n    case 'set':\r\n      //重新设置播放列表数据\r\n      stateData.data = action.data;\r\n      stateData.active = {\r\n        data: (action.data instanceof Array) && action.data.length > 0 && action.data[0] || {},\r\n        index: (action.data instanceof Array) && action.data.length > 0 ? 0 : -1\r\n      };\r\n      //将数据存入localStorage\r\n      storeToLocalStorage(stateData.data, 1)\r\n      return stateData;\r\n    case 'setActive':\r\n      //设置当前播放的歌曲信息, 和在整个播放列表中的位置\r\n      index = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == action.data.id);\r\n      stateData.active = {\r\n        data: action.data,\r\n        index\r\n      }\r\n      //将当前播放歌曲信息存入local storage中\r\n      storeToLocalStorage(action.data, 2)\r\n      return stateData;\r\n    case 'next':\r\n      //首先获取当前播放歌曲的位置, 如果没找到, 那么默认0\r\n      index = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == stateData.active.data.id);\r\n      index = index == -1 ? 0 : index + 1;\r\n      data = action.data;\r\n      //判断数组或者对象, 为的是更简单的添加歌曲数据\r\n      if (data instanceof Array) {\r\n        //这里做下判断, 存在redux中的stateData.data是否是数组, 如果不是, 要把它设为数组, 并添加新数据\r\n        if (stateData.data instanceof Array) {\r\n          stateData.data.splice(index, 0, ...data)\r\n        } else {\r\n          state.data = [];\r\n          state.data = data;\r\n        }\r\n      } else if (data instanceof Object) {\r\n        if (stateData.data instanceof Array) {\r\n          let index_will_next_song = (stateData.data instanceof Array) && stateData.data.findIndex(item => item.id == data.id);\r\n          if (index_will_next_song == -1) {\r\n            //如果播放列表中没有下一首播放的歌曲, 那么直接在当前播放歌曲的后面添加歌曲\r\n            stateData.data.splice(index, 0, data)\r\n          } else {\r\n            if (index_will_next_song != (index - 1)) {\r\n              //将要添加的歌曲与当前播放的歌曲不同时, 需要将已经存在的歌曲挪到当前播放歌曲的位置+1\r\n              //当index>index_will_next_song时, 需要先在index后面添加歌曲数据, 然后在index_will_next_song处删除已存在的歌曲\r\n              let index2 = index > index_will_next_song ? index : index_will_next_song;\r\n              let index3 = index > index_will_next_song ? index_will_next_song : index;\r\n              stateData.data.splice(index2, 0, data);\r\n              stateData.data.splice(index3, 1)\r\n\r\n            }\r\n            //如果要添加的歌曲与当前播放的歌曲相同, 暂时不进行任何操作(后续会加上从头开始播放该歌曲)\r\n          }\r\n        } else {\r\n          state.data = []\r\n          state.data.push(data)\r\n        }\r\n      }\r\n      //将数据存入localStorage\r\n      storeToLocalStorage(stateData.data, 1)\r\n      return stateData;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction storeToLocalStorage(data, type) {\r\n  let dataStr = ''\r\n  dataStr = JSON.stringify(data);\r\n  if (type == 1) {\r\n    localStorage.setItem('playlist', dataStr)\r\n  } else if (type == 2) {\r\n    localStorage.setItem('activeSong', dataStr)\r\n  }\r\n}\r\n\r\nexport default playlistReducer;","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\store\\actions\\playlistActions.js",[],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\SliderPlaylist\\SliderPlaylist.js",["1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { exchangeTime, exchangeDuration } from '@/Utils'\r\nimport { addToPlaylist, deleteAllSongs, deleteSong, setActive, } from '../store/actions/playlistActions'\r\nimport './SliderPlaylist.less';\r\nimport { Button } from 'antd'\r\n\r\n//引入图标\r\nimport AddPng from \"@/images/music/musicListItem/no-add.png\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport AddWhitePng from \"@/images/Playlist/addWhite.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport SharePng from \"@/images/Playlist/share.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport ShoucangPng from \"@/images/Playlist/shoucang.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ZanPng from \"@/images/Playlist/zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport GenderMale from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\n\r\nfunction SliderPlaylist(props) {\r\n  useEffect(() => {\r\n  })\r\n\r\n  //添加歌曲\r\n  const addSong = () => {\r\n    let songs = props.songs;\r\n\r\n    props.addSong(songs[1], 3)\r\n  }\r\n\r\n  //删除歌曲\r\n  const deleteSong = () => {\r\n    let songs = props.songs;\r\n\r\n    props.deleteSong([songs[1], songs[2], songs[3]], 1)\r\n  }\r\n\r\n  //清空播放列表\r\n  const clearPlaylist = (event) => {\r\n    props.deleteAllSongs()\r\n  }\r\n\r\n  //双击播放歌曲\r\n  const playThisSong = (data, index) => {\r\n    console.log('props');\r\n    console.log(props);\r\n    console.log(data);\r\n    console.log(index);\r\n    props.setActiveSong(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('use effect');\r\n    console.log(props);\r\n  })\r\n  //渲染--渲染歌单列表item\r\n  const ListItem = ({ data, index }) => {\r\n    index += 1;\r\n    index = index < 10 ? \"0\" + index : index;\r\n    let activeId = props.activeSong?.data?.id ? props.activeSong?.data?.id : null\r\n    return (\r\n      <ul\r\n        className={`content-header is_song is_sliderplaylist fontsize18 canSelectItem ${\r\n          (index - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        } ${activeId == data.id ? \"activeListItem\" : \"\"}`}\r\n        tabIndex={index}\r\n        onDoubleClick={playThisSong.bind(this, data, index)}\r\n        data-song={JSON.stringify(data)}\r\n      >\r\n        <li className=\"content-header-item flex4\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\" style={{minWidth: 0}}>\r\n              <p style={{ margin: 0, padding: 0 }}>{data?.name}</p>\r\n            </li>\r\n            {/* <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul> */}\r\n          </ul>\r\n        </li>\r\n        <li className={`content-header-item flex2 txtCenter ${activeId != data.id ? \"txtLightGray\" : \"\"}`}>\r\n          {data?.ar.map((z, i) => {\r\n            if (i == data?.ar.length - 1) {\r\n              return z.name;\r\n            }\r\n            return z.name + \"/\";\r\n          })}\r\n        </li>\r\n        <li className={`content-header-item flex2 txtCenter ${activeId != data.id ? \"txtLightGray\" : \"\"}`}>\r\n          {data?.al?.name}\r\n        </li>\r\n        <li className={`content-header-item flex2 txtCenter ${activeId != data.id ? \"txtLightGray\" : \"\"}`}>{exchangeDuration(data.dt)}</li>\r\n      </ul>\r\n    );\r\n  };\r\n  return (\r\n    <div className='sliderPlaylist'>\r\n      <div style={{height: '50px',lineHeight: '50px', padding: '0px 20px'}}>\r\n        <div style={{display: 'inline-block'}}>\r\n          总共{props.songs.length}首\r\n        </div>\r\n        <Button danger type=\"text\" onClick={clearPlaylist}>清空</Button>\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul className=\"content-header\">\r\n          <li className=\"content-header-item txtCenter flex4 txtLightGray\">\r\n            音乐标题\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            歌手\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            专辑\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            时长\r\n          </li>\r\n        </ul>\r\n        <div style={{flex: 1, overflowY: 'auto'}}>\r\n        {(props.songs instanceof Array) && props.songs.map((item, index) => {\r\n            return <ListItem key={item.id + index.toString()} data={item} index={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songs: state.playlistReducer.data,\r\n    activeSong: state.playlistReducer.active\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addSong: (data, index) => {\r\n      dispatch(addToPlaylist(data, index));\r\n    },\r\n    deleteSong: (data, index) => {\r\n      dispatch(deleteSong(data, index))\r\n    },\r\n    deleteAllSongs: () => {\r\n      dispatch(deleteAllSongs())\r\n    },\r\n    setActiveSong: data => {\r\n      console.log(dispatch);\r\n      dispatch(setActive(data))\r\n    }\r\n  }\r\n}\r\n\r\nconst SliderPlaylistContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SliderPlaylist)\r\n\r\nexport default SliderPlaylistContainer","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\PersonalCenter\\PersonalCenter.js",["1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router';\r\nimport { Cookies } from \"../../Utils\";\r\nimport \"./PersonalCenter.less\";\r\nimport HTTPUtils from \"../../HTTPUtils/HTTPUtils\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport DownloadPng from \"@/images/Playlist/download.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport PlayNoActivePng from \"@/images/music/play-no-active.png\";\r\nimport PicListNoActivePng from \"@/images/AritstDetail/pic-list-no-active.png\";\r\nimport PicListActivePng from \"@/images/AritstDetail/pic-list-active.png\";\r\nimport PicNoActivePng from \"@/images/AritstDetail/pic-no-active.png\";\r\nimport PicActivePng from \"@/images/AritstDetail/pic-active.png\";\r\nimport ListNoActivePng from \"@/images/AritstDetail/list-no-active.png\";\r\nimport ListActivePng from \"@/images/AritstDetail/list-active.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport GenderMail from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport AddWhite from \"@/images/Playlist/addWhite.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { exchangeTime, exchangeDuration } = require(\"@/Utils/ExchangeTime\");\r\n\r\nfunction PersonalCenter(props) {\r\n  const {id} = useParams();\r\n  //用户id, 创建时间信息\r\n  const [account, setAccount] = useState({});\r\n  //用户详细信息\r\n  const [profile, setProfile] = useState({});\r\n  //用户等级信息\r\n  const [userLV, setUserLV] = useState({});\r\n  //用户各种收藏信息\r\n  const [userSubs, setUserSubs] = useState({});\r\n  //用户关注列表总数\r\n  const [userFollowsCount, setUserFollowsCount] = useState(0);\r\n  //用户关注列表数据\r\n  const [userFollowsData, setUserFollowsData] = useState([]);\r\n  //用户粉丝列表总数\r\n  const [userFollowedsCount, setUserFollowedsCount] = useState(0);\r\n  //用户粉丝列表数据\r\n  const [userFollowedsData, setUserFollowedsData] = useState([]);\r\n  //用户动态列表总数\r\n  const [userEventCount, setUserEventCount] = useState(0);\r\n  //用户动态列表数\r\n  const [userEvents, setUserEvents] = useState([]);\r\n  //用户创建的歌单\r\n  const [userCreatePlaylists, setUserCreatePlaylists] = useState([]);\r\n  //用户收藏的歌单\r\n  const [userSubPlaylists, setUserSubPlaylists] = useState([]);\r\n\r\n  //获取用户账户信息\r\n  const getUserAccount = async () => {\r\n    console.log('传过来的数据');\r\n    console.log(props);\r\n    let data = await HTTPUtils.user_account();\r\n    setAccount(data.account);\r\n    setProfile(data.profile);\r\n  };\r\n  //获取用户等级\r\n  const getUserLV = async () => {\r\n    let data = await HTTPUtils.user_level();\r\n    setUserLV(data.data);\r\n  };\r\n  //获取用户信息, 歌单, 收藏, mv, dj数量\r\n  const getUserSubcount = async () => {\r\n    let data = await HTTPUtils.user_subcount();\r\n    setUserSubs(data);\r\n  };\r\n  //获取用户关注列表\r\n  const getUserFollows = async () => {\r\n    if (!profile || !profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_follows(params);\r\n    setUserFollowsCount(data.follow?.length || 0);\r\n    setUserFollowsData(data.follow);\r\n  };\r\n  //获取用户粉丝列表\r\n  const getUserFolloweds = async () => {\r\n    if (!profile || !profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_followeds(params);\r\n    setUserFollowedsCount(data.size);\r\n    setUserFollowedsData(data.followeds);\r\n  };\r\n  //获取用户动态列表\r\n  const getUserEvent = async () => {\r\n    if ( !profile || !profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_event(params);\r\n    setUserEventCount(data.size);\r\n  };\r\n  //获取用户歌单\r\n  const getUserPlaylists = async () => {\r\n    if (!profile || !profile.userId) {\r\n      return false;\r\n    }\r\n    let params = {\r\n      uid: profile.userId,\r\n    };\r\n    let data = await HTTPUtils.user_playlist(params);\r\n    let createPlaylists = data.playlist.filter(\r\n      (item) => item.subscribed == false\r\n    );\r\n    let subPlaylists = data.playlist.filter((item) => item.subscribed == true);\r\n    setUserCreatePlaylists(createPlaylists);\r\n    setUserSubPlaylists(subPlaylists);\r\n  };\r\n  //上传图片\r\n  const headerPictureChange = async (props) => {\r\n    console.log('图片')\r\n    console.log(props)\r\n    let file = props.target.files[0];\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n      let url = e.target.result;\r\n      let profileCopy = JSON.parse(JSON.stringify(profile));\r\n      profileCopy.avatarUrl = url;\r\n      setProfile(profileCopy)\r\n    }\r\n    fileReader.readAsDataURL(file)\r\n  }\r\n  //关注/取消关注\r\n  const followsUser = async (userId, followed) => {\r\n    let params = {\r\n      userId,\r\n    };\r\n    params.t = followed ? 0 : 1;\r\n    let data = await HTTPUtils.follow(params);\r\n  };\r\n  //事件--进入歌单详情\r\n  const navigateDetail = (item) => {\r\n    props.history.push('/playlist/'+item.id)\r\n  }\r\n  //事件--进入个人中心\r\n  const navigatePersonalCenter = (item) => {\r\n    console.log(item)\r\n    setProfile(item)\r\n    props.history.push('/personal/'+item.userId)\r\n  }\r\n  //粉丝列表/关注列表item\r\n  const FocusListItem = ({ data }) => {\r\n    return (\r\n      <div className=\"focus-list-item\" onClick={() => navigatePersonalCenter(data)}>\r\n        <div className=\"focus-list-item-image-con\">\r\n          <img\r\n            src={data.avatarUrl + \"?param=120y120\"}\r\n            alt=\"http://p2.music.126.net/vkAMXteRw5GHV0VNFoNxrA==/109951164751196732.jpg?param=120y120\"\r\n            className=\"focus-list-item-image\"\r\n          />\r\n        </div>\r\n        <div className=\"focus-list-item-detail\">\r\n          <ul className=\"focus-list-name-gender\">\r\n            <li>{data.nickname}</li>\r\n            <li>\r\n              <img\r\n                src={data.gender == \"0\" ? GenderFemale : GenderMail}\r\n                style={{\r\n                  width: 30,\r\n                  height: 30,\r\n                  objectFit: \"cover\",\r\n                  marginLeft: 10,\r\n                }}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <ul className=\"focus-list-all-count\">\r\n            <li>动态 {data.eventCount}</li>\r\n            <li>关注 {data.follows}</li>\r\n            <li>粉丝 {data.followeds}</li>\r\n          </ul>\r\n          <p className=\"focus-list-desc\">{data.signature}</p>\r\n        </div>\r\n        <div className=\"focus-list-item-btn\">\r\n          <div className=\"btn-container\">\r\n            <button\r\n              className=\"btn-define\"\r\n              onClick={() => followsUser(data.userId, data.followed)}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  height: \"100%\",\r\n                  lineHeight: \"40px\",\r\n                }}\r\n              >\r\n                <span style={{ float: \"left\" }}>\r\n                  <img\r\n                    src={AddWhite}\r\n                    style={{\r\n                      width: 30,\r\n                      height: 30,\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                </span>\r\n                <span style={{ float: \"left\" }}>\r\n                  {data.followed ? \"已关注\" : \"关注\"}\r\n                </span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //歌单列表item\r\n  const PlaylistItem = ({ data }) => {\r\n    return (\r\n      <div className=\"my-create-playlist-item\" onClick={() => navigateDetail(data)}>\r\n        <div>\r\n          <div className=\"my-create-playlist-item-main\">\r\n            <img\r\n              src={data.coverImgUrl + \"?param=250y250\"}\r\n              alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=250y250\"\r\n              className=\"item-main-image\"\r\n            />\r\n            <ul className=\"item-main-desc-row\">\r\n              <li className=\"item-main-desc-count\">{data.playCount}</li>\r\n              <li className=\"item-main-desc-play\">\r\n                <img\r\n                  src={PlayNoActivePng}\r\n                  style={{\r\n                    width: 15,\r\n                    height: 15,\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <p className=\"my-create-playlist-item-name\">{data.name}</p>\r\n      </div>\r\n    );\r\n  };\r\n  //获取其他用户的详细信息\r\n  const getOtherUserInfo = async () => {\r\n    let params = {\r\n      uid: id\r\n    }\r\n    let data = await HTTPUtils.user_detail(params);\r\n    setProfile(data.profile)\r\n    setUserLV({level: data.level})\r\n  }\r\n  //不同提交下, 获取个人信息方式不同\r\n  const getPersonalInfo = async () => {\r\n    console.log('没有穿过id');\r\n    console.log(id);\r\n    console.log(props);\r\n    let pathname = props.location.pathname;\r\n    let pattern = /^\\/home\\//\r\n    //匹配路径下, 那么说明是首页中的个人中心, 那么\r\n    let is_home_page = pathname.match(pattern)\r\n    console.log(pathname.match(pattern));\r\n    if(is_home_page || !id) {\r\n      //如果没有传过来id, 那么默认账号的个人中心\r\n      await getUserAccount();\r\n      await getUserLV();\r\n      await getUserSubcount();\r\n    }else {\r\n      getOtherUserInfo();\r\n    }\r\n  }\r\n  //有了用户信息后, 获取用户的动态, 关注, 粉丝\r\n  useEffect(async () => {\r\n    await getUserEvent();\r\n    await getUserFollows();\r\n    await getUserFolloweds();\r\n    await getUserPlaylists();\r\n  }, [profile]);\r\n  useEffect(async() => {\r\n    getPersonalInfo();\r\n  }, [id])\r\n  useEffect(async () => {\r\n    getPersonalInfo()\r\n  }, []);\r\n  return (\r\n    <div className=\"personal-center\">\r\n      <div className=\"personal-center-header\">\r\n        <div className=\"header-head-picture\">\r\n          <img\r\n            src={profile && profile.avatarUrl}\r\n            // src={profile.avatarUrl + \"?param=180y180\"}\r\n            alt=\"http://p1.music.126.net/SUeqMM8HOIpHv9Nhl9qt9w==/109951165647004069.jpg?param=180y180\"\r\n            className=\"head-picture-img\"\r\n          />\r\n          <div className='header-head-hover'>\r\n            {/* <input type='file' onChange={headerPictureChange}/> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"header-detail-desc\">\r\n          <div className=\"header-desc-name-lv\">\r\n            <span className=\"desc-name\">{profile && profile.nickname}</span>\r\n            <span className=\"desc-lv\">LV.{userLV.level}</span>\r\n            <span className=\"desc-edit\">编辑个人资料</span>\r\n          </div>\r\n          <ul className=\"header-desc-all-count\">\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userEventCount}</p>\r\n              <p className=\"all-count-item-cat\">动态</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowsCount}</p>\r\n              <p className=\"all-count-item-cat\">关注</p>\r\n            </li>\r\n            <li className=\"all-count-item\">\r\n              <p className=\"all-count-item-num\">{userFollowedsCount}</p>\r\n              <p className=\"all-count-item-cat\">粉丝</p>\r\n            </li>\r\n          </ul>\r\n          <p className=\"header-desc-region\">所在地区: 河北石家庄市</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"listen-rank\">\r\n        <ul className=\"listen-rank-header\">\r\n          <li className=\"listen-rank-header-item\">\r\n            <span className=\"fontsize20\">听歌排行</span>\r\n            <span style={{ marginLeft: 10 }}>累计听歌20首</span>\r\n          </li>\r\n          <li className=\"listen-rank-header-item header-right-item\">\r\n            <span\r\n              className=\"right-item-active\"\r\n              style={{\r\n                marginRight: 10,\r\n                padding: \"0 10px\",\r\n                borderRight: \"1px solid #aaa\",\r\n              }}\r\n            >\r\n              最近一周\r\n            </span>\r\n            <span className=\"right-item-active\">所有时间</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"listen-rank-list\">\r\n          {[1, 2, 3, 4, 5].map((item, index) => {\r\n            return (\r\n              <ul className=\"listen-rank-list-row\" key={index}>\r\n                <li className=\"listen-rank-list-item flex3\">\r\n                  <ul>\r\n                    <li className=\"listen-rank-list-item\">\r\n                      {index < 10 ? \"0\" + (index + 1) : index}\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">\r\n                      <img\r\n                        src={PlayNoActivePng}\r\n                        style={{ width: 15, height: 15, objectFit: \"cover\" }}\r\n                      />\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10 boldTxt\">\r\n                      不只是想你\r\n                    </li>\r\n                    <li className=\"listen-rank-list-item marginHon10\">梦然</li>\r\n                  </ul>\r\n                </li>\r\n                <li\r\n                  className=\"listen-rank-list-item flex1\"\r\n                  style={{ borderRadius: 5, position: \"relative\" }}\r\n                >\r\n                  <div className=\"bgblue\" style={{ height: \"100%\" }}></div>\r\n                  <span className=\"list-item-count\">6次</span>\r\n                </li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n        <p className=\"list-rank-look-all\">查看全部>></p>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我创建的歌单\r\n            {userSubs.createdPlaylistCount && userSubs.createdPlaylistCount > 0\r\n              ? `(${userSubs.createdPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userCreatePlaylists.length > 0 &&\r\n              userCreatePlaylists.map((item, index) => {\r\n                return (\r\n                  <PlaylistItem key={item.id} data={item}/>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">\r\n            我收藏的歌单\r\n            {userSubs.subPlaylistCount && userSubs.subPlaylistCount > 0\r\n              ? `(${userSubs.subPlaylistCount})`\r\n              : null}\r\n          </p>\r\n          <div className=\"my-create-playlist\">\r\n            {userSubPlaylists.length > 0 &&\r\n              userSubPlaylists.map((item, index) => {\r\n                return <PlaylistItem key={item.id} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">关注列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowsData &&\r\n              userFollowsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"playlist-title\">粉丝列表</p>\r\n          <div className=\"focus-list\">\r\n            {userFollowedsData &&\r\n              userFollowedsData.map((item, index) => {\r\n                return <FocusListItem key={item.userId} data={item} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PersonalCenter)","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\widgets\\ContextMenu\\ContextMenu.js",["1267","1268","1269","1270","1271","1272","1273","1274"],"D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\VideoSlider\\VideoSlider.js",["1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './videoSlider.less';\r\nimport HTTPUtils from '../HTTPUtils/HTTPUtils';\r\nimport AudioSlider from '../MusicSlider/AudioSlider';\r\nimport VolumeSlider from '../MusicSlider/VolumeSlider';\r\nimport { exchangeDuration, exchangeTime } from '../Utils';\r\n\r\nimport TestMp4 from '../images/test.mp4'\r\nimport { Button } from 'antd';\r\nimport $ from 'jquery'\r\n\r\n//图片资源 点赞 收藏 评论 下载 分享\r\nimport CommentTransparent from '@/images/VideoSlider/Comment_transparent.png';\r\nimport DownloadTransparent from '@/images/VideoSlider/download_transparent.png';\r\nimport ShareTransparent from '@/images/VideoSlider/share_transparent.png';\r\nimport SubcribeTransparent from '@/images/VideoSlider/subcribe_transparent.png';\r\nimport ThumbupTransparent from '@/images/VideoSlider/thumb_up_transparent.png';\r\nimport PlayTransparent from '@/images/VideoSlider/play_transparent.png';\r\nimport PauseTransparent from '@/images/VideoSlider/pause_transparent.png';\r\nimport FullscreenTransparent from '@/images/VideoSlider/fullscreen.png';\r\nimport ExitFullscreenTransparent from '@/images/VideoSlider/exit_fullscreen.png';\r\n\r\n//定时隐藏video 顶部栏和底部栏\r\nlet timer = null;\r\n\r\nexport default function VideoSlider(props) {\r\n\r\n  //video container ref\r\n  const videoContainerRef = useRef();\r\n  //video ref \r\n  const videoSliderRef = useRef();\r\n  //video 顶部栏 ref \r\n  const videoSliderTopRef = useRef();\r\n  //video 底部栏 ref \r\n  const videoSliderBotRef = useRef();\r\n  //video 播放地址\r\n  const [videoPath, setVideoPath] = useState('');\r\n  //video 播放/暂停\r\n  const [videoPlay, setVideoPlay] = useState(false)\r\n  //video 缓冲完毕/可播放\r\n  const [canPlay, setCanPlay] = useState(false);\r\n  //当前播放时间-百分比\r\n  const [currentVideoTimePercent, setCurrentVideoTimePercent] = useState('0%');\r\n  //当前播放时间-秒数\r\n  const [currentVideoTime, setCurrentVideoTime] = useState(0);\r\n  //总时长\r\n  const [videoDuration, setVideoDuration] = useState(0);\r\n\r\n\r\n  //音量\r\n  const [videoVolume, setVideoVolume] = useState(0)\r\n  //是否处于全屏模式\r\n  const [onFullscreen, setOnFullscreen] = useState(false)\r\n  //鼠标一定时间内, 是否可以藏顶部栏和底部栏\r\n  const [canHideTopAndBottomColumn, setCanHideTopAndBottomColumn] = useState(false)\r\n  //video全屏状态下, 按键类型事件; 暂定 1: 空格(暂停/播放); 2: 方向键左(快退); 3: 方向键(快进); 4: 方向键上(音量增加); 5: 方向键下(音量减小)\r\n  const [fullscreenKeyType, setFullscreenKeyType] = useState(0);\r\n\r\n\r\n  //图片变量\r\n  const [playImg, setPlayImg] = useState(PlayTransparent);//播放/暂停图片\r\n  const [thumbImg, setThumbImg] = useState(ThumbupTransparent)//点赞/已点赞图片\r\n  const [subImg, setSubImg] = useState(SubcribeTransparent);//收藏/已收藏图片\r\n  const [fullscreenImg, setFullscreenImg] = useState(FullscreenTransparent);//全屏/退出全屏图片\r\n\r\n\r\n\r\n  /**\r\n   * 播放器顶部状态栏 -- 点赞/收藏/评论/分享/下载操作  delegate\r\n   */\r\n  const handleVideoStatusActions = (event) => {\r\n    let id = event.target.id;\r\n    switch (id) {\r\n      case \"videoThumb\":\r\n        console.log('点在操作');\r\n        break;\r\n      case \"videoSub\":\r\n        console.log('收藏操作');\r\n        break;\r\n      case \"videoComment\":\r\n        console.log('评论操作');\r\n        break;\r\n      case \"videoShare\":\r\n        console.log('分享操作');\r\n        break;\r\n      case \"videoDownload\":\r\n        console.log('下载操作');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {time} time: String 传过来的百分比, 字符串类型\r\n   */\r\n  //事件--处理video时间变化事件--用于处理slider拖动/跳转某一时间后, 更新video的事件\r\n  const handleVideoTimeChange = (time) => {\r\n    console.log('handle video time change')\r\n    console.log(time);\r\n    let duration = videoSliderRef.current.duration;\r\n    console.log(duration * parseInt(time) / 100);\r\n    videoSliderRef.current.currentTime = duration * parseInt(time) / 100\r\n    setCurrentVideoTimePercent(time+'%')\r\n\r\n  }\r\n  //事件--video播放后, 当前事件更新的事件, 用于更新slider的currentTime\r\n  const handleVideoTimeUpdateChange = () => {\r\n    let myVideo = videoSliderRef.current;\r\n    let duration = myVideo.duration;\r\n    let currentTime = myVideo.currentTime;\r\n    //不能用Math.floor, 因为当duration时长很大的时候, percent总是为0\r\n    let percent = parseFloat(currentTime / duration * 100).toFixed(4) + '%';\r\n    setCurrentVideoTimePercent(percent)\r\n  }\r\n  //\r\n  useEffect(() => {\r\n    console.log('处理当前事件');\r\n    let myVideo = videoSliderRef.current;\r\n    let duration = myVideo.duration;\r\n    //首先判断duration是否是NAN, 因为duration只能在页面加载完成以后, 才能获取到, 页面加载完成事件在useEffect(() => {}, [])中, 才算加载完成, 本事件发生在上述事件之前\r\n    if (isNaN(duration) || (duration != 0 && !duration)) {\r\n      setCurrentVideoTime('00:00')\r\n    } else {\r\n      // let time = parseInt(currentVideoTimePercent) * duration * 10;//获取毫秒数\r\n      //不能用parseInt, 因为currentVideoTimePercent有四位小数\r\n      let time = parseFloat(currentVideoTimePercent).toFixed(4) * duration * 10;//获取毫秒数\r\n      setCurrentVideoTime(exchangeDuration(time))\r\n    }\r\n  }, [currentVideoTimePercent])\r\n\r\n  //事件--video等待加载资源事件 这是需要将video变为不可播放状态\r\n  const handleVideoWaiting = () => {\r\n    setCanPlay(false);\r\n    setVideoPlay(false)\r\n  }\r\n\r\n  //事件--video可播放事件\r\n  const handleVideoPlay = () => {\r\n    setCanPlay(true);\r\n  }\r\n\r\n  //事件--video播放完毕\r\n  const handleVideoEnd = () => {\r\n    console.log('handleVideo end');\r\n    setVideoPlay(false)\r\n  }\r\n\r\n  /**\r\n   * 播放状态设置事件, 以及相关依赖\r\n   */\r\n  //设置播放状态\r\n  const playOrPauseVideo = () => {\r\n    setVideoPlay(!videoPlay)\r\n  }\r\n  //依赖-视频播放器 播放状态--video处于canPlay状态并且 video处于播放状态下, 然后video会开始播放\r\n  useEffect(() => {\r\n    let myVideo = videoSliderRef.current;\r\n    setVideoDuration(exchangeDuration(myVideo.duration * 1000))\r\n    canPlay && videoPlay ? myVideo.play() : myVideo.pause();\r\n  }, [videoPlay, canPlay])\r\n\r\n  /**\r\n   * video全屏事件\r\n   */\r\n  const fullscreenVideo = () => {\r\n    setOnFullscreen(!onFullscreen);\r\n  }\r\n  //依赖--进入全屏/退出全屏图片\r\n  useEffect(() => {\r\n\r\n    let element = videoContainerRef.current;\r\n    //因为在全屏之前, 需要判断此组件是否存在, \r\n    if (element) {\r\n      if (onFullscreen) {\r\n        setFullscreenImg(ExitFullscreenTransparent)\r\n        //几种内核兼容\r\n        if (element.requestFullscreen) {\r\n          element.requestFullscreen();\r\n        }\r\n        else if (element.msRequestFullscreen) {\r\n          element.msRequestFullscreen()\r\n        }\r\n        else if (element.mozRequestFullscreen) {\r\n          element.mozRequestFullscreen()\r\n        }\r\n        else if (element.webkitRequestFullscreen) {\r\n          element.webkitRequestFullscreen()\r\n        }\r\n      } else {\r\n        //先判断是否存在全屏对象-这里不能用element, 要用到document\r\n        if (document.fullscreenElement) {\r\n          setFullscreenImg(FullscreenTransparent)\r\n          if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n          }\r\n          else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen()\r\n          }\r\n          else if (document.mozExitFullscreen) {\r\n            document.mozExitFullscreen()\r\n          }\r\n          else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [onFullscreen])\r\n\r\n\r\n  /**\r\n   * video音量事件\r\n   */\r\n  //音量条change事件\r\n  const handleVideoVolumeChange = (time) => {\r\n    console.log(time);\r\n    setVideoVolume(time * 100 + '%')\r\n  }\r\n  //依赖 volume slider属性value变化, 要设置video的音量\r\n  useEffect(() => {\r\n    let myVideo = videoSliderRef.current;\r\n    myVideo.volume = parseInt(videoVolume) / 100\r\n  }, [videoVolume])\r\n\r\n  /**\r\n   * @param {Number} count : 规定时间内 1: 单击事件; 大于2: 双击事件\r\n   */\r\n  const handleVideoClick = (count) => {\r\n    console.log(count);\r\n    if(count == 1) {\r\n      //单击 播放/暂停\r\n      setVideoPlay(play => !play)\r\n    }else if(count >=2) {\r\n      //双击 进入全屏/退出全屏\r\n      setOnFullscreen(fullscreen => !fullscreen)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Function} func : 处理单击/双击事件\r\n   * @param {Number} delay 一定时间内的点击次数\r\n   * @returns \r\n   */\r\n  const debounceClick = (func, delay) => {\r\n    let timer = null;\r\n    let count = 0;\r\n    return function() {\r\n      count += 1;\r\n      if(timer) {\r\n        return;\r\n      }\r\n      timer = setTimeout(() => {\r\n        func(count);\r\n        count = 0;\r\n        timer = null\r\n      }, delay)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 鼠标移动 显示/隐藏顶部栏和底部栏系列事件和依赖\r\n   */\r\n  //依赖--在处于全屏状态下, 并且一定时间内, 鼠标没有移动(1), video处于播放状态(2), 且鼠标不在顶部栏和底部栏hover或者移动(3), 这个时候才能隐藏顶部栏和底部栏\r\n  //否则不能隐藏\r\n  useEffect(() => {\r\n    let videoSliderTop = videoSliderTopRef.current;\r\n    let videoSliderBot = videoSliderBotRef.current;\r\n    if(onFullscreen && canHideTopAndBottomColumn && videoPlay) {\r\n      $(videoSliderTop).slideUp()\r\n      $(videoSliderBot).slideUp()\r\n    }else {\r\n      $(videoSliderTop).slideDown()\r\n      $(videoSliderBot).slideDown()\r\n    }\r\n  }, [canHideTopAndBottomColumn, onFullscreen, videoPlay])\r\n  const handleMousemove = () => {\r\n    //触发此事件, 说明一定时间内鼠标没有移动, 那么需要将顶部栏 和 底部栏 隐藏\r\n    setCanHideTopAndBottomColumn(true)\r\n  }\r\n  const debounceMousemove = (func, delay) => {\r\n    return function() {\r\n      //如果在移动过程中 顶部栏和底部栏都要一直显示\r\n      setCanHideTopAndBottomColumn(false)\r\n      if(timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        func();\r\n        timer = null;\r\n      }, delay)\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * video全屏状态下 键盘事件 空格(32): 暂停/播放; 方向键 上(38)/下(40): 音量增加/减小; 左(37)/右(29): 快退/快进\r\n   */\r\n  //依赖-全屏状态下按键类型fullscreenKeyType\r\n  useEffect(() => {\r\n    let volume = 0\r\n    // return;\r\n    if(onFullscreen) {\r\n      switch(fullscreenKeyType) {\r\n        case 1:\r\n          console.log('空格');\r\n          setVideoPlay(play => !play);\r\n          setFullscreenKeyType(0)\r\n          break;\r\n        case 4:\r\n          console.log('音量加');\r\n          console.log(videoVolume);\r\n          volume = parseInt(videoVolume) + 1;\r\n          if(volume >100) {\r\n            volume = 100\r\n          }\r\n          volume = volume + '%'\r\n          setVideoVolume(volume);\r\n          setFullscreenKeyType(0)\r\n          break;\r\n        case 5:\r\n          console.log('音量减');\r\n          volume = parseInt(videoVolume) - 1;\r\n          if(volume < 0) {\r\n            volume = 0\r\n          }\r\n          volume = volume + '%'\r\n          setVideoVolume(volume);\r\n          setFullscreenKeyType(0)\r\n          break;\r\n        case 2:\r\n          break;\r\n        case 3:\r\n          break;\r\n        default: \r\n          break;\r\n      }\r\n    }\r\n  }, [fullscreenKeyType, onFullscreen])\r\n  const handleFullscreenKeycode = (event) => {\r\n    let videoContainer = videoContainerRef.current;\r\n    if(videoContainer) {\r\n      let keycode = event.keyCode;\r\n      console.log(keycode);\r\n      // return;\r\n      switch(keycode) {\r\n        case 32:\r\n          //空格\r\n          setFullscreenKeyType(1);\r\n          break;\r\n        case 37:\r\n          //快退\r\n          setFullscreenKeyType(2);\r\n          break;\r\n        case 38:\r\n          //音量增加\r\n          setFullscreenKeyType(4);\r\n          break;\r\n        case 39:\r\n          //快进\r\n          setFullscreenKeyType(3);\r\n          break;\r\n        case 40:\r\n          //音量减小\r\n          setFullscreenKeyType(5);\r\n          break;\r\n        case 27:\r\n          console.log('esc tuichu');\r\n          break;\r\n        default:\r\n          break;\r\n    }\r\n    }\r\n  }\r\n\r\n  //依赖视频播放地址, 地址变化, 需要重置视频当前时间, 总时长, 播放状态\r\n  useEffect(() => {\r\n    if(props.path != videoPath) {\r\n      console.log('video slider path');\r\n      console.log(props.path);\r\n      setVideoPath(props.path);\r\n      setCurrentVideoTimePercent('0%')\r\n      setVideoPlay(false)\r\n    }\r\n  }, [props.path])\r\n\r\n  //第一次页面加载后, 触发, 只加载一次\r\n  useEffect(() => {\r\n    //这个video组件\r\n    let videoContainer = videoContainerRef.current;\r\n    //Video 元素\r\n    let myVideo = videoSliderRef.current;\r\n    //顶部栏\r\n    let videoSliderTop = videoSliderTopRef.current;\r\n    //底部栏\r\n    let videoSliderBot = videoSliderBotRef.current;\r\n    if(videoContainer) {\r\n      //鼠标移动监听事件, 在这个video container上添加监听事件, 一定时间内鼠标没有移动, 需要隐藏顶部栏和底部栏, 只要移动, 就要显示顶部栏和底部栏\r\n      //但鼠标在顶部栏和底部栏hover或者mousemove中, 需要一直显示顶部栏和底部栏,  清除timer\r\n      videoContainer.addEventListener('keyup', handleFullscreenKeycode)\r\n      videoContainer.addEventListener('mousemove', debounceMousemove(handleMousemove, 3000))\r\n      //下面两个top和bot listener是为了不隐藏顶部栏和底部栏\r\n      videoSliderTop.addEventListener('mousemove', function(event) {\r\n        event.stopPropagation();\r\n        if(timer) {\r\n          clearTimeout(timer)\r\n        }\r\n        setCanHideTopAndBottomColumn(false)\r\n      })\r\n      videoSliderBot.addEventListener('mousemove', function(event) {\r\n        event.stopPropagation();\r\n        if(timer) {\r\n          clearTimeout(timer)\r\n        }\r\n        setCanHideTopAndBottomColumn(false)\r\n      })\r\n      //这里添加full screen change事件, 是为了解决全屏状态下 顶部栏和底部栏已经隐藏, ESC键退出全屏, 顶部栏和底部栏不显示, 并且onFullscreen仍然为true\r\n      document.addEventListener('fullscreenchange', function(event) {\r\n        if(!document.fullscreenElement) {\r\n          setOnFullscreen(false)\r\n          setFullscreenImg(FullscreenTransparent)\r\n        }\r\n      })\r\n    }\r\n    //一定要判断是否存在\r\n    if(myVideo) {\r\n      //存在以后才能获取video的音量, 时长\r\n      myVideo.volume = 0.5\r\n      setVideoDuration(exchangeDuration(myVideo.duration))\r\n      setCurrentVideoTime('00:00'); \r\n      //对video添加监听单击事件, 单击: 播放/暂停; 双击: 进入全屏/退出全屏; \r\n      myVideo.addEventListener('click', debounceClick(handleVideoClick, 200)) \r\n      \r\n    }\r\n  }, [])\r\n  return (\r\n    <div className='videoContainer' ref={videoContainerRef} tabIndex='21'>\r\n      <div className='videoContainerCeil' ref={videoSliderTopRef}>\r\n        <ul className='containerCeilRow'>\r\n          {/* <li className=\"ceilRowItem\">\r\n            MV名称\r\n          </li>\r\n          <li className=\"ceilRowItem\">\r\n            歌手名\r\n          </li> */}\r\n        </ul>\r\n        {onFullscreen ? <ul className='containerCeilRow' onClick={handleVideoStatusActions}>\r\n          <li className=\"ceilRowItem\"><img id=\"videoThumb\" className='rowItemImg' title='点赞' src={ThumbupTransparent} /></li>\r\n          <li className=\"ceilRowItem\"><img id=\"videoSub\" className='rowItemImg' title='收藏' src={SubcribeTransparent} /></li>\r\n          <li className=\"ceilRowItem\"><img id=\"videoComment\" className='rowItemImg' title='评论' src={CommentTransparent} /></li>\r\n          <li className=\"ceilRowItem\"><img id=\"videoShare\" className='rowItemImg' title='分享' src={ShareTransparent} /></li>\r\n          <li className=\"ceilRowItem\"><img id=\"videoDownload\" className='rowItemImg' title='下载' src={DownloadTransparent} /></li>\r\n        </ul> : null}\r\n      </div>\r\n      <video\r\n        id='oo'\r\n        ref={videoSliderRef}\r\n        width='100%'\r\n        height=\"400\"\r\n        className='videoContent'\r\n        src={videoPath}\r\n        onCanPlay={handleVideoPlay} type=\"video/mp4\"\r\n        onTimeUpdate={handleVideoTimeUpdateChange}\r\n        onWaiting={handleVideoWaiting}\r\n        onEnded={handleVideoEnd}\r\n      />\r\n      <div className='videoContainerFloor' ref={videoSliderBotRef}>\r\n        <AudioSlider\r\n          value={currentVideoTimePercent}\r\n          onChange={handleVideoTimeChange}\r\n        />\r\n        <div className='floorRowContainer'>\r\n          <ul className='floorRow'>\r\n            <li className=\"floorRowItem\">\r\n              <img onClick={playOrPauseVideo} src={!videoPlay ? playImg : PauseTransparent} className='rowItemImg' />\r\n            </li>\r\n            <li className=\"floorRowItem\">\r\n              <p>{currentVideoTime}/{videoDuration}</p>\r\n            </li>\r\n          </ul>\r\n          <ul className='floorRow'>\r\n            <li className=\"floorRowItem\">\r\n              <div style={{ width: 100, display: 'inline-block' }}>\r\n                <VolumeSlider value={videoVolume} onChange={handleVideoVolumeChange} />\r\n              </div>\r\n            </li>\r\n            <li className=\"floorRowItem\">\r\n              <img src={fullscreenImg} className='rowItemImg' onClick={fullscreenVideo} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\MVDetail\\MVDetail.js",["1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport VideoSlider from '../../VideoSlider/VideoSlider';\r\nimport MyTextarea from '../Playlist/PlaylistDetail/MyTextarea';\r\nimport './MVDetail.less'\r\nimport { exchangeDuration, exchangeTime } from '../../Utils';\r\nimport { Button } from 'antd';\r\n\r\n//图片资源\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';\r\nimport { useParams } from 'react-router';\r\n\r\nexport default function MVDetail(props) {\r\n\r\n  //页面ref\r\n  const mvDetailRef = useRef();\r\n  /**\r\n   * MV相关数据\r\n   */\r\n  //传过来的id\r\n  const { id } = useParams()\r\n  //MV详情数据\r\n  const [mvDetailData, setMVDetailData] = useState({})\r\n  //mv播放地址\r\n  const [mvURL, setMVURL] = useState('')\r\n\r\n\r\n  /**\r\n   * 评论相关数据\r\n   */\r\n  //热门评论数据\r\n  const [hotCommentData, setHotCommentData] = useState([]);\r\n  //评论数据\r\n  const [comments, setComments] = useState([])\r\n  //页面是否到达底部\r\n  const [arriveBottom, setArriveBottom] = useState(false);\r\n  //评论每页数量\r\n  const [commentLimit, setCommentLimit] = useState(50);\r\n  //评论页数\r\n  const [commentPage, setCommentPage] = useState(1);\r\n  //是否还有更多评论数据\r\n  const [isHasMoreComment, setIsHasMoreComment] = useState(true);\r\n\r\n\r\n\r\n\r\n  //获取MV数据-基本信息\r\n  const getMVData = async () => {\r\n    let params = {\r\n      mvid: id,\r\n    }\r\n    let data = await HTTPUtils.mv_detail(params);\r\n    console.log('mv 数据');\r\n    console.log(data);\r\n    setMVDetailData(data.data)\r\n  }\r\n\r\n  //获取MV播放地址\r\n  const getMVURL = async () => {\r\n    let params = {\r\n      id: id\r\n    }\r\n    let data = await HTTPUtils.mv_url(params);\r\n    console.log('mv 播放地址');\r\n    console.log(data);\r\n    setMVURL(data.data?.url || '');\r\n  }\r\n\r\n\r\n  const getSuggestMV = async () => {\r\n    let data = await HTTPUtils.personalized_mv();\r\n    console.log('推荐MV');\r\n    console.log(data);\r\n  }\r\n\r\n  /**\r\n   * 防抖事件 处理滚动加载事件\r\n   */\r\n  //防抖事件\r\n  const debounceHandleScroll = (func, timeDelay) => {\r\n    let timer = null;\r\n    return function () {\r\n      console.log('scjjjjjjjjjjjjjjjjjjjjj');\r\n      if (timer) {\r\n        return;\r\n      }\r\n      timer = setTimeout(() => {\r\n        func();\r\n        timer = null;\r\n      }, timeDelay)\r\n    }\r\n  }\r\n\r\n  //事件-- 处理滚动事件\r\n  const handleScroll = () => {\r\n    if (mvDetailRef.current) {\r\n      //标签在评论列表\r\n      let currentElem = mvDetailRef.current;\r\n      //整个页面的滚动高度-即实际高度\r\n      let scrollHeight = currentElem.scrollHeight;\r\n      //整个页面已滚动的高度\r\n      let scrollTop = currentElem.scrollTop;\r\n      //整个页面的可视高度\r\n      const { height } = currentElem.getBoundingClientRect();\r\n      let scroll_to_bottom_distance = scrollHeight - scrollTop - height;\r\n      console.log(scroll_to_bottom_distance);\r\n      if (scroll_to_bottom_distance < 100) {\r\n        //当距离底部还有100px的时候, 执行加载评论操作\r\n        console.log('已经到达底部');\r\n        setArriveBottom(bottom => !bottom)\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMVData();\r\n    getMVComments()\r\n    getMVURL();\r\n    getSuggestMV()\r\n  }, [props.id])\r\n\r\n  //页面加载一次\r\n  useEffect(() => {\r\n    //id: id\r\n    getMVData();\r\n    getMVComments()\r\n    getMVURL();\r\n    getSuggestMV()\r\n    mvDetailRef.current?.addEventListener('scroll', debounceHandleScroll(handleScroll, 300))\r\n  }, [])\r\n\r\n\r\n  /**\r\n   * 评论组件和事件\r\n   */\r\n\r\n  //依赖 arriveBottom, 是否到达底部, 到达底部获取更多评论数据\r\n  useEffect(() => {\r\n    setCommentPage(commentPage + 1);\r\n  }, [arriveBottom])\r\n\r\n  //依赖commentPage 评论当前页数, 变化时, 需要加载更多评论数据\r\n  useEffect(() => {\r\n    getMVComments();\r\n  }, [commentPage])\r\n\r\n  //获取mv点赞/收藏/评论数据\r\n  const getMVComments = async () => {\r\n    let params = {\r\n      id: id,\r\n      limit: commentLimit,\r\n      offset: (commentPage - 1) * commentLimit\r\n    }\r\n    if (!isHasMoreComment) {\r\n      return;\r\n    }\r\n    let data = await HTTPUtils.comment_mv(params);\r\n    if (commentPage == 1) {\r\n      setComments(data.comments)\r\n      setHotCommentData(data.hotComments)\r\n    } else {\r\n      setComments(comments.concat(data.comments))\r\n    }\r\n    if (!data.more) {\r\n      setIsHasMoreComment(false)\r\n    }\r\n  }\r\n\r\n  //评论页面\r\n  const Comment = () => {\r\n    return (\r\n      <div className=\"comment\">\r\n        <MyTextarea comment={submitComment} />\r\n        <div className=\"comment-list\">\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>精彩评论</p>\r\n          <div>\r\n            {hotCommentData.map((item, index) => {\r\n              return <CommentItem key={item.commentId + index.toString()} data={item} />;\r\n            })}\r\n          </div>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>最新评论</p>\r\n          <div>\r\n            {comments.map((item, index) => {\r\n              return <CommentItem key={item.id + index.toString()} data={item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //评论item\r\n  //渲染---评论列表item\r\n  const CommentItem = ({ data }) => {\r\n    return (\r\n      <div className=\"list-item\">\r\n        <div className=\"list-item-left\" style={{ margin: \"5px 0\" }}>\r\n          <img src={data.user.avatarUrl + \"?param=50y50\"} />\r\n        </div>\r\n        <ul className=\"list-item-right\">\r\n          <li style={{ margin: \"5px 0\" }}>\r\n            {data.user.nickname}: {data.content}\r\n          </li>\r\n          {data.beReplied.length > 0 ? (\r\n            <li\r\n              className=\"list-item-reply\"\r\n            >\r\n              {data.beReplied[0]?.user?.nickname}: {data.beReplied[0]?.content}\r\n            </li>\r\n          ) : null}\r\n          <li className=\"list-item-date\">\r\n            <div>{exchangeTime(data.time)}</div>\r\n            <div>\r\n              <span className=\"tipoff marginHon10\">举报</span>\r\n              <img src={NoZanPng} className=\"commentImg marginHon10\" />\r\n              <span>{data.likedCount}</span>\r\n              <img src={ShareRound} className=\"commentImg marginHon10\" />\r\n              <img src={CommentRoundPng} className=\"commentImg marginHon10\" />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //事件---提交评论\r\n  const submitComment = (val) => {\r\n    console.log('提交评论')\r\n    console.log(val)\r\n  }\r\n\r\n\r\n  return (\r\n    <div ref={mvDetailRef} className='mvDetail'>\r\n      <div className='mvDetailContainer'>\r\n        <div className='mvAndSuggest'>\r\n          <div className=\"mvContainer\">\r\n            <VideoSlider path={mvURL} basicInfo={mvDetailData}/>\r\n            <div className='mvArtistInfo'>\r\n              <img src={(mvDetailData.artists && mvDetailData.artists[0]?.img1v1Url) || ''} className=\"mvArtistInfoImg\" />\r\n              <p>{mvDetailData.artistName || '无名氏'}</p>\r\n            </div>\r\n            <p className='mvName'>{mvDetailData.name || ''}</p>\r\n            <p className='mvTime'><span>发布: {mvDetailData.publishTime || '2021-08-31'}</span><span>播放: {mvDetailData.playCount || 0}</span></p>\r\n            <ul className=\"mvDetailActions\">\r\n              <li className='mvDetailAction'><Button type='text'>点赞</Button></li>\r\n              <li className='mvDetailAction'><Button type='text'>收藏{mvDetailData.subCount || 999}</Button></li>\r\n              <li className='mvDetailAction'><Button type='text'>分享{mvDetailData.shareCount || 999}</Button></li>\r\n              <li className='mvDetailAction'><Button type='text'>下载MV</Button></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <Comment />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * <div className=\"suggestMVContainer\">\r\n          <p style={{height: 30, lineHeight: '30px', fontWeight: 'bold', fontSize: 18}}>相关推荐</p>\r\n          <ul className=\"suggestMVList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6].map((item, index) => {\r\n                return (\r\n                  <li className=\"suggestMVListItem\" key={index}>\r\n                    <div style={{height: '100%'}}>\r\n                      <div className=\"toplistItem\">\r\n                        <img className=\"toplistItemImg\" src='https://p1.music.126.net/r07w1BhVrVI1pKaPsS0nbQ==/109951166365255547.jpg?param=200y200' />\r\n                        <div className=\"toplistItemRight\"> */\r\n/* <span>{Math.floor(item.playCount / 10000) + '万'}</span> */\r\n        //                   <span>5万</span>\r\n        //                 </div>\r\n        //                 <div className=\"toplistItemCenter\">\r\n        //                   <img className=\"toplistItemCenterImg\" />\r\n        //                 </div>\r\n        //               </div>\r\n        //               <div className='listItemDesc'>\r\n        //                 <p>岁末特别企划 EP04房东的猫X于翔北：不曾长大 重逢童年</p>\r\n        //                 <p>by 小怪兽</p>\r\n        //               </div>\r\n        //             </div>\r\n        //           </li>\r\n        //         )\r\n        //       })\r\n        //     }\r\n        //   </ul>\r\n        // </div>\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\VideoDetail\\VideoDetail.js",["1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport VideoSlider from '../../VideoSlider/VideoSlider';\r\nimport MyTextarea from '../Playlist/PlaylistDetail/MyTextarea';\r\nimport './VideoDetail.less'\r\nimport { exchangeDuration, exchangeTime } from '../../Utils';\r\nimport { Button } from 'antd';\r\n\r\n//图片资源\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';\r\nimport { useParams, withRouter } from 'react-router';\r\n\r\nfunction VideoDetail(props) {\r\n\r\n  //页面ref\r\n  const videoDetailRef = useRef()\r\n  const { id } = useParams()\r\n\r\n  /**\r\n   * 视频相关数据\r\n   */\r\n  //视频详情数据\r\n  const [mvDetailData, setMVDetailData] = useState({})\r\n  //视频播放地址\r\n  const [mvURL, setMVURL] = useState('')\r\n  //相关视频数据\r\n  const [relatedVideo, setRelatedVideo] = useState([]);\r\n\r\n\r\n  /**\r\n   * 评论相关数据\r\n   */\r\n  //热门评论数据\r\n  const [hotCommentData, setHotCommentData] = useState([]);\r\n  //评论数据\r\n  const [comments, setComments] = useState([])\r\n  //页面是否到达底部\r\n  const [arriveBottom, setArriveBottom] = useState(false);\r\n  //每页评论数据限制数量, 默认50\r\n  const [pageLimit, setPageLimit] = useState(50);\r\n  //评论数据当前页数\r\n  const [commentPage, setCommentPage] = useState(1);\r\n  //是否还有更多评论数据\r\n  const [isHasMoreComments, setIsHasMoreComments] = useState(true);\r\n\r\n\r\n\r\n  //获取视频数据-基本信息\r\n  const getMVData = async () => {\r\n    let params = {\r\n      id: id == 4 ? '3D3813C2422603A95BD5847554B512F2' : id,\r\n    }\r\n    let data = await HTTPUtils.video_detail(params);\r\n    console.log('mv 数据');\r\n    console.log(data);\r\n    setMVDetailData(data.data)\r\n  }\r\n\r\n  //获取视频播放地址\r\n  const getMVURL = async () => {\r\n    let params = {\r\n      id: id == 4 ? '3D3813C2422603A95BD5847554B512F2' : id\r\n    }\r\n    let data = await HTTPUtils.video_url(params);\r\n    console.log('mv 播放地址');\r\n    console.log(data);\r\n    setMVURL(data.urls && data.urls[0].url || '');\r\n  }\r\n\r\n\r\n  /**\r\n   * 相关视频 事件\r\n   */\r\n  //获取播放视频的相关视频\r\n  const getRelatedVideo = async () => {\r\n    let params = {\r\n      id: id == 4 ? '3D3813C2422603A95BD5847554B512F2' : id,\r\n    }\r\n    let data = await HTTPUtils.related_video(params);\r\n    console.log('推荐MV');\r\n    console.log(data);\r\n    setRelatedVideo(data.data);\r\n  }\r\n\r\n  //播放相关视频 \r\n  const navigateVideo = (item) => {\r\n    props.history.push('/video/' + item.vid)\r\n  }\r\n\r\n\r\n  //id变化, 需要重新获取video基本信息, 地址, 相关视频, 评论\r\n  useEffect(() => {\r\n    getMVData();\r\n    getMVComments()\r\n    getMVURL();\r\n    getRelatedVideo()\r\n  }, [id])\r\n\r\n  /**\r\n   * 防抖事件 处理滚动加载事件\r\n   */\r\n  //防抖事件\r\n  const debounceHandleScroll = (func, timeDelay) => {\r\n    let timer = null;\r\n    return function () {\r\n      console.log('scjjjjjjjjjjjjjjjjjjjjj');\r\n      if (timer) {\r\n        return;\r\n      }\r\n      timer = setTimeout(() => {\r\n        func();\r\n        timer = null;\r\n      }, timeDelay)\r\n    }\r\n  }\r\n\r\n  //事件-- 处理滚动事件\r\n  const handleScroll = () => {\r\n    if (videoDetailRef.current) {\r\n      //标签在评论列表\r\n      let currentElem = videoDetailRef.current;\r\n      //整个页面的滚动高度-即实际高度\r\n      let scrollHeight = currentElem.scrollHeight;\r\n      //整个页面已滚动的高度\r\n      let scrollTop = currentElem.scrollTop;\r\n      //整个页面的可视高度\r\n      const { height } = currentElem.getBoundingClientRect();\r\n      let scroll_to_bottom_distance = scrollHeight - scrollTop - height;\r\n      console.log(scroll_to_bottom_distance);\r\n      if (scroll_to_bottom_distance < 100) {\r\n        //当距离底部还有100px的时候, 执行加载评论操作\r\n        console.log('已经到达底部');\r\n        setArriveBottom(bottom => !bottom)\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  //页面加载一次\r\n  useEffect(() => {\r\n    //id: 14314092\r\n    getMVData();\r\n    getMVComments()\r\n    getMVURL();\r\n    getRelatedVideo()\r\n    console.log('页面加载一次');\r\n    console.log(videoDetailRef.current);\r\n    videoDetailRef.current?.addEventListener('scroll', debounceHandleScroll(handleScroll, 300))\r\n  }, [])\r\n\r\n\r\n  /**\r\n   * 评论组件和事件\r\n   */\r\n\r\n  //依赖 arriveBottom, 是否到达底部, 到达底部获取更多评论数据\r\n  useEffect(() => {\r\n    setCommentPage(commentPage + 1);\r\n  }, [arriveBottom])\r\n\r\n  //依赖commentPage 评论当前页数, 变化时, 需要加载更多评论数据\r\n  useEffect(() => {\r\n    getMVComments();\r\n  }, [commentPage])\r\n\r\n\r\n  //获取mv点赞/收藏/评论数据\r\n  const getMVComments = async () => {\r\n    let params = {\r\n      // id: '3D3813C2422603A95BD5847554B512F2'\r\n      id: id == 4 ? '3D3813C2422603A95BD5847554B512F2' : id,\r\n      limit: pageLimit,\r\n      offset: (commentPage - 1) * pageLimit\r\n    }\r\n    if (!isHasMoreComments) {\r\n      return;\r\n    }\r\n    let data = await HTTPUtils.comment_video(params);\r\n    console.log('点赞 收藏数据');\r\n    console.log(data);\r\n    let commentsData = commentPage == 1 ? data.comments : comments.concat(data.comments);\r\n    setComments(commentsData)\r\n    if (commentPage == 1) {\r\n      setHotCommentData(data.hotComments)\r\n    }\r\n    if (!data.more) {\r\n      setIsHasMoreComments(false)\r\n    }\r\n  }\r\n\r\n  //评论页面\r\n  const Comment = () => {\r\n    return (\r\n      <div className=\"comment\">\r\n        <MyTextarea comment={submitComment} />\r\n        <div className=\"comment-list\">\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>精彩评论</p>\r\n          <div>\r\n            {hotCommentData.map((item, index) => {\r\n              return <CommentItem key={item.commentId + index.toString()} data={item} />;\r\n            })}\r\n          </div>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>最新评论</p>\r\n          <div>\r\n            {comments.map((item, index) => {\r\n              return <CommentItem key={item.id + index.toString()} data={item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //评论item\r\n  //渲染---评论列表item\r\n  const CommentItem = ({ data }) => {\r\n    return (\r\n      <div className=\"list-item\">\r\n        <div className=\"list-item-left\" style={{ margin: \"5px 0\" }}>\r\n          <img src={data.user.avatarUrl + \"?param=50y50\"} />\r\n        </div>\r\n        <ul className=\"list-item-right\">\r\n          <li style={{ margin: \"5px 0\" }}>\r\n            {data.user.nickname}: {data.content}\r\n          </li>\r\n          {data.beReplied.length > 0 ? (\r\n            <li\r\n              className=\"list-item-reply\"\r\n            >\r\n              {data.beReplied[0]?.user?.nickname}: {data.beReplied[0]?.content}\r\n            </li>\r\n          ) : null}\r\n          <li className=\"list-item-date\">\r\n            <div>{exchangeTime(data.time)}</div>\r\n            <div>\r\n              <span className=\"tipoff marginHon10\">举报</span>\r\n              <img src={NoZanPng} className=\"commentImg marginHon10\" />\r\n              <span>{data.likedCount}</span>\r\n              <img src={ShareRound} className=\"commentImg marginHon10\" />\r\n              <img src={CommentRoundPng} className=\"commentImg marginHon10\" />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //事件---提交评论\r\n  const submitComment = (val) => {\r\n    console.log('提交评论')\r\n    console.log(val)\r\n  }\r\n\r\n\r\n  return (\r\n    <div ref={videoDetailRef} className='videoDetail'>\r\n      <div className='videoDetailContainer'>\r\n        <div className='mvAndSuggest'>\r\n          <div className=\"mvContainer\">\r\n            <VideoSlider path={mvURL} />\r\n            <div className='mvArtistInfo'>\r\n              <img src={(mvDetailData.creator && mvDetailData.creator?.avatarUrl) || ''} className=\"mvArtistInfoImg\" />\r\n              <p>{mvDetailData.creator?.nickname || '无名氏'}</p>\r\n            </div>\r\n            <p className='mvName'>{mvDetailData.title || ''}</p>\r\n            <p className='mvTime'><span>发布: {mvDetailData.publishTime || '2021-08-31'}</span><span>播放: {mvDetailData.playTime || 0}</span></p>\r\n            <ul className=\"mvDetailActions\">\r\n              <li className='mvDetailAction'><Button type='text'>点赞</Button></li>\r\n              <li className='mvDetailAction'><Button type='text'>收藏{mvDetailData.subscribeCount || 999}</Button></li>\r\n              <li className='mvDetailAction'><Button type='text'>分享{mvDetailData.shareCount || 999}</Button></li>\r\n              <li className='mvDetailAction'><Button type='text'>下载MV</Button></li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"suggestMVContainer\">\r\n            <p style={{ height: 30, lineHeight: '30px', fontWeight: 'bold', fontSize: 18 }}>相关推荐</p>\r\n            <ul className=\"suggestMVList\">\r\n              {\r\n                (relatedVideo instanceof Array) && relatedVideo.map((item, index) => {\r\n                  return (\r\n                    <li className=\"suggestMVListItem\" key={index} onClick={() => navigateVideo(item)}>\r\n                      <div style={{ height: '100%' }}>\r\n                        <div className=\"toplistItem\">\r\n                          <img className=\"toplistItemImg\" src={item.coverUrl + '?param=130y100'} />\r\n                          <div className=\"toplistItemRight\">\r\n                            <span>{Math.floor(item.playTime / 10000) + '万'}</span>\r\n                          </div>\r\n                          <div className=\"toplistItemCenter\">\r\n                            <img className=\"toplistItemCenterImg\" />\r\n                          </div>\r\n                        </div>\r\n                        <div className='listItemDesc'>\r\n                          <p>{item.title}</p>\r\n                          <p>by {item.creator && item.creator[0]?.userName}</p>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <Comment />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(VideoDetail)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Video\\Video\\Video.js",["1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, withRouter } from 'react-router';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';\r\nimport { exchangeDuration, exchangeTime } from '../../Utils';\r\nimport './Video.less'\r\n\r\n//图片资源\r\nimport PlayImg from \"@/images/Playlist/play.png\";\r\n\r\nfunction Video(props) {\r\n\r\n  //视频页面ref\r\n  const VideoRef = useRef();\r\n  const [videoGroupList, setVideoGroupList] = useState([]); //视频标签列表数据\r\n  const [selGroupID, setSelGroupID] = useState(\"0\"); //选中的视频标签item ID\r\n  const [isSpreadGroupList, setIsSpreadGroupList] = useState(false); //是否展开视频标签列表\r\n\r\n  //视频数据\r\n  const [videoData, setVideoData] = useState([]);\r\n  //视频数据页数\r\n  const [videoDataPage, setVideoDataPage] = useState(1);\r\n  //是否还有更多视频数据\r\n  const [isHasMoreData, setIsHasMoreData] = useState(true);\r\n  \r\n  //页面是否到达底部\r\n  const [arriveBottom, setArriveBottom] = useState(false);\r\n\r\n  /**\r\n   * 需要登录\r\n   * 获取视频系列接口-----------------------------------------------------------------\r\n   */\r\n  //接口---获取视频标签列表\r\n  const getVideoCatList = async () => {\r\n    let data = await HTTPUtils.video_group_list();\r\n    data.data.unshift({ id: \"0\", name: \"全部\" });\r\n    setSelGroupID(data.data[0].id);\r\n    setVideoGroupList(data.data);\r\n  };\r\n  //事件---视频标签item click点击事件\r\n  const selectVideoGroup = async (item) => {\r\n    setSelGroupID(item.id);\r\n    setIsHasMoreData(true);\r\n    setVideoDataPage(1)\r\n  };\r\n  //事件---展开/关闭视频标签列表\r\n  const changeGroupListHeight = () => {\r\n    setIsSpreadGroupList(!isSpreadGroupList);\r\n  };\r\n\r\n  //依赖 选中的标签 获取该标签下视频列表\r\n  useEffect(() => {\r\n    getVideoGroup(selGroupID);\r\n  }, [selGroupID, videoDataPage])\r\n\r\n  //接口---获取相应视频标签下视频列表\r\n  const getVideoGroup = async (id) => {\r\n    if (id == 0) {\r\n      getAllVideo()\r\n      return;\r\n    }\r\n    let obj = {\r\n      id: id,\r\n      offset: (videoDataPage-1) * 20\r\n    };\r\n    let data = await HTTPUtils.video_group(obj);\r\n    console.log(\"视频\");\r\n    console.log(data);\r\n    // let data = await HTTPUtils.video_timeline_all();\r\n    //滚动加载数据\r\n    let pageData = videoDataPage == 1 ? data.datas : videoData.concat(data.datas);\r\n    setVideoData(pageData);\r\n    if(!data.hasmore) {\r\n      //如果没有更多数据, 设置isHasMoreData, 该属性用于显示正在加载..或者已经到底文本\r\n      setIsHasMoreData(false)\r\n    }\r\n  };\r\n\r\n  //获取全部视频\r\n  const getAllVideo = async () => {\r\n    let params = {\r\n      offset: (videoDataPage - 1) * 8\r\n    }\r\n    let data = await HTTPUtils.video_timeline_all(params);\r\n    //滚动加载数据\r\n    let pageData = videoDataPage == 1 ? data.datas : videoData.concat(data.datas);\r\n    setVideoData(pageData);\r\n    if(!data.hasmore) {\r\n      //如果没有更多数据, 设置isHasMoreData, 该属性用于显示正在加载..或者已经到底文本\r\n      setIsHasMoreData(false)\r\n    }\r\n  }\r\n\r\n\r\n  //依赖 是否到达底部arriveBottom, 到达底部 videoDataPage + 1\r\n  useEffect(() => {\r\n    setVideoDataPage(videoDataPage + 1)\r\n  }, [arriveBottom])\r\n\r\n\r\n  /**\r\n   * 防抖事件 处理滚动加载事件\r\n   */\r\n  //防抖事件\r\n  const debounceHandleScroll = (func, timeDelay) => {\r\n    let timer = null;\r\n    return function() {\r\n      console.log('opopopopopopppo');\r\n      if(timer) {\r\n        return ;\r\n      }\r\n      timer = setTimeout(() => {\r\n        func();\r\n        timer = null;\r\n      }, timeDelay)\r\n    }\r\n  }\r\n\r\n  //事件-- 处理滚动事件\r\n  const handleScroll = () => {\r\n    if(VideoRef.current) {\r\n        //标签在评论列表\r\n        let currentElem = VideoRef.current;\r\n        //整个页面的滚动高度-即实际高度\r\n        let scrollHeight = currentElem.scrollHeight;\r\n        //整个页面已滚动的高度\r\n        let scrollTop = currentElem.scrollTop;\r\n        //整个页面的可视高度\r\n        const {height} = currentElem.getBoundingClientRect();\r\n        let scroll_to_bottom_distance = scrollHeight - scrollTop - height;\r\n        console.log(scroll_to_bottom_distance);\r\n        if(scroll_to_bottom_distance < 100) {\r\n          //当距离底部还有100px的时候, 执行加载评论操作\r\n          console.log('已经到达底部');\r\n          setArriveBottom(bottom => !bottom)\r\n          \r\n        }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    //获取标签列表\r\n    getVideoCatList();\r\n    //获取全部视频\r\n    getAllVideo()\r\n    //对页面添加滚动监听事件\r\n    VideoRef.current?.addEventListener('scroll', debounceHandleScroll(handleScroll, 500))\r\n  }, [])\r\n\r\n  /**\r\n   * 视频列表数据, 组件以及事件\r\n   */\r\n  //进入video详情页面\r\n  const navigateDetail = (item, index) => {\r\n    console.log('视频数据');\r\n    console.log(item);\r\n    props.history.push('/video/' + item.data.vid)\r\n  }\r\n\r\n  //视频item\r\n  const ListItem = ({ item, index }) => {\r\n    return (\r\n      <div\r\n        key={item.data?.vid || index.toString()}\r\n        className={`allPlItem is_video`}\r\n        onClick={() => navigateDetail(item, index)}\r\n        data-video={item.data.vid}\r\n      >\r\n        <div\r\n          className=\"allPlItemImgContainer\"\r\n        // onClick={() => playlistDetail(item)}\r\n        >\r\n          <img\r\n            // src={item.coverImgUrl + \"?param=280y280\"}\r\n            src={item.data?.coverUrl + \"?param=280y280\"}\r\n            className=\"allPlItemImgConMain\"\r\n          />\r\n          <div className=\"allPlItemImgContainerTL\">\r\n            <img src={PlayImg} className=\"deImg\" />\r\n            <span>{item.data?.playTime}</span>\r\n          </div>\r\n          <div\r\n            className=\"allPlItemImgContainerRB\"\r\n          >\r\n            {/* <img src={PlayHoverImg} className=\"rbImg\" /> */}\r\n            <span>{exchangeDuration(item.data.durationms)}</span>\r\n          </div>\r\n        </div>\r\n        <p className=\"allPlItemDesc\">{item.data?.title}</p>\r\n        <p>{item.data?.creator?.nickname || ''}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div ref={VideoRef} className='videoPage'>\r\n      <div\r\n        className={`videoGroupList\r\n                    ${isSpreadGroupList ? \"autoHeight\" : \"fixedHeight\"}\r\n                    `}\r\n      >\r\n        {videoGroupList.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={item.id}\r\n              className={`\r\n                                    videoGroupListItem \r\n                                    ${item.id == selGroupID\r\n                  ? \"videoGroupListItemActive\"\r\n                  : null\r\n                }\r\n                                `}\r\n              onClick={() => selectVideoGroup(item)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        style={{ borderBottom: \"1px solid red\", cursor: \"pointer\" }}\r\n        onClick={changeGroupListHeight}\r\n      >\r\n        <p style={{ color: \"red\", textAlign: \"right\", padding: \"0 20px\" }}>\r\n          展开\r\n        </p>\r\n      </div>\r\n      <div>\r\n\r\n      </div>\r\n      <div>\r\n        {\r\n          (videoData instanceof Array) && videoData.map((item, index) => {\r\n            return <ListItem item={item} key={index.toString()} index={index} />\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Video);","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Video\\MV\\MV.js",["1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, withRouter } from 'react-router';\r\nimport HTTPUtils from '../../HTTPUtils/HTTPUtils';\r\nimport { exchangeDuration, exchangeTime } from '../../Utils';\r\nimport './MV.less'\r\n\r\n//图片资源\r\nimport PlayImg from \"@/images/Playlist/play.png\";\r\n\r\nfunction MV(props) {\r\n\r\n  //视频页面ref\r\n  const MvRef = useRef();\r\n  const [videoGroupList, setVideoGroupList] = useState([]); //视频标签列表数据\r\n  const [selGroupID, setSelGroupID] = useState(\"0\"); //选中的视频标签item ID\r\n  const [isSpreadGroupList, setIsSpreadGroupList] = useState(false); //是否展开视频标签列表\r\n\r\n  //视频分类数据\r\n  //地区\r\n  const [areas, setAreas] = useState([\r\n    { id: -1, name: '全部'},\r\n    { id: 1, name: '内地'},\r\n    { id: 2, name: '港台'},\r\n    { id: 3, name: '欧美'},\r\n    { id: 4, name: '韩国'},\r\n    { id: 5, name: '日本'},\r\n  ]);\r\n  //类型\r\n  const [types, setTypes] = useState([\r\n    { id: -1, name: '全部'},\r\n    { id: 1, name: '官方版'},\r\n    { id: 2, name: '原声'},\r\n    { id: 3, name: '现场版'},\r\n    { id: 4, name: '网易出品'},\r\n  ]);\r\n  //排序\r\n  const [cats, setCats] = useState([\r\n    {id: 1, name: '上升最快'},\r\n    {id: 2, name: '最热'},\r\n    {id: 3, name: '最新'},\r\n  ]);\r\n  const [activeType, setActiveType] = useState({id: -1, name: '全部'}); //当前active的MV类型\r\n  const [activeArea, setActiveArea] = useState({id: -1, name: '全部'}); //当前active的地区\r\n  const [activeCat, setActiveCat] = useState({id: 1, name: '上升最快'}); //当前active的MV热度排序\r\n\r\n  //视频数据\r\n  const [mvData, setMVData] = useState([]);\r\n  //视频数据页数\r\n  const [mvDataPage, setMVDataPage] = useState(1);\r\n  //是否还有更多视频数据\r\n  const [isHasMoreData, setIsHasMoreData] = useState(true);\r\n  \r\n  //页面是否到达底部\r\n  const [arriveBottom, setArriveBottom] = useState(false);\r\n\r\n  /**\r\n   * 获取MV类型数据\r\n   */\r\n  /**\r\n   * \r\n   * @param {Number} id : 所选对应类别item的id\r\n   * @param {Number} type : 1为地区; 2为类型; 3为order排序\r\n   */\r\n   const selectCatItem = (id, type) => {\r\n    setMVDataPage(1)\r\n    switch(type) {\r\n      case 1:\r\n        setActiveArea(id);\r\n        break;\r\n      case 2:\r\n        setActiveType(id);\r\n        break;\r\n      case 3:\r\n        setActiveCat(id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  \r\n  // //依赖 选中的标签 获取该标签下视频列表\r\n  // useEffect(() => {\r\n  //   getVideoGroup(selGroupID);\r\n  // }, [selGroupID, videoDataPage])\r\n\r\n  // //接口---获取相应视频标签下视频列表\r\n  // const getVideoGroup = async (id) => {\r\n  //   if (id == 0) {\r\n  //     getAllVideo()\r\n  //     return;\r\n  //   }\r\n  //   let obj = {\r\n  //     id: id,\r\n  //     offset: (videoDataPage-1) * 20\r\n  //   };\r\n  //   let data = await HTTPUtils.video_group(obj);\r\n  //   console.log(\"视频\");\r\n  //   console.log(data);\r\n  //   // let data = await HTTPUtils.video_timeline_all();\r\n  //   //滚动加载数据\r\n  //   let pageData = videoDataPage == 1 ? data.datas : videoData.concat(data.datas);\r\n  //   setVideoData(pageData);\r\n  //   if(!data.hasmore) {\r\n  //     //如果没有更多数据, 设置isHasMoreData, 该属性用于显示正在加载..或者已经到底文本\r\n  //     setIsHasMoreData(false)\r\n  //   }\r\n  // };\r\n\r\n  // //获取全部视频\r\n  // const getAllVideo = async () => {\r\n  //   let params = {\r\n  //     offset: (videoDataPage - 1) * 8\r\n  //   }\r\n  //   let data = await HTTPUtils.video_timeline_all(params);\r\n  //   //滚动加载数据\r\n  //   let pageData = videoDataPage == 1 ? data.datas : videoData.concat(data.datas);\r\n  //   setVideoData(pageData);\r\n  //   if(!data.hasmore) {\r\n  //     //如果没有更多数据, 设置isHasMoreData, 该属性用于显示正在加载..或者已经到底文本\r\n  //     setIsHasMoreData(false)\r\n  //   }\r\n  // }\r\n\r\n  //获取全部MV\r\n  const getAllMV = async () => {\r\n    let params= {\r\n      area: activeArea.name,\r\n      type: activeType.name,\r\n      order: activeCat.name,\r\n      offset: (mvDataPage - 1) * 30\r\n    }\r\n    if(!isHasMoreData) {\r\n      return;\r\n    }\r\n    let data = await HTTPUtils.mv_all(params);\r\n    let mv_data = mvDataPage == 1 ? data.data : mvData.concat(data.data);\r\n    setMVData(mv_data)\r\n    if(!data.hasMore) {\r\n      setIsHasMoreData(false)\r\n    }\r\n  }\r\n\r\n  //依赖 activeArea, activeType, activeCat, 每次类型变化, 需要加载相对应类型的MV数据\r\n  useEffect(() => {\r\n    getAllMV();\r\n  }, [activeArea.name, activeType.name, activeCat.name, mvDataPage])\r\n\r\n\r\n  //依赖 是否到达底部arriveBottom, 到达底部 videoDataPage + 1\r\n  useEffect(() => {\r\n    setMVDataPage(mvDataPage + 1)\r\n  }, [arriveBottom])\r\n\r\n\r\n\r\n  /**\r\n   * 导航-进入MV详情页面\r\n   */\r\n  const navigateMVDetail = (item) => {\r\n    props.history.push('/mv/'+item.id)\r\n  }\r\n\r\n  /**\r\n   * 防抖事件 处理滚动加载事件\r\n   */\r\n  //防抖事件\r\n  const debounceHandleScroll = (func, timeDelay) => {\r\n    let timer = null;\r\n    return function() {\r\n      console.log('opopopopopopppo');\r\n      if(timer) {\r\n        return ;\r\n      }\r\n      timer = setTimeout(() => {\r\n        func();\r\n        timer = null;\r\n      }, timeDelay)\r\n    }\r\n  }\r\n\r\n  //事件-- 处理滚动事件\r\n  const handleScroll = () => {\r\n    if(MvRef.current) {\r\n        //标签在评论列表\r\n        let currentElem = MvRef.current;\r\n        //整个页面的滚动高度-即实际高度\r\n        let scrollHeight = currentElem.scrollHeight;\r\n        //整个页面已滚动的高度\r\n        let scrollTop = currentElem.scrollTop;\r\n        //整个页面的可视高度\r\n        const {height} = currentElem.getBoundingClientRect();\r\n        let scroll_to_bottom_distance = scrollHeight - scrollTop - height;\r\n        console.log(scroll_to_bottom_distance);\r\n        if(scroll_to_bottom_distance < 30) {\r\n          //当距离底部还有100px的时候, 执行加载评论操作\r\n          console.log('已经到达底部');\r\n          setArriveBottom(bottom => !bottom)\r\n          \r\n        }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    //获取MV\r\n    //获取全部视频\r\n    // getAllVideo()\r\n    //获取MV排行\r\n    getAllMV();\r\n    //对页面添加滚动监听事件\r\n    MvRef.current?.addEventListener('scroll', debounceHandleScroll(handleScroll, 500))\r\n  }, [])\r\n\r\n\r\n  //视频item\r\n  const ListItem = ({ item, index }) => {\r\n    return (\r\n      <div\r\n        key={item.data?.vid || index.toString()}\r\n        className={`allPlItem is_mv`}\r\n        onClick={() => navigateMVDetail(item)}\r\n        data-mv={item.id}\r\n      >\r\n        <div\r\n          className=\"allPlItemImgContainer\"\r\n        // onClick={() => playlistDetail(item)}\r\n        >\r\n          <img\r\n            // src={item.coverImgUrl + \"?param=280y280\"}\r\n            src={item.cover + \"?param=280y280\"}\r\n            className=\"allPlItemImgConMain\"\r\n          />\r\n          <div className=\"allPlItemImgContainerTL\">\r\n            <img src={PlayImg} className=\"deImg\" />\r\n            <span>{item.playCount}</span>\r\n          </div>\r\n          <div\r\n            className=\"allPlItemImgContainerRB\"\r\n          >\r\n            {/* <img src={PlayHoverImg} className=\"rbImg\" /> */}\r\n            <span>{exchangeDuration(item.duration)}</span>\r\n          </div>\r\n        </div>\r\n        <p className=\"allPlItemDesc\">{item.name}</p>\r\n        <p>{item.artistName || ''}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div ref={MvRef} className='videoPage'>\r\n      <div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">地区: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {areas.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeArea.id == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item, 1)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= areas.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">分类: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {types.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    className={`${\r\n                      activeType.id == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item, 2)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= types.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"itemOptions\">\r\n          <div className=\"itemOptionsRow itemOptionsRowLeft\">排序: </div>\r\n          <div className=\"itemOptionsRow itemOptionsRowRight\">\r\n            {cats.map((item, index) => {\r\n              return (\r\n                <span key={item.id+'_'+index} className=\"artistItemContainer\">\r\n                  <span\r\n                    key={item.id}\r\n                    className={`${\r\n                      activeCat.id == item.id ? \"activeItem\" : \"\"\r\n                    } artistItem`}\r\n                    onClick={() =>selectCatItem(item, 3)}\r\n                  >\r\n                    {item.name}\r\n                  </span>\r\n                  {index!= cats.length-1 ? <span style={{padding: '0 10px'}}>|</span> : null}\r\n                </span>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {\r\n          (mvData instanceof Array) && mvData.map((item, index) => {\r\n            return <ListItem item={item} key={item.id.toString()} index={index} />\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(MV);","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Home\\NewestSong\\AlbumsDetail\\AlbumsDetail.js",["1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410"],"import React, { useState, useEffect, useRef  } from \"react\";\r\nimport { Input, Pagination } from 'antd'\r\nimport { useParams } from 'react-router-dom'\r\nimport \"../../Playlist/PlaylistDetail/PlaylistDetail.less\";\r\nimport HTTPUtils from \"../../../HTTPUtils/HTTPUtils\";\r\nimport { exchangeTime, exchangeDuration } from \"@/Utils\";\r\n// import {AddWhitePng, PlayPng, SharePng, DownloadPng, DownPng, UpPng, ShoucangPng, NoShoucangPng, NoZanPng, ZanPng, ShareRound, CommentRoundPng, GenderMale, GenderFemale,  } from '../../../images/Playlist'\r\nimport AddPng from \"@/images/music/musicListItem/no-add.png\";\r\nimport SubPng from \"@/images/NewestSong/sub.png\";\r\nimport AddWhitePng from \"@/images/Playlist/addWhite.png\";\r\nimport PlayPng from \"@/images/Playlist/play.png\";\r\nimport SharePng from \"@/images/Playlist/share.png\";\r\nimport DownloadPng from \"@/images/NewestSong/download_round.png\";\r\nimport DownPng from \"@/images/Playlist/down.png\";\r\nimport UpPng from \"@/images/Playlist/up.png\";\r\nimport ShoucangPng from \"@/images/Playlist/shoucang.png\";\r\nimport NoShoucangPng from \"@/images/Playlist/noshoucang.png\";\r\nimport NoZanPng from \"@/images/Playlist/no-zan.png\";\r\nimport ZanPng from \"@/images/Playlist/zan.png\";\r\nimport ShareRound from \"@/images/Playlist/share-round.png\";\r\nimport CommentRoundPng from \"@/images/Playlist/comment-round.png\";\r\nimport GenderMale from \"@/images/Playlist/gender-male.png\";\r\nimport GenderFemale from \"@/images/Playlist/gender-female.png\";\r\nimport MyTextarea from '../../Playlist/PlaylistDetail/MyTextarea';\r\n//react相关插件 数据\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\nimport { addToPlaylist, deleteAllSongs, deleteSong, getSongs, setSongs, setActive } from '../../../store/actions/playlistActions'\r\n\r\nlet is_scroll_listener = null;\r\n\r\nfunction AblumsDetail(props) {\r\n  //Ref\r\n  const playlistDetailRef = useRef();\r\n  //歌单id: 6781111608\r\n  const {id} = useParams()\r\n  //数据---歌单简介-展开与收齐(boolean);\r\n  const [desExpand, setDesExpand] = useState(false);\r\n  //数据---歌单详情--评论--评论输入框val\r\n  const [commentVal, setCommentVal] = useState(\"\");\r\n  //数据---歌单tab index  1:歌曲列表; 2: 评论列表; 3: 收藏列表\r\n  const [tabIndex, setTabIndex] = useState(\"1\");\r\n  const [arriveBottom, setArriveBottom] = useState(false)\r\n\r\n  /**\r\n   * 歌单数据\r\n   */\r\n  const [albumCount, setAlbumCount] = useState({})//专辑收藏数, 分享数, 评论数\r\n  const [basicData, setBasicData] = useState({}); //歌单基本信息(封面, 描述, 创建者etc)\r\n  const [songsData, setSongsData] = useState([]); //获取歌单中已加载的歌曲列表\r\n  const [allSongsData, setAllSongsData] = useState([]);//歌单中所有歌曲的信息\r\n  const [songsIdData, setSongsIdData] = useState([]);//所有歌曲track id;\r\n  const [currentPage, setCurrentPage] = useState(1);//当前页数\r\n  const [pageSize, setPageSize] = useState(40);//每页显示数量\r\n\r\n\r\n  /**\r\n   * 评论数据\r\n   */\r\n  const [hotCommentData, setHotCommentData] = useState([]); //精彩评论数据\r\n  const [comments, setComments] = useState([]); //最新评论数据\r\n  const [commentPage, setCommentPage] = useState(1);//当前请求评论数据的页数, 用于计算offset\r\n  const [hasMoreComments, setHasMoreComments] = useState(true);\r\n\r\n  //事件---展开/收起歌单简介\r\n  const changeDesExpand = () => {\r\n    setDesExpand(!desExpand);\r\n  };\r\n  //事件--改变tab index, 切换标签 歌曲列表, 评论列表, 收藏列表\r\n  const changeTabIndex = (event) => {\r\n    if (event.target.id) {\r\n      console.log(typeof event.target.id);\r\n      let id = event.target.id;\r\n      console.log(id);\r\n      setTabIndex(id);\r\n      \r\n    }\r\n  };\r\n\r\n  /**\r\n   * 专辑列表事件\r\n   */\r\n\r\n  //事件---专辑相关数据(收藏数, 分享数, 评论数)\r\n  const getAlbumBasicData = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n      offset: '100'\r\n    };\r\n    // let data = await HTTPUtils.playlist_detail(params);\r\n    let data = await HTTPUtils.album_detail_dynamic(params);\r\n    setAlbumCount(data)\r\n  };\r\n  //事件---歌单列表相关数据\r\n  const getAlbumDetailData = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n    };\r\n    // let data = await HTTPUtils.playlist_detail(params);\r\n    let data = await HTTPUtils.album(params);\r\n    console.log('专辑相关数据223323');\r\n    console.log(data);\r\n    setBasicData(data.album);\r\n    setSongsData(data.songs)\r\n  };\r\n  //事件--双击歌曲播放歌曲\r\n  const playSong = (data) => {\r\n    let songs = props.songs;\r\n    let activeSong = props.activeSong;\r\n    let filterArr = songs.filter(item => item.id == data.id);\r\n    //判断播放列表中是否有该歌曲\r\n    let is_have_this_song = filterArr.length != 0;\r\n    //是否与当前播放的歌曲是同一首\r\n    let is_equal_active_song = data.id == activeSong.data?.id;\r\n    if(!is_equal_active_song) {\r\n      props.setActiveSong(data);\r\n      if(!is_have_this_song) {\r\n        //如果播放列表中没有当前播放的歌曲, 那么将该歌曲添加到播放列表\r\n        props.addSong(data)\r\n      }\r\n    }\r\n  }\r\n  //获取所有歌曲详情\r\n  const getSongsDetailDesc = async () => {\r\n    let idStr = '';\r\n    songsIdData.map((item, index) => {\r\n      idStr = idStr == '' ? item.id : idStr + ',' + item.id\r\n    })\r\n    console.log('所有歌曲id');\r\n    console.log(idStr);\r\n    //id字符串是否为空, true: 不为空; false: 为空字符串, 即没有歌曲id\r\n    let is_bool_idstr = (idStr instanceof String) && idStr.length > 0;\r\n    if(!is_bool_idstr) {\r\n      let params = {\r\n        ids: idStr\r\n      }\r\n      let data = await HTTPUtils.song_detail(params);\r\n      console.log('所有歌曲详细数据');\r\n      console.log(data);\r\n      setAllSongsData(data.songs)\r\n      // props.addSong(data.songs)\r\n      let start = pageSize * (currentPage - 1);\r\n      let end = pageSize * (currentPage);\r\n      let showSongsData = data.songs.slice(start, end);\r\n      console.log(start);\r\n      console.log(end);\r\n      console.log(showSongsData);\r\n      setSongsData(showSongsData)\r\n    }\r\n  }\r\n\r\n  //当所有歌曲id数据变化, 并且所有歌单id数据的数量大于0时, 获取所有歌曲详细信息\r\n  useEffect(() => {\r\n    if(songsIdData.length > 0 && (songsIdData instanceof Array)) {\r\n      getSongsDetailDesc();\r\n    }\r\n  }, [songsIdData])\r\n\r\n  //事件--切换页数change\r\n  const changeCurrentPage = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  //事件--切换每页显示数量\r\n  const changePageSize = (current, size) => {\r\n    console.log('change page size');\r\n    console.log(current);\r\n    console.log(size);\r\n    setPageSize(size)\r\n  }\r\n\r\n  //依赖 页数/每页显示数量改变时, 需要改变歌单歌曲列表数据\r\n  useEffect(() => {\r\n    let start = pageSize * (currentPage - 1);\r\n    let end = pageSize * currentPage;\r\n    let showSongsData = allSongsData.slice(start, end);\r\n    setSongsData(showSongsData);\r\n    console.log('依赖 依赖');\r\n    console.log(currentPage);\r\n    console.log(pageSize);\r\n    console.log(end);\r\n    console.log(start);\r\n  }, [currentPage, pageSize])\r\n\r\n\r\n  /**\r\n   * 事件---歌单评论相关事件\r\n   */\r\n  //歌单评论--header输入框输入change事件\r\n  const commentValChange = (event) => {\r\n    // console.log(val.)\r\n    let val = event.target.value;\r\n    // console.log(event.target.blur())\r\n    setCommentVal(val);\r\n  };\r\n  //事件---提交评论\r\n  const submitComment = (val) => {\r\n    console.log('提交评论')\r\n    console.log(val)\r\n  }\r\n  //歌单评论---header评论按钮事件\r\n  const headerComment = () => {};\r\n\r\n  //事件--歌单评论数据\r\n  const getPlaylistComments = async () => {\r\n    // let id = \"5472305020\";\r\n    let params = {\r\n      id,\r\n      limit: 50,\r\n      offset: (commentPage-1) * 50\r\n    };\r\n    if(!hasMoreComments) {\r\n      //已经没有更多评论了, 不用再请求接口了\r\n      return;\r\n    }\r\n    let data = await HTTPUtils.comment_album(params);\r\n    console.log('专辑评论数据');\r\n    console.log(data);\r\n    if(data.hotComments) {\r\n      setHotCommentData(data.hotComments);\r\n    }\r\n    let newComments = commentPage == 1 ? data.comments : comments.concat(data.comments);\r\n\r\n    setComments(newComments);\r\n    //追加完评论数据, 需要重新设置是否到达底部属性为false, \r\n    setArriveBottom(false)\r\n    if(!(data.more)) {\r\n      setHasMoreComments(false)\r\n    }\r\n\r\n  };\r\n\r\n  //依赖 评论加载数据的页数, 每次变化, 都要重新追加评论数据\r\n  useEffect(() => {\r\n    if(tabIndex == 2) {\r\n      getPlaylistComments();\r\n    }\r\n  }, [commentPage])\r\n\r\n  //依赖 arriveBottom 是否到达底部; 单独拎出来一个中间属性, 因为闭包情况下 tab index 总是为1, 不会变化\r\n  useEffect(() => {\r\n    console.log('use effect arrive bottom');\r\n    console.log(arriveBottom);\r\n    if(arriveBottom) {\r\n      if(tabIndex == 2) {\r\n        //加载新的评论数据\r\n        setCommentPage(commentPage+1)\r\n      }\r\n    }\r\n  }, [arriveBottom])\r\n\r\n\r\n  /**\r\n   * 防抖事件 处理滚动加载事件\r\n   */\r\n  //防抖事件\r\n  const debounceHandleScroll = (func, timeDelay) => {\r\n    let timer = null;\r\n    return function() {\r\n      if(timer) {\r\n        return ;\r\n      }\r\n      timer = setTimeout(() => {\r\n        func();\r\n        timer = null;\r\n      }, timeDelay)\r\n    }\r\n  }\r\n\r\n  //事件-- 处理滚动事件\r\n  const handleScroll = () => {\r\n    if(playlistDetailRef.current) {\r\n      console.log(tabIndex);\r\n        //标签在评论列表\r\n        let currentElem = playlistDetailRef.current;\r\n        //整个页面的滚动高度-即实际高度\r\n        let scrollHeight = currentElem.scrollHeight;\r\n        //整个页面已滚动的高度\r\n        let scrollTop = currentElem.scrollTop;\r\n        //整个页面的可视高度\r\n        const {height} = currentElem.getBoundingClientRect();\r\n        let scroll_to_bottom_distance = scrollHeight - scrollTop - height;\r\n        console.log(scroll_to_bottom_distance);\r\n        if(scroll_to_bottom_distance < 100) {\r\n          //当距离底部还有100px的时候, 执行加载评论操作\r\n          console.log('jjjjjj')\r\n          console.log(commentPage);\r\n          setArriveBottom(bottom => !bottom)\r\n          \r\n        }\r\n    }\r\n  }\r\n\r\n  //进入页面, useEffect事件--只调用一次\r\n  useEffect(async () => {\r\n    await getAlbumBasicData();\r\n    await getAlbumDetailData()\r\n    await getPlaylistComments();\r\n    // await getPlaylistSubcribers();\r\n    playlistDetailRef.current?.addEventListener('scroll', debounceHandleScroll(handleScroll, 300))\r\n  }, []);\r\n  \r\n\r\n  //渲染--渲染歌单列表item\r\n  const ListItem = ({ data, index }) => {\r\n    index += 1;\r\n    index = index < 10 ? \"0\" + index : index;\r\n    let activeId = props.activeSong?.data?.id ? props.activeSong?.data?.id : null;\r\n    return (\r\n      <ul\r\n        data-song={JSON.stringify(data)}\r\n        className={`content-header fontsize18 is_song canSelectItem ${\r\n          (index - 1) % 2 == 0 ? \"backGray\" : \"\"\r\n        } ${activeId == data.id ? \"activeListItem\" : \"\"}` }\r\n        tabIndex={index}\r\n        onDoubleClick={() => playSong(data)}\r\n      >\r\n        <li className=\"content-header-item flex4\">\r\n          <ul className=\"item-flex\">\r\n            <li className=\"item-flex-item txtLightGray\">{index}</li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={NoShoucangPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <img src={DownloadPng} className=\"img15\" />\r\n            </li>\r\n            <li className=\"item-flex-item\">\r\n              <p style={{ margin: 0, padding: 0 }}>{data?.name}</p>\r\n            </li>\r\n            <ul className=\"header-item-right\">\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">SQ</span>\r\n              </li>\r\n              <li className=\"item-flex-item \">\r\n                <span className=\"txtRed borderRedColor clickItem\">MV</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">VIP</span>\r\n              </li>\r\n              <li className=\"item-flex-item\">\r\n                <span className=\"txtRed borderRedColor\">试听</span>\r\n              </li>\r\n            </ul>\r\n          </ul>\r\n        </li>\r\n        <li className={`content-header-item flex2 txtCenter ${activeId != data.id ? \"txtLightGray\" : \"\"}`}>\r\n          {data?.ar.map((z, i) => {\r\n            if (i == data?.ar.length - 1) {\r\n              return z.name;\r\n            }\r\n            return z.name + \"/\";\r\n          })}\r\n        </li>\r\n        <li className={`content-header-item flex2 txtCenter ${activeId != data.id ? \"txtLightGray\" : \"\"}`}>\r\n          {data?.al?.name}\r\n        </li>\r\n        <li className={`content-header-item flex2 txtCenter ${activeId != data.id ? \"txtLightGray\" : \"\"}`}>{exchangeDuration(data.dt)}</li>\r\n      </ul>\r\n    );\r\n  };\r\n  //渲染---评论列表item\r\n  const CommentItem = ({ data }) => {\r\n    return (\r\n      <div className=\"list-item\">\r\n        <div className=\"list-item-left\" style={{ margin: \"5px 0\" }}>\r\n          <img src={data.user.avatarUrl + \"?param=50y50\"} />\r\n        </div>\r\n        <ul className=\"list-item-right\">\r\n          <li style={{ margin: \"5px 0\" }}>\r\n            {data.user.nickname}: {data.content}\r\n          </li>\r\n          {data.beReplied.length > 0 ? (\r\n            <li\r\n              className=\"list-item-reply\"\r\n            >\r\n              {data.beReplied[0]?.user?.nickname}: {data.beReplied[0]?.content}\r\n            </li>\r\n          ) : null}\r\n          <li className=\"list-item-date\">\r\n            <div>{exchangeTime(data.time)}</div>\r\n            <div>\r\n              <span className=\"tipoff marginHon10\">举报</span>\r\n              <img src={NoZanPng} className=\"commentImg marginHon10\" />\r\n              <span>{data.likedCount}</span>\r\n              <img src={ShareRound} className=\"commentImg marginHon10\" />\r\n              <img src={CommentRoundPng} className=\"commentImg marginHon10\" />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //渲染--歌单详情主要内容\r\n  const RenderContent = () => {\r\n    switch (tabIndex) {\r\n      case \"1\":\r\n        return <Content />;\r\n      case \"2\":\r\n        return <Comment/>;\r\n      // case \"3\":\r\n      //   return <Collection/>;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //渲染--歌曲列表\r\n  const Content = () => {\r\n    return (\r\n      <div className=\"content\">\r\n        <ul className=\"content-header\">\r\n          <li className=\"content-header-item txtCenter flex4 txtLightGray\">\r\n            音乐标题\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            歌手\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            专辑\r\n          </li>\r\n          <li className=\"content-header-item txtCenter flex2 txtLightGray\">\r\n            时长\r\n          </li>\r\n        </ul>\r\n        {songsData.map((item, index) => {\r\n          return <ListItem key={item.id} data={item} index={index} />;\r\n        })}\r\n        <Pagination total={allSongsData.length} showSizeChanger showQuickJumper current={currentPage} pageSize={pageSize} hideOnSinglePage onChange={changeCurrentPage} onShowSizeChange={changePageSize}></Pagination>\r\n      </div>\r\n    );\r\n  };\r\n  //评论页面\r\n  const Comment = () => {\r\n    return (\r\n      <div className=\"comment\">\r\n        <MyTextarea comment={submitComment}/>\r\n        <div className=\"comment-list\">\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>精彩评论</p>\r\n          <div>\r\n            {hotCommentData.map((item, index) => {\r\n              return <CommentItem key={item.commentId + index.toString()} data={item} />;\r\n            })}\r\n          </div>\r\n          <p style={{ fontWeight: \"bold\", fontSize: 20 }}>最新评论</p>\r\n          <div>\r\n            {comments.map((item, index) => {\r\n              return <CommentItem key={item.id+ index.toString()} data={item} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 事件\r\n   */\r\n  //重置歌曲列表数据为该歌单\r\n  const addPlaylist = () => {\r\n    console.log('reset');\r\n    props.resetSongsData(allSongsData)\r\n  }\r\n  //事件--将歌单数据加入播放列表\r\n  const addAllSongToPlaylist = (event) => {\r\n    console.log('add all song');\r\n    event.stopPropagation()\r\n    props.addSong(allSongsData)\r\n  }\r\n  //事件--收藏/取消收藏歌单\r\n  const subcribePlaylist = async () => {\r\n    let params = {\r\n      t: 1,\r\n      id,\r\n    }\r\n    let data = await HTTPUtils.playlist_subscribe(params)\r\n    console.log('收藏歌单');\r\n    console.log(data);\r\n  }\r\n\r\n  //专辑详情页面\r\n  return (\r\n    <div className=\"playlist-detail\" ref={playlistDetailRef}>\r\n      <div className=\"playlist-detail-header\">\r\n        <div className=\"header-left headerPadding5\">\r\n          <img\r\n            className=\"header-left-img border-radius-20\"\r\n            src={basicData.picUrl + '?param=200y200'}\r\n          />\r\n        </div>\r\n        <div className=\"header-right\">\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <span\r\n              className=\"border-text headerPadding5\"\r\n              style={{ borderRadius: 5 }}\r\n            >\r\n              专辑\r\n            </span>\r\n            <span className=\"playlist-name headerPadding5\">\r\n              {basicData.name}\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row lineheight40\">\r\n            <img\r\n              src={basicData.artist?.picUrl}\r\n              style={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n            />\r\n            <span className=\"headerPadding5\">\r\n              {basicData.artist?.name}\r\n            </span>\r\n            <span className=\"headerPadding5\">\r\n              {exchangeTime(basicData.publishTime, 1)}创建\r\n            </span>\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row \">\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 bkCommonColor marginVer5 whiteCol\" onClick={addPlaylist}>\r\n              <img src={PlayPng} className=\"img25 marginHon5\" />\r\n              <span className=\"height25Vertical padding5\">播放全部</span>\r\n              <img src={AddWhitePng} className=\"img25 marginHon5\" onClick={(event) => addAllSongToPlaylist(event)}/>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer \" onClick={subcribePlaylist}>\r\n              <img src={SubPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                收藏({albumCount.subCount})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={ShareRound} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">\r\n                分享({albumCount.shareCount})\r\n              </span>\r\n            </button>\r\n            <button className=\"defineBtn border-radius-20 headerPadding5 marginVer\">\r\n              <img src={DownloadPng} className=\"img25 \" />\r\n              <span className=\"height25Vertical padding5\">下载全部</span>\r\n            </button>\r\n          </div>\r\n          {/* <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>标签:</span>\r\n            <span style={{ padding: \"0 10px\" }}>\r\n              {basicData.tags?.map((item, index) => {\r\n                return (\r\n                  <span key={index} style={{ padding: \"0 5px\" }}>\r\n                    {index == basicData.tags?.length - 1\r\n                      ? item\r\n                      : item + \" \" + \"/\"}\r\n                  </span>\r\n                );\r\n              })}\r\n            </span>\r\n          </div> */}\r\n          <div className=\"headerPadding5 header-right-row lineheight50 fongsize20\">\r\n            <span>歌曲数目: {songsData.length}首</span>\r\n            {/* <span className=\"marginHon10\">\r\n              播放量: {parseInt(basicData.playCount / 10000)}万\r\n            </span> */}\r\n          </div>\r\n          <div className=\"headerPadding5 header-right-row playlist-des\">\r\n            <span\r\n              style={{\r\n                display: \"inline-block\",\r\n                height: !desExpand ? 20 : \"auto\",\r\n                overflow: \"hidden\",\r\n                width: \"90%\",\r\n              }}\r\n            >\r\n              {basicData.description}\r\n            </span>\r\n            <span\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 10,\r\n                top: 5,\r\n                display: \"inline-block\",\r\n                width: 60,\r\n                textAlign: \"center\",\r\n              }}\r\n              onClick={changeDesExpand}\r\n            >\r\n              <img src={!desExpand ? DownPng : UpPng} className=\"img15\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"playlist-detail-content\">\r\n        <ul className=\"tabs\" onClick={changeTabIndex}>\r\n          <li\r\n            id=\"1\"\r\n            className={`tab ${tabIndex === \"1\" ? \"tab-active\" : null}`}\r\n          >\r\n            歌曲列表\r\n          </li>\r\n          <li\r\n            id=\"2\"\r\n            className={`tab ${tabIndex === \"2\" ? \"tab-active\" : null}`}\r\n          >\r\n            评论({albumCount.commentCount})\r\n          </li>\r\n          {/* <li\r\n            id=\"3\"\r\n            className={`tab ${tabIndex === \"3\" ? \"tab-active\" : null}`}\r\n          >\r\n            收藏者\r\n          </li> */}\r\n        </ul>\r\n        <RenderContent />\r\n        {/* <Comment/> */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    songs: state.playlistReducer.data,\r\n    activeSong: state.playlistReducer.active\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addSong: (data) => {\r\n      dispatch(addToPlaylist(data));\r\n    },\r\n    deleteSong: (data) => {\r\n      dispatch(deleteSong(data))\r\n    },\r\n    deleteAllSongs: () => {\r\n      dispatch(deleteAllSongs())\r\n    },\r\n    resetSongsData: data => {\r\n      //重新赋值播放列表\r\n      dispatch(setSongs(data))\r\n    },\r\n    setActiveSong: data => {\r\n      dispatch(setActive(data))\r\n    }\r\n  }\r\n}\r\n\r\nconst AblumsDetailContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AblumsDetail)\r\n\r\nexport default withRouter(AblumsDetailContainer)\r\n// export default withRouter(PlaylistDetail)\r\n","D:\\react\\自己的文件\\Netease_react\\Netease_react\\src\\Utils\\Tools.js",[],{"ruleId":"1411","severity":1,"message":"1412","line":6,"column":10,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":27},{"ruleId":"1415","replacedBy":"1416"},{"ruleId":"1417","replacedBy":"1418"},{"ruleId":"1411","severity":1,"message":"1419","line":6,"column":10,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1420","line":7,"column":17,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1422","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1423","line":10,"column":8,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1424","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1425","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1426","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1427","line":14,"column":10,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1428","line":15,"column":22,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1429","line":15,"column":30,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":68,"column":38,"nodeType":"1432","messageId":"1433","endLine":68,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1434","line":89,"column":21,"nodeType":"1432","messageId":"1433","endLine":89,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":107,"column":24,"nodeType":"1432","messageId":"1433","endLine":107,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1435","line":167,"column":11,"nodeType":"1413","messageId":"1414","endLine":167,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":236,"column":43,"nodeType":"1432","messageId":"1433","endLine":236,"endColumn":45},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1439","line":2,"column":34,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1440","line":3,"column":8,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1441","line":5,"column":8,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1442","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1427","line":7,"column":10,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1429","line":8,"column":10,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1428","line":8,"column":17,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1443","line":8,"column":31,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1444","line":25,"column":22,"nodeType":"1413","messageId":"1414","endLine":25,"endColumn":33},{"ruleId":"1445","severity":1,"message":"1446","line":27,"column":5,"nodeType":"1413","endLine":27,"endColumn":14,"suggestions":"1447"},{"ruleId":"1430","severity":1,"message":"1431","line":49,"column":61,"nodeType":"1432","messageId":"1433","endLine":49,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1434","line":33,"column":42,"nodeType":"1432","messageId":"1433","endLine":33,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1434","line":63,"column":20,"nodeType":"1432","messageId":"1433","endLine":63,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1434","line":63,"column":48,"nodeType":"1432","messageId":"1433","endLine":63,"endColumn":50},{"ruleId":"1430","severity":1,"message":"1434","line":73,"column":20,"nodeType":"1432","messageId":"1433","endLine":73,"endColumn":22},{"ruleId":"1448","severity":1,"message":"1449","line":86,"column":34,"nodeType":"1450","messageId":"1451","endLine":86,"endColumn":36},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1445","severity":1,"message":"1452","line":27,"column":15,"nodeType":"1450","endLine":31,"endColumn":6},{"ruleId":"1445","severity":1,"message":"1452","line":34,"column":15,"nodeType":"1450","endLine":40,"endColumn":6},{"ruleId":"1445","severity":1,"message":"1453","line":40,"column":8,"nodeType":"1454","endLine":40,"endColumn":23,"suggestions":"1455"},{"ruleId":"1445","severity":1,"message":"1452","line":42,"column":15,"nodeType":"1450","endLine":50,"endColumn":6},{"ruleId":"1445","severity":1,"message":"1456","line":50,"column":8,"nodeType":"1454","endLine":50,"endColumn":23,"suggestions":"1457"},{"ruleId":"1448","severity":1,"message":"1449","line":113,"column":41,"nodeType":"1450","messageId":"1451","endLine":113,"endColumn":43},{"ruleId":"1448","severity":1,"message":"1449","line":126,"column":34,"nodeType":"1450","messageId":"1451","endLine":126,"endColumn":36},{"ruleId":"1448","severity":1,"message":"1449","line":142,"column":35,"nodeType":"1450","messageId":"1451","endLine":142,"endColumn":37},{"ruleId":"1448","severity":1,"message":"1449","line":156,"column":37,"nodeType":"1450","messageId":"1451","endLine":156,"endColumn":39},{"ruleId":"1411","severity":1,"message":"1420","line":1,"column":27,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":36},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1440","line":3,"column":8,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1434","line":22,"column":61,"nodeType":"1432","messageId":"1433","endLine":22,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":22,"column":84,"nodeType":"1432","messageId":"1433","endLine":22,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":25,"column":190,"nodeType":"1432","messageId":"1433","endLine":25,"endColumn":192},{"ruleId":"1430","severity":1,"message":"1431","line":25,"column":213,"nodeType":"1432","messageId":"1433","endLine":25,"endColumn":215},{"ruleId":"1430","severity":1,"message":"1434","line":28,"column":61,"nodeType":"1432","messageId":"1433","endLine":28,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":28,"column":84,"nodeType":"1432","messageId":"1433","endLine":28,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":31,"column":189,"nodeType":"1432","messageId":"1433","endLine":31,"endColumn":191},{"ruleId":"1430","severity":1,"message":"1431","line":31,"column":212,"nodeType":"1432","messageId":"1433","endLine":31,"endColumn":214},{"ruleId":"1430","severity":1,"message":"1434","line":34,"column":61,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":84,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":37,"column":190,"nodeType":"1432","messageId":"1433","endLine":37,"endColumn":192},{"ruleId":"1430","severity":1,"message":"1431","line":37,"column":213,"nodeType":"1432","messageId":"1433","endLine":37,"endColumn":215},{"ruleId":"1430","severity":1,"message":"1434","line":40,"column":61,"nodeType":"1432","messageId":"1433","endLine":40,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":40,"column":84,"nodeType":"1432","messageId":"1433","endLine":40,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":43,"column":190,"nodeType":"1432","messageId":"1433","endLine":43,"endColumn":192},{"ruleId":"1430","severity":1,"message":"1431","line":43,"column":213,"nodeType":"1432","messageId":"1433","endLine":43,"endColumn":215},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":3,"column":10,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":3,"column":17,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":3,"column":26,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1440","line":4,"column":8,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":17},{"ruleId":"1445","severity":1,"message":"1458","line":37,"column":8,"nodeType":"1454","endLine":37,"endColumn":15,"suggestions":"1459"},{"ruleId":"1430","severity":1,"message":"1431","line":54,"column":44,"nodeType":"1432","messageId":"1433","endLine":54,"endColumn":46},{"ruleId":"1430","severity":1,"message":"1431","line":54,"column":103,"nodeType":"1432","messageId":"1433","endLine":54,"endColumn":105},{"ruleId":"1430","severity":1,"message":"1431","line":54,"column":158,"nodeType":"1432","messageId":"1433","endLine":54,"endColumn":160},{"ruleId":"1460","severity":1,"message":"1461","line":55,"column":17,"nodeType":"1462","endLine":55,"endColumn":117},{"ruleId":"1430","severity":1,"message":"1431","line":57,"column":45,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":47},{"ruleId":"1430","severity":1,"message":"1431","line":57,"column":100,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":102},{"ruleId":"1430","severity":1,"message":"1431","line":57,"column":159,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":161},{"ruleId":"1460","severity":1,"message":"1461","line":58,"column":17,"nodeType":"1462","endLine":58,"endColumn":117},{"ruleId":"1430","severity":1,"message":"1431","line":60,"column":45,"nodeType":"1432","messageId":"1433","endLine":60,"endColumn":47},{"ruleId":"1430","severity":1,"message":"1431","line":60,"column":104,"nodeType":"1432","messageId":"1433","endLine":60,"endColumn":106},{"ruleId":"1430","severity":1,"message":"1431","line":60,"column":163,"nodeType":"1432","messageId":"1433","endLine":60,"endColumn":165},{"ruleId":"1460","severity":1,"message":"1461","line":61,"column":17,"nodeType":"1462","endLine":61,"endColumn":117},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1439","line":2,"column":34,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1440","line":3,"column":8,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1463","line":21,"column":8,"nodeType":"1413","messageId":"1414","endLine":21,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1464","line":22,"column":8,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1465","line":24,"column":8,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1466","line":25,"column":8,"nodeType":"1413","messageId":"1414","endLine":25,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1467","line":30,"column":8,"nodeType":"1413","messageId":"1414","endLine":30,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1468","line":31,"column":8,"nodeType":"1413","messageId":"1414","endLine":31,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1469","line":33,"column":8,"nodeType":"1413","messageId":"1414","endLine":33,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1470","line":34,"column":8,"nodeType":"1413","messageId":"1414","endLine":34,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1471","line":37,"column":8,"nodeType":"1413","messageId":"1414","endLine":37,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1472","line":38,"column":8,"nodeType":"1413","messageId":"1414","endLine":38,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1473","line":40,"column":8,"nodeType":"1413","messageId":"1414","endLine":40,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1474","line":41,"column":8,"nodeType":"1413","messageId":"1414","endLine":41,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1475","line":43,"column":8,"nodeType":"1413","messageId":"1414","endLine":43,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1476","line":44,"column":8,"nodeType":"1413","messageId":"1414","endLine":44,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1477","line":48,"column":8,"nodeType":"1413","messageId":"1414","endLine":48,"endColumn":11},{"ruleId":"1411","severity":1,"message":"1478","line":49,"column":8,"nodeType":"1413","messageId":"1414","endLine":49,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1479","line":51,"column":8,"nodeType":"1413","messageId":"1414","endLine":51,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1480","line":52,"column":8,"nodeType":"1413","messageId":"1414","endLine":52,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1481","line":54,"column":8,"nodeType":"1413","messageId":"1414","endLine":54,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1482","line":55,"column":8,"nodeType":"1413","messageId":"1414","endLine":55,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1483","line":57,"column":8,"nodeType":"1413","messageId":"1414","endLine":57,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1484","line":59,"column":8,"nodeType":"1413","messageId":"1414","endLine":59,"endColumn":10},{"ruleId":"1411","severity":1,"message":"1485","line":61,"column":8,"nodeType":"1413","messageId":"1414","endLine":61,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1486","line":66,"column":7,"nodeType":"1413","messageId":"1414","endLine":66,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1487","line":79,"column":21,"nodeType":"1413","messageId":"1414","endLine":79,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1431","line":95,"column":21,"nodeType":"1432","messageId":"1433","endLine":95,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":98,"column":32,"nodeType":"1432","messageId":"1433","endLine":98,"endColumn":34},{"ruleId":"1411","severity":1,"message":"1488","line":101,"column":12,"nodeType":"1413","messageId":"1414","endLine":101,"endColumn":28},{"ruleId":"1430","severity":1,"message":"1431","line":132,"column":19,"nodeType":"1432","messageId":"1433","endLine":132,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":148,"column":17,"nodeType":"1432","messageId":"1433","endLine":148,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1489","line":152,"column":6,"nodeType":"1454","endLine":152,"endColumn":16,"suggestions":"1490"},{"ruleId":"1430","severity":1,"message":"1431","line":214,"column":14,"nodeType":"1432","messageId":"1433","endLine":214,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":220,"column":16,"nodeType":"1432","messageId":"1433","endLine":220,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":222,"column":16,"nodeType":"1432","messageId":"1433","endLine":222,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":226,"column":14,"nodeType":"1432","messageId":"1433","endLine":226,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":229,"column":14,"nodeType":"1432","messageId":"1433","endLine":229,"endColumn":16},{"ruleId":"1460","severity":1,"message":"1461","line":274,"column":17,"nodeType":"1462","endLine":278,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":281,"column":17,"nodeType":"1462","endLine":285,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":288,"column":17,"nodeType":"1462","endLine":292,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":295,"column":17,"nodeType":"1462","endLine":299,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1491","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1492","line":11,"column":7,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1439","line":2,"column":34,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1493","line":21,"column":10,"nodeType":"1413","messageId":"1414","endLine":21,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1494","line":21,"column":17,"nodeType":"1413","messageId":"1414","endLine":21,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1495","line":22,"column":10,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1496","line":22,"column":17,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":25},{"ruleId":"1430","severity":1,"message":"1434","line":75,"column":19,"nodeType":"1432","messageId":"1433","endLine":75,"endColumn":21},{"ruleId":"1445","severity":1,"message":"1452","line":87,"column":13,"nodeType":"1450","endLine":100,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":123,"column":12,"nodeType":"1432","messageId":"1433","endLine":123,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1431","line":169,"column":41,"nodeType":"1432","messageId":"1433","endLine":169,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":170,"column":41,"nodeType":"1432","messageId":"1433","endLine":170,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":171,"column":41,"nodeType":"1432","messageId":"1433","endLine":171,"endColumn":43},{"ruleId":"1460","severity":1,"message":"1461","line":176,"column":19,"nodeType":"1462","endLine":176,"endColumn":63},{"ruleId":"1460","severity":1,"message":"1461","line":203,"column":21,"nodeType":"1462","endLine":206,"endColumn":23},{"ruleId":"1460","severity":1,"message":"1461","line":208,"column":23,"nodeType":"1462","endLine":208,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1431","line":233,"column":47,"nodeType":"1432","messageId":"1433","endLine":233,"endColumn":49},{"ruleId":"1460","severity":1,"message":"1461","line":266,"column":17,"nodeType":"1462","endLine":269,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":271,"column":19,"nodeType":"1462","endLine":271,"endColumn":40},{"ruleId":"1460","severity":1,"message":"1461","line":292,"column":17,"nodeType":"1462","endLine":295,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":297,"column":19,"nodeType":"1462","endLine":297,"endColumn":40},{"ruleId":"1460","severity":1,"message":"1461","line":318,"column":17,"nodeType":"1462","endLine":321,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":323,"column":19,"nodeType":"1462","endLine":323,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1497","line":1,"column":17,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1498","line":7,"column":8,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1499","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1500","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1485","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1501","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1431","line":24,"column":20,"nodeType":"1432","messageId":"1433","endLine":24,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":30,"column":20,"nodeType":"1432","messageId":"1433","endLine":30,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":36,"column":20,"nodeType":"1432","messageId":"1433","endLine":36,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":42,"column":20,"nodeType":"1432","messageId":"1433","endLine":42,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1434","line":48,"column":19,"nodeType":"1432","messageId":"1433","endLine":48,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1434","line":48,"column":30,"nodeType":"1432","messageId":"1433","endLine":48,"endColumn":32},{"ruleId":"1430","severity":1,"message":"1434","line":48,"column":41,"nodeType":"1432","messageId":"1433","endLine":48,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1434","line":48,"column":51,"nodeType":"1432","messageId":"1433","endLine":48,"endColumn":53},{"ruleId":"1448","severity":1,"message":"1449","line":52,"column":28,"nodeType":"1450","messageId":"1451","endLine":52,"endColumn":30},{"ruleId":"1448","severity":1,"message":"1449","line":56,"column":44,"nodeType":"1450","messageId":"1451","endLine":56,"endColumn":46},{"ruleId":"1430","severity":1,"message":"1431","line":61,"column":50,"nodeType":"1432","messageId":"1433","endLine":61,"endColumn":52},{"ruleId":"1445","severity":1,"message":"1452","line":102,"column":13,"nodeType":"1450","endLine":107,"endColumn":4},{"ruleId":"1460","severity":1,"message":"1461","line":158,"column":9,"nodeType":"1462","endLine":161,"endColumn":11},{"ruleId":"1460","severity":1,"message":"1461","line":164,"column":13,"nodeType":"1462","endLine":167,"endColumn":15},{"ruleId":"1430","severity":1,"message":"1431","line":187,"column":42,"nodeType":"1432","messageId":"1433","endLine":187,"endColumn":44},{"ruleId":"1460","severity":1,"message":"1461","line":203,"column":23,"nodeType":"1462","endLine":206,"endColumn":25},{"ruleId":"1430","severity":1,"message":"1431","line":215,"column":52,"nodeType":"1432","messageId":"1433","endLine":215,"endColumn":54},{"ruleId":"1430","severity":1,"message":"1431","line":238,"column":43,"nodeType":"1432","messageId":"1433","endLine":238,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":258,"column":45,"nodeType":"1432","messageId":"1433","endLine":258,"endColumn":47},{"ruleId":"1430","severity":1,"message":"1431","line":259,"column":33,"nodeType":"1432","messageId":"1433","endLine":259,"endColumn":35},{"ruleId":"1460","severity":1,"message":"1461","line":271,"column":17,"nodeType":"1462","endLine":274,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":276,"column":19,"nodeType":"1462","endLine":276,"endColumn":58},{"ruleId":"1460","severity":1,"message":"1461","line":280,"column":19,"nodeType":"1462","endLine":280,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":282,"column":19,"nodeType":"1462","endLine":282,"endColumn":57},{"ruleId":"1460","severity":1,"message":"1461","line":288,"column":19,"nodeType":"1462","endLine":288,"endColumn":63},{"ruleId":"1445","severity":1,"message":"1452","line":32,"column":13,"nodeType":"1450","endLine":46,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":33,"column":27,"nodeType":"1432","messageId":"1433","endLine":33,"endColumn":29},{"ruleId":"1445","severity":1,"message":"1452","line":48,"column":13,"nodeType":"1450","endLine":50,"endColumn":4},{"ruleId":"1460","severity":1,"message":"1461","line":68,"column":17,"nodeType":"1462","endLine":71,"endColumn":19},{"ruleId":"1448","severity":1,"message":"1449","line":79,"column":55,"nodeType":"1450","messageId":"1451","endLine":79,"endColumn":57},{"ruleId":"1430","severity":1,"message":"1431","line":88,"column":38,"nodeType":"1432","messageId":"1433","endLine":88,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1431","line":94,"column":38,"nodeType":"1432","messageId":"1433","endLine":94,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1431","line":94,"column":53,"nodeType":"1432","messageId":"1433","endLine":94,"endColumn":55},{"ruleId":"1430","severity":1,"message":"1431","line":94,"column":68,"nodeType":"1432","messageId":"1433","endLine":94,"endColumn":70},{"ruleId":"1460","severity":1,"message":"1461","line":112,"column":19,"nodeType":"1462","endLine":112,"endColumn":41},{"ruleId":"1460","severity":1,"message":"1461","line":126,"column":17,"nodeType":"1462","endLine":126,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":128,"column":19,"nodeType":"1462","endLine":128,"endColumn":73},{"ruleId":"1460","severity":1,"message":"1461","line":132,"column":19,"nodeType":"1462","endLine":132,"endColumn":78},{"ruleId":"1411","severity":1,"message":"1502","line":7,"column":17,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1503","line":26,"column":17,"nodeType":"1413","messageId":"1414","endLine":26,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1504","line":53,"column":16,"nodeType":"1413","messageId":"1414","endLine":53,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1452","line":115,"column":13,"nodeType":"1450","endLine":122,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1434","line":128,"column":19,"nodeType":"1432","messageId":"1433","endLine":128,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1434","line":143,"column":21,"nodeType":"1432","messageId":"1433","endLine":143,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":168,"column":34,"nodeType":"1432","messageId":"1433","endLine":168,"endColumn":36},{"ruleId":"1430","severity":1,"message":"1434","line":174,"column":25,"nodeType":"1432","messageId":"1433","endLine":174,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":188,"column":34,"nodeType":"1432","messageId":"1433","endLine":188,"endColumn":36},{"ruleId":"1430","severity":1,"message":"1434","line":194,"column":25,"nodeType":"1432","messageId":"1433","endLine":194,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":209,"column":33,"nodeType":"1432","messageId":"1433","endLine":209,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1434","line":215,"column":25,"nodeType":"1432","messageId":"1433","endLine":215,"endColumn":27},{"ruleId":"1460","severity":1,"message":"1461","line":233,"column":19,"nodeType":"1462","endLine":237,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1505","line":20,"column":19,"nodeType":"1413","messageId":"1414","endLine":20,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1506","line":68,"column":9,"nodeType":"1413","messageId":"1414","endLine":68,"endColumn":22},{"ruleId":"1460","severity":1,"message":"1461","line":78,"column":11,"nodeType":"1462","endLine":81,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":82,"column":11,"nodeType":"1462","endLine":82,"endColumn":59},{"ruleId":"1411","severity":1,"message":"1507","line":109,"column":9,"nodeType":"1413","messageId":"1414","endLine":109,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":112,"column":29,"nodeType":"1432","messageId":"1433","endLine":112,"endColumn":31},{"ruleId":"1430","severity":1,"message":"1434","line":124,"column":42,"nodeType":"1432","messageId":"1433","endLine":124,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1434","line":138,"column":43,"nodeType":"1432","messageId":"1433","endLine":138,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":161,"column":49,"nodeType":"1432","messageId":"1433","endLine":161,"endColumn":51},{"ruleId":"1430","severity":1,"message":"1431","line":162,"column":50,"nodeType":"1432","messageId":"1433","endLine":162,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1434","line":164,"column":41,"nodeType":"1432","messageId":"1433","endLine":164,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1434","line":214,"column":21,"nodeType":"1432","messageId":"1433","endLine":214,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1452","line":279,"column":13,"nodeType":"1450","endLine":284,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1508","line":284,"column":6,"nodeType":"1454","endLine":284,"endColumn":18,"suggestions":"1509"},{"ruleId":"1445","severity":1,"message":"1452","line":295,"column":13,"nodeType":"1450","endLine":320,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1434","line":301,"column":21,"nodeType":"1432","messageId":"1433","endLine":301,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1510","line":320,"column":6,"nodeType":"1454","endLine":320,"endColumn":8,"suggestions":"1511"},{"ruleId":"1411","severity":1,"message":"1512","line":361,"column":11,"nodeType":"1413","messageId":"1414","endLine":361,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":385,"column":25,"nodeType":"1432","messageId":"1433","endLine":385,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":393,"column":25,"nodeType":"1432","messageId":"1433","endLine":393,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":408,"column":27,"nodeType":"1432","messageId":"1433","endLine":408,"endColumn":29},{"ruleId":"1460","severity":1,"message":"1461","line":419,"column":13,"nodeType":"1462","endLine":419,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":423,"column":13,"nodeType":"1462","endLine":423,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":457,"column":27,"nodeType":"1462","endLine":462,"endColumn":29},{"ruleId":"1460","severity":1,"message":"1461","line":463,"column":27,"nodeType":"1462","endLine":466,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1443","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1513","line":3,"column":10,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1514","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1515","line":7,"column":8,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1516","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1517","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1518","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1519","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1520","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1521","line":14,"column":8,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1522","line":15,"column":8,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1523","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1524","line":17,"column":8,"nodeType":"1413","messageId":"1414","endLine":17,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1525","line":18,"column":8,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1526","line":24,"column":9,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1527","line":24,"column":23,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":39},{"ruleId":"1411","severity":1,"message":"1528","line":28,"column":10,"nodeType":"1413","messageId":"1414","endLine":28,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1529","line":46,"column":10,"nodeType":"1413","messageId":"1414","endLine":46,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1530","line":46,"column":22,"nodeType":"1413","messageId":"1414","endLine":46,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":113,"column":33,"nodeType":"1432","messageId":"1433","endLine":113,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":115,"column":71,"nodeType":"1432","messageId":"1433","endLine":115,"endColumn":73},{"ruleId":"1411","severity":1,"message":"1531","line":139,"column":9,"nodeType":"1413","messageId":"1414","endLine":139,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":165,"column":15,"nodeType":"1462","endLine":173,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":166,"column":34,"nodeType":"1432","messageId":"1433","endLine":166,"endColumn":36},{"ruleId":"1460","severity":1,"message":"1461","line":197,"column":19,"nodeType":"1462","endLine":204,"endColumn":21},{"ruleId":"1460","severity":1,"message":"1461","line":230,"column":17,"nodeType":"1462","endLine":237,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1452","line":247,"column":13,"nodeType":"1450","endLine":252,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1532","line":252,"column":6,"nodeType":"1454","endLine":252,"endColumn":15,"suggestions":"1533"},{"ruleId":"1445","severity":1,"message":"1452","line":253,"column":13,"nodeType":"1450","endLine":257,"endColumn":4},{"ruleId":"1460","severity":1,"message":"1461","line":325,"column":23,"nodeType":"1462","endLine":328,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1534","line":45,"column":9,"nodeType":"1413","messageId":"1414","endLine":45,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1535","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1536","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1537","line":19,"column":8,"nodeType":"1413","messageId":"1414","endLine":19,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1538","line":33,"column":10,"nodeType":"1413","messageId":"1414","endLine":33,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1539","line":83,"column":9,"nodeType":"1413","messageId":"1414","endLine":83,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1540","line":95,"column":9,"nodeType":"1413","messageId":"1414","endLine":95,"endColumn":22},{"ruleId":"1445","severity":1,"message":"1452","line":98,"column":13,"nodeType":"1450","endLine":104,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1541","line":104,"column":6,"nodeType":"1454","endLine":104,"endColumn":8,"suggestions":"1542"},{"ruleId":"1430","severity":1,"message":"1431","line":113,"column":27,"nodeType":"1432","messageId":"1433","endLine":113,"endColumn":29},{"ruleId":"1460","severity":1,"message":"1461","line":121,"column":15,"nodeType":"1462","endLine":121,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":124,"column":15,"nodeType":"1462","endLine":124,"endColumn":58},{"ruleId":"1430","severity":1,"message":"1431","line":147,"column":19,"nodeType":"1432","messageId":"1433","endLine":147,"endColumn":21},{"ruleId":"1460","severity":1,"message":"1461","line":165,"column":11,"nodeType":"1462","endLine":165,"endColumn":61},{"ruleId":"1460","severity":1,"message":"1461","line":187,"column":15,"nodeType":"1462","endLine":187,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":189,"column":15,"nodeType":"1462","endLine":189,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":190,"column":15,"nodeType":"1462","endLine":190,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":202,"column":11,"nodeType":"1462","endLine":205,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":207,"column":24,"nodeType":"1432","messageId":"1433","endLine":207,"endColumn":26},{"ruleId":"1460","severity":1,"message":"1461","line":208,"column":13,"nodeType":"1462","endLine":211,"endColumn":15},{"ruleId":"1430","severity":1,"message":"1431","line":213,"column":24,"nodeType":"1432","messageId":"1433","endLine":213,"endColumn":26},{"ruleId":"1460","severity":1,"message":"1461","line":214,"column":13,"nodeType":"1462","endLine":217,"endColumn":15},{"ruleId":"1543","severity":1,"message":"1544","line":226,"column":5,"nodeType":"1545","messageId":"1546","endLine":233,"endColumn":6},{"ruleId":"1460","severity":1,"message":"1461","line":296,"column":11,"nodeType":"1462","endLine":299,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":314,"column":13,"nodeType":"1462","endLine":317,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":327,"column":15,"nodeType":"1462","endLine":327,"endColumn":65},{"ruleId":"1460","severity":1,"message":"1461","line":329,"column":15,"nodeType":"1462","endLine":329,"endColumn":69},{"ruleId":"1460","severity":1,"message":"1461","line":332,"column":15,"nodeType":"1462","endLine":332,"endColumn":54},{"ruleId":"1460","severity":1,"message":"1461","line":338,"column":15,"nodeType":"1462","endLine":338,"endColumn":56},{"ruleId":"1460","severity":1,"message":"1461","line":344,"column":15,"nodeType":"1462","endLine":344,"endColumn":59},{"ruleId":"1430","severity":1,"message":"1431","line":354,"column":28,"nodeType":"1432","messageId":"1433","endLine":354,"endColumn":30},{"ruleId":"1547","severity":1,"message":"1548","line":356,"column":36,"nodeType":"1432","messageId":"1549","endLine":356,"endColumn":37},{"ruleId":"1460","severity":1,"message":"1461","line":390,"column":15,"nodeType":"1462","endLine":390,"endColumn":75},{"ruleId":"1411","severity":1,"message":"1420","line":1,"column":27,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":36},{"ruleId":"1411","severity":1,"message":"1514","line":4,"column":8,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1431","line":109,"column":34,"nodeType":"1432","messageId":"1433","endLine":109,"endColumn":36},{"ruleId":"1430","severity":1,"message":"1431","line":128,"column":26,"nodeType":"1432","messageId":"1433","endLine":128,"endColumn":28},{"ruleId":"1448","severity":1,"message":"1449","line":146,"column":35,"nodeType":"1450","messageId":"1451","endLine":146,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":147,"column":63,"nodeType":"1432","messageId":"1433","endLine":147,"endColumn":65},{"ruleId":"1430","severity":1,"message":"1431","line":153,"column":32,"nodeType":"1432","messageId":"1433","endLine":153,"endColumn":34},{"ruleId":"1445","severity":1,"message":"1452","line":178,"column":13,"nodeType":"1450","endLine":186,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1550","line":186,"column":6,"nodeType":"1454","endLine":186,"endColumn":8,"suggestions":"1551"},{"ruleId":"1445","severity":1,"message":"1452","line":226,"column":13,"nodeType":"1450","endLine":228,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1552","line":228,"column":6,"nodeType":"1454","endLine":228,"endColumn":20,"suggestions":"1553"},{"ruleId":"1445","severity":1,"message":"1452","line":230,"column":13,"nodeType":"1450","endLine":232,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1554","line":232,"column":6,"nodeType":"1454","endLine":232,"endColumn":17,"suggestions":"1555"},{"ruleId":"1430","severity":1,"message":"1431","line":236,"column":20,"nodeType":"1432","messageId":"1433","endLine":236,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":238,"column":27,"nodeType":"1432","messageId":"1433","endLine":238,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":252,"column":37,"nodeType":"1432","messageId":"1433","endLine":252,"endColumn":39},{"ruleId":"1460","severity":1,"message":"1461","line":260,"column":15,"nodeType":"1462","endLine":260,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":263,"column":15,"nodeType":"1462","endLine":263,"endColumn":58},{"ruleId":"1460","severity":1,"message":"1461","line":293,"column":11,"nodeType":"1462","endLine":297,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":313,"column":22,"nodeType":"1432","messageId":"1433","endLine":313,"endColumn":24},{"ruleId":"1430","severity":1,"message":"1431","line":349,"column":21,"nodeType":"1432","messageId":"1433","endLine":349,"endColumn":23},{"ruleId":"1460","severity":1,"message":"1461","line":355,"column":13,"nodeType":"1462","endLine":358,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":394,"column":11,"nodeType":"1462","endLine":394,"endColumn":81},{"ruleId":"1460","severity":1,"message":"1461","line":451,"column":13,"nodeType":"1462","endLine":454,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":456,"column":15,"nodeType":"1462","endLine":459,"endColumn":17},{"ruleId":"1460","severity":1,"message":"1461","line":523,"column":11,"nodeType":"1462","endLine":527,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":553,"column":11,"nodeType":"1462","endLine":553,"endColumn":66},{"ruleId":"1460","severity":1,"message":"1461","line":590,"column":15,"nodeType":"1462","endLine":590,"endColumn":75},{"ruleId":"1430","severity":1,"message":"1431","line":599,"column":24,"nodeType":"1432","messageId":"1433","endLine":599,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":607,"column":24,"nodeType":"1432","messageId":"1433","endLine":607,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":615,"column":24,"nodeType":"1432","messageId":"1433","endLine":615,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":623,"column":24,"nodeType":"1432","messageId":"1433","endLine":623,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":630,"column":19,"nodeType":"1432","messageId":"1433","endLine":630,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":635,"column":28,"nodeType":"1432","messageId":"1433","endLine":635,"endColumn":30},{"ruleId":"1460","severity":1,"message":"1461","line":638,"column":15,"nodeType":"1462","endLine":641,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":640,"column":33,"nodeType":"1432","messageId":"1433","endLine":640,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":646,"column":28,"nodeType":"1432","messageId":"1433","endLine":646,"endColumn":30},{"ruleId":"1460","severity":1,"message":"1461","line":649,"column":15,"nodeType":"1462","endLine":652,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":651,"column":33,"nodeType":"1432","messageId":"1433","endLine":651,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":657,"column":28,"nodeType":"1432","messageId":"1433","endLine":657,"endColumn":30},{"ruleId":"1460","severity":1,"message":"1461","line":660,"column":15,"nodeType":"1462","endLine":663,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":662,"column":33,"nodeType":"1432","messageId":"1433","endLine":662,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":668,"column":17,"nodeType":"1432","messageId":"1433","endLine":668,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":669,"column":17,"nodeType":"1432","messageId":"1433","endLine":669,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":670,"column":17,"nodeType":"1432","messageId":"1433","endLine":670,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":671,"column":17,"nodeType":"1432","messageId":"1433","endLine":671,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1556","line":6,"column":9,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":8,"column":23,"nodeType":"1432","messageId":"1433","endLine":8,"endColumn":25},{"ruleId":"1547","severity":1,"message":"1548","line":9,"column":18,"nodeType":"1432","messageId":"1549","endLine":9,"endColumn":19},{"ruleId":"1547","severity":1,"message":"1548","line":11,"column":18,"nodeType":"1432","messageId":"1549","endLine":11,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":18,"column":17,"nodeType":"1432","messageId":"1433","endLine":18,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1434","line":8,"column":16,"nodeType":"1432","messageId":"1433","endLine":8,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":44,"column":20,"nodeType":"1432","messageId":"1433","endLine":44,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1557","line":21,"column":9,"nodeType":"1413","messageId":"1414","endLine":21,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1558","line":51,"column":9,"nodeType":"1413","messageId":"1414","endLine":51,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":68,"column":36,"nodeType":"1432","messageId":"1433","endLine":68,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":80,"column":36,"nodeType":"1432","messageId":"1433","endLine":80,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":96,"column":34,"nodeType":"1432","messageId":"1433","endLine":96,"endColumn":36},{"ruleId":"1445","severity":1,"message":"1559","line":129,"column":6,"nodeType":"1454","endLine":129,"endColumn":8,"suggestions":"1560"},{"ruleId":"1445","severity":1,"message":"1561","line":191,"column":6,"nodeType":"1454","endLine":191,"endColumn":12,"suggestions":"1562"},{"ruleId":"1411","severity":1,"message":"1557","line":18,"column":9,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1558","line":55,"column":9,"nodeType":"1413","messageId":"1414","endLine":55,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":72,"column":36,"nodeType":"1432","messageId":"1433","endLine":72,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":84,"column":36,"nodeType":"1432","messageId":"1433","endLine":84,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":100,"column":34,"nodeType":"1432","messageId":"1433","endLine":100,"endColumn":36},{"ruleId":"1445","severity":1,"message":"1559","line":133,"column":6,"nodeType":"1454","endLine":133,"endColumn":8,"suggestions":"1563"},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1564","line":4,"column":5,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1565","line":9,"column":10,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1566","line":9,"column":16,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1567","line":10,"column":10,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1568","line":10,"column":16,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1569","line":11,"column":10,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1570","line":11,"column":19,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1415","replacedBy":"1571"},{"ruleId":"1417","replacedBy":"1572"},{"ruleId":"1411","severity":1,"message":"1419","line":6,"column":10,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1421","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1422","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1424","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1425","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1426","line":14,"column":8,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1427","line":15,"column":10,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1428","line":16,"column":22,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1429","line":16,"column":30,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":29,"column":33,"nodeType":"1432","messageId":"1433","endLine":29,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":78,"column":57,"nodeType":"1432","messageId":"1433","endLine":78,"endColumn":59},{"ruleId":"1430","severity":1,"message":"1434","line":80,"column":22,"nodeType":"1432","messageId":"1433","endLine":80,"endColumn":24},{"ruleId":"1430","severity":1,"message":"1431","line":119,"column":41,"nodeType":"1432","messageId":"1433","endLine":119,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":119,"column":81,"nodeType":"1432","messageId":"1433","endLine":119,"endColumn":83},{"ruleId":"1445","severity":1,"message":"1573","line":164,"column":6,"nodeType":"1454","endLine":164,"endColumn":8,"suggestions":"1574"},{"ruleId":"1411","severity":1,"message":"1491","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1500","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1492","line":16,"column":7,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1531","line":53,"column":13,"nodeType":"1413","messageId":"1414","endLine":53,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":66,"column":38,"nodeType":"1432","messageId":"1433","endLine":66,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1434","line":87,"column":21,"nodeType":"1432","messageId":"1433","endLine":87,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":105,"column":24,"nodeType":"1432","messageId":"1433","endLine":105,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1435","line":167,"column":11,"nodeType":"1413","messageId":"1414","endLine":167,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":236,"column":43,"nodeType":"1432","messageId":"1433","endLine":236,"endColumn":45},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1439","line":2,"column":34,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1440","line":3,"column":8,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1441","line":5,"column":8,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1442","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1427","line":7,"column":10,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1429","line":8,"column":10,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1428","line":8,"column":17,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1443","line":8,"column":31,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1575","line":10,"column":8,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":9},{"ruleId":"1411","severity":1,"message":"1444","line":26,"column":22,"nodeType":"1413","messageId":"1414","endLine":26,"endColumn":33},{"ruleId":"1445","severity":1,"message":"1576","line":28,"column":5,"nodeType":"1413","endLine":28,"endColumn":14,"suggestions":"1577"},{"ruleId":"1430","severity":1,"message":"1431","line":50,"column":61,"nodeType":"1432","messageId":"1433","endLine":50,"endColumn":63},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1575","line":5,"column":8,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":9},{"ruleId":"1445","severity":1,"message":"1452","line":28,"column":15,"nodeType":"1450","endLine":32,"endColumn":6},{"ruleId":"1445","severity":1,"message":"1452","line":35,"column":15,"nodeType":"1450","endLine":41,"endColumn":6},{"ruleId":"1445","severity":1,"message":"1453","line":41,"column":8,"nodeType":"1454","endLine":41,"endColumn":23,"suggestions":"1578"},{"ruleId":"1445","severity":1,"message":"1452","line":43,"column":15,"nodeType":"1450","endLine":51,"endColumn":6},{"ruleId":"1445","severity":1,"message":"1456","line":51,"column":8,"nodeType":"1454","endLine":51,"endColumn":23,"suggestions":"1579"},{"ruleId":"1448","severity":1,"message":"1449","line":115,"column":41,"nodeType":"1450","messageId":"1451","endLine":115,"endColumn":43},{"ruleId":"1448","severity":1,"message":"1449","line":128,"column":34,"nodeType":"1450","messageId":"1451","endLine":128,"endColumn":36},{"ruleId":"1448","severity":1,"message":"1449","line":144,"column":35,"nodeType":"1450","messageId":"1451","endLine":144,"endColumn":37},{"ruleId":"1448","severity":1,"message":"1449","line":158,"column":37,"nodeType":"1450","messageId":"1451","endLine":158,"endColumn":39},{"ruleId":"1411","severity":1,"message":"1437","line":4,"column":10,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":4,"column":17,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":4,"column":26,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1439","line":4,"column":34,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1580","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1581","line":10,"column":8,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1463","line":23,"column":8,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1464","line":24,"column":8,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1465","line":26,"column":8,"nodeType":"1413","messageId":"1414","endLine":26,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1466","line":27,"column":8,"nodeType":"1413","messageId":"1414","endLine":27,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1467","line":32,"column":8,"nodeType":"1413","messageId":"1414","endLine":32,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1468","line":33,"column":8,"nodeType":"1413","messageId":"1414","endLine":33,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1469","line":35,"column":8,"nodeType":"1413","messageId":"1414","endLine":35,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1471","line":39,"column":8,"nodeType":"1413","messageId":"1414","endLine":39,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1472","line":40,"column":8,"nodeType":"1413","messageId":"1414","endLine":40,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1473","line":42,"column":8,"nodeType":"1413","messageId":"1414","endLine":42,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1474","line":43,"column":8,"nodeType":"1413","messageId":"1414","endLine":43,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1475","line":45,"column":8,"nodeType":"1413","messageId":"1414","endLine":45,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1476","line":46,"column":8,"nodeType":"1413","messageId":"1414","endLine":46,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1477","line":50,"column":8,"nodeType":"1413","messageId":"1414","endLine":50,"endColumn":11},{"ruleId":"1411","severity":1,"message":"1478","line":51,"column":8,"nodeType":"1413","messageId":"1414","endLine":51,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1479","line":53,"column":8,"nodeType":"1413","messageId":"1414","endLine":53,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1480","line":54,"column":8,"nodeType":"1413","messageId":"1414","endLine":54,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1481","line":56,"column":8,"nodeType":"1413","messageId":"1414","endLine":56,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1482","line":57,"column":8,"nodeType":"1413","messageId":"1414","endLine":57,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1483","line":59,"column":8,"nodeType":"1413","messageId":"1414","endLine":59,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1484","line":61,"column":8,"nodeType":"1413","messageId":"1414","endLine":61,"endColumn":10},{"ruleId":"1411","severity":1,"message":"1485","line":65,"column":8,"nodeType":"1413","messageId":"1414","endLine":65,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1486","line":71,"column":7,"nodeType":"1413","messageId":"1414","endLine":71,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1487","line":86,"column":21,"nodeType":"1413","messageId":"1414","endLine":86,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1431","line":104,"column":21,"nodeType":"1432","messageId":"1433","endLine":104,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":107,"column":32,"nodeType":"1432","messageId":"1433","endLine":107,"endColumn":34},{"ruleId":"1411","severity":1,"message":"1488","line":110,"column":12,"nodeType":"1413","messageId":"1414","endLine":110,"endColumn":28},{"ruleId":"1430","severity":1,"message":"1431","line":159,"column":13,"nodeType":"1432","messageId":"1433","endLine":159,"endColumn":15},{"ruleId":"1430","severity":1,"message":"1431","line":161,"column":27,"nodeType":"1432","messageId":"1433","endLine":161,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":168,"column":27,"nodeType":"1432","messageId":"1433","endLine":168,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":208,"column":17,"nodeType":"1432","messageId":"1433","endLine":208,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1489","line":212,"column":6,"nodeType":"1454","endLine":212,"endColumn":16,"suggestions":"1582"},{"ruleId":"1411","severity":1,"message":"1583","line":217,"column":9,"nodeType":"1413","messageId":"1414","endLine":217,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":273,"column":19,"nodeType":"1432","messageId":"1433","endLine":273,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":291,"column":14,"nodeType":"1432","messageId":"1433","endLine":291,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":297,"column":16,"nodeType":"1432","messageId":"1433","endLine":297,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":299,"column":16,"nodeType":"1432","messageId":"1433","endLine":299,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":303,"column":14,"nodeType":"1432","messageId":"1433","endLine":303,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":306,"column":14,"nodeType":"1432","messageId":"1433","endLine":306,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1584","line":338,"column":11,"nodeType":"1413","messageId":"1414","endLine":338,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1434","line":340,"column":27,"nodeType":"1432","messageId":"1433","endLine":340,"endColumn":29},{"ruleId":"1445","severity":1,"message":"1585","line":359,"column":6,"nodeType":"1454","endLine":359,"endColumn":32,"suggestions":"1586"},{"ruleId":"1430","severity":1,"message":"1431","line":363,"column":35,"nodeType":"1432","messageId":"1433","endLine":363,"endColumn":37},{"ruleId":"1411","severity":1,"message":"1584","line":365,"column":11,"nodeType":"1413","messageId":"1414","endLine":365,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1434","line":367,"column":27,"nodeType":"1432","messageId":"1433","endLine":367,"endColumn":29},{"ruleId":"1445","severity":1,"message":"1587","line":372,"column":6,"nodeType":"1454","endLine":372,"endColumn":24,"suggestions":"1588"},{"ruleId":"1445","severity":1,"message":"1589","line":379,"column":6,"nodeType":"1454","endLine":379,"endColumn":15,"suggestions":"1590"},{"ruleId":"1460","severity":1,"message":"1461","line":407,"column":17,"nodeType":"1462","endLine":411,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":414,"column":17,"nodeType":"1462","endLine":418,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":421,"column":17,"nodeType":"1462","endLine":425,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":428,"column":17,"nodeType":"1462","endLine":432,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":441,"column":17,"nodeType":"1462","endLine":445,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1497","line":1,"column":17,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1499","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1500","line":10,"column":8,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1423","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1485","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1501","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1591","line":14,"column":8,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1424","line":15,"column":8,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1592","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1593","line":17,"column":8,"nodeType":"1413","messageId":"1414","endLine":17,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1594","line":18,"column":8,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1595","line":19,"column":8,"nodeType":"1413","messageId":"1414","endLine":19,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1484","line":20,"column":8,"nodeType":"1413","messageId":"1414","endLine":20,"endColumn":10},{"ruleId":"1430","severity":1,"message":"1431","line":33,"column":20,"nodeType":"1432","messageId":"1433","endLine":33,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":39,"column":20,"nodeType":"1432","messageId":"1433","endLine":39,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":45,"column":20,"nodeType":"1432","messageId":"1433","endLine":45,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":51,"column":20,"nodeType":"1432","messageId":"1433","endLine":51,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1434","line":57,"column":19,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1434","line":57,"column":30,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":32},{"ruleId":"1430","severity":1,"message":"1434","line":57,"column":41,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1434","line":57,"column":51,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":53},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1535","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1596","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1536","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1537","line":19,"column":8,"nodeType":"1413","messageId":"1414","endLine":19,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1597","line":28,"column":53,"nodeType":"1413","messageId":"1414","endLine":28,"endColumn":61},{"ruleId":"1411","severity":1,"message":"1598","line":29,"column":8,"nodeType":"1413","messageId":"1414","endLine":29,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1599","line":31,"column":5,"nodeType":"1413","messageId":"1414","endLine":31,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1538","line":41,"column":10,"nodeType":"1413","messageId":"1414","endLine":41,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1431","line":109,"column":50,"nodeType":"1432","messageId":"1433","endLine":109,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1434","line":111,"column":46,"nodeType":"1432","messageId":"1433","endLine":111,"endColumn":48},{"ruleId":"1430","severity":1,"message":"1431","line":113,"column":40,"nodeType":"1432","messageId":"1433","endLine":113,"endColumn":42},{"ruleId":"1448","severity":1,"message":"1449","line":125,"column":35,"nodeType":"1450","messageId":"1451","endLine":125,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":126,"column":21,"nodeType":"1432","messageId":"1433","endLine":126,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1600","line":156,"column":6,"nodeType":"1454","endLine":156,"endColumn":19,"suggestions":"1601"},{"ruleId":"1445","severity":1,"message":"1602","line":182,"column":6,"nodeType":"1454","endLine":182,"endColumn":29,"suggestions":"1603"},{"ruleId":"1411","severity":1,"message":"1539","line":189,"column":9,"nodeType":"1413","messageId":"1414","endLine":189,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1540","line":201,"column":9,"nodeType":"1413","messageId":"1414","endLine":201,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":219,"column":35,"nodeType":"1432","messageId":"1433","endLine":219,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":232,"column":17,"nodeType":"1432","messageId":"1433","endLine":232,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1604","line":235,"column":6,"nodeType":"1454","endLine":235,"endColumn":19,"suggestions":"1605"},{"ruleId":"1430","severity":1,"message":"1431","line":242,"column":19,"nodeType":"1432","messageId":"1433","endLine":242,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":245,"column":25,"nodeType":"1432","messageId":"1433","endLine":245,"endColumn":27},{"ruleId":"1445","severity":1,"message":"1606","line":250,"column":6,"nodeType":"1454","endLine":250,"endColumn":20,"suggestions":"1607"},{"ruleId":"1430","severity":1,"message":"1431","line":310,"column":45,"nodeType":"1432","messageId":"1433","endLine":310,"endColumn":47},{"ruleId":"1445","severity":1,"message":"1608","line":326,"column":6,"nodeType":"1454","endLine":326,"endColumn":22,"suggestions":"1609"},{"ruleId":"1445","severity":1,"message":"1452","line":335,"column":13,"nodeType":"1450","endLine":340,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1610","line":340,"column":6,"nodeType":"1454","endLine":340,"endColumn":8,"suggestions":"1611"},{"ruleId":"1430","severity":1,"message":"1431","line":354,"column":27,"nodeType":"1432","messageId":"1433","endLine":354,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":355,"column":22,"nodeType":"1432","messageId":"1433","endLine":355,"endColumn":24},{"ruleId":"1460","severity":1,"message":"1461","line":363,"column":15,"nodeType":"1462","endLine":363,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":366,"column":15,"nodeType":"1462","endLine":366,"endColumn":58},{"ruleId":"1430","severity":1,"message":"1434","line":387,"column":72,"nodeType":"1432","messageId":"1433","endLine":387,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1431","line":389,"column":19,"nodeType":"1432","messageId":"1433","endLine":389,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1434","line":395,"column":72,"nodeType":"1432","messageId":"1433","endLine":395,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1434","line":398,"column":72,"nodeType":"1432","messageId":"1433","endLine":398,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":407,"column":11,"nodeType":"1462","endLine":407,"endColumn":61},{"ruleId":"1460","severity":1,"message":"1461","line":424,"column":15,"nodeType":"1462","endLine":424,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":426,"column":15,"nodeType":"1462","endLine":426,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":427,"column":15,"nodeType":"1462","endLine":427,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":439,"column":11,"nodeType":"1462","endLine":443,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":445,"column":24,"nodeType":"1432","messageId":"1433","endLine":445,"endColumn":26},{"ruleId":"1460","severity":1,"message":"1461","line":446,"column":13,"nodeType":"1462","endLine":449,"endColumn":15},{"ruleId":"1430","severity":1,"message":"1431","line":451,"column":24,"nodeType":"1432","messageId":"1433","endLine":451,"endColumn":26},{"ruleId":"1460","severity":1,"message":"1461","line":452,"column":13,"nodeType":"1462","endLine":455,"endColumn":15},{"ruleId":"1543","severity":1,"message":"1544","line":464,"column":5,"nodeType":"1545","messageId":"1546","endLine":471,"endColumn":6},{"ruleId":"1411","severity":1,"message":"1612","line":547,"column":9,"nodeType":"1413","messageId":"1414","endLine":547,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":561,"column":11,"nodeType":"1462","endLine":564,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":579,"column":13,"nodeType":"1462","endLine":582,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":592,"column":15,"nodeType":"1462","endLine":592,"endColumn":65},{"ruleId":"1460","severity":1,"message":"1461","line":594,"column":15,"nodeType":"1462","endLine":594,"endColumn":117},{"ruleId":"1460","severity":1,"message":"1461","line":597,"column":15,"nodeType":"1462","endLine":597,"endColumn":54},{"ruleId":"1460","severity":1,"message":"1461","line":603,"column":15,"nodeType":"1462","endLine":603,"endColumn":58},{"ruleId":"1460","severity":1,"message":"1461","line":609,"column":15,"nodeType":"1462","endLine":609,"endColumn":59},{"ruleId":"1430","severity":1,"message":"1431","line":619,"column":28,"nodeType":"1432","messageId":"1433","endLine":619,"endColumn":30},{"ruleId":"1547","severity":1,"message":"1548","line":621,"column":36,"nodeType":"1432","messageId":"1549","endLine":621,"endColumn":37},{"ruleId":"1460","severity":1,"message":"1461","line":655,"column":15,"nodeType":"1462","endLine":655,"endColumn":75},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1439","line":2,"column":34,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1613","line":18,"column":10,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1614","line":19,"column":10,"nodeType":"1413","messageId":"1414","endLine":19,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1493","line":22,"column":10,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1494","line":22,"column":17,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1495","line":23,"column":10,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1496","line":23,"column":17,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":25},{"ruleId":"1430","severity":1,"message":"1434","line":76,"column":19,"nodeType":"1432","messageId":"1433","endLine":76,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1584","line":81,"column":9,"nodeType":"1413","messageId":"1414","endLine":81,"endColumn":12},{"ruleId":"1445","severity":1,"message":"1452","line":90,"column":13,"nodeType":"1450","endLine":106,"endColumn":4},{"ruleId":"1411","severity":1,"message":"1615","line":119,"column":9,"nodeType":"1413","messageId":"1414","endLine":119,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1616","line":124,"column":9,"nodeType":"1413","messageId":"1414","endLine":124,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":129,"column":12,"nodeType":"1432","messageId":"1433","endLine":129,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1617","line":174,"column":9,"nodeType":"1413","messageId":"1414","endLine":174,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":229,"column":41,"nodeType":"1432","messageId":"1433","endLine":229,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":230,"column":41,"nodeType":"1432","messageId":"1433","endLine":230,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1431","line":231,"column":41,"nodeType":"1432","messageId":"1433","endLine":231,"endColumn":43},{"ruleId":"1460","severity":1,"message":"1461","line":237,"column":19,"nodeType":"1462","endLine":237,"endColumn":63},{"ruleId":"1460","severity":1,"message":"1461","line":266,"column":21,"nodeType":"1462","endLine":269,"endColumn":23},{"ruleId":"1460","severity":1,"message":"1461","line":271,"column":23,"nodeType":"1462","endLine":271,"endColumn":44},{"ruleId":"1460","severity":1,"message":"1461","line":330,"column":17,"nodeType":"1462","endLine":333,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":335,"column":19,"nodeType":"1462","endLine":335,"endColumn":40},{"ruleId":"1460","severity":1,"message":"1461","line":358,"column":17,"nodeType":"1462","endLine":361,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":363,"column":19,"nodeType":"1462","endLine":363,"endColumn":40},{"ruleId":"1460","severity":1,"message":"1461","line":386,"column":17,"nodeType":"1462","endLine":389,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":391,"column":19,"nodeType":"1462","endLine":391,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1443","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1513","line":3,"column":10,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1514","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1515","line":7,"column":8,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1516","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1517","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1518","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1519","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1520","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1521","line":14,"column":8,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1522","line":15,"column":8,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1523","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1524","line":17,"column":8,"nodeType":"1413","messageId":"1414","endLine":17,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1525","line":18,"column":8,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1526","line":24,"column":9,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1618","line":24,"column":23,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":39},{"ruleId":"1411","severity":1,"message":"1528","line":28,"column":10,"nodeType":"1413","messageId":"1414","endLine":28,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1529","line":46,"column":10,"nodeType":"1413","messageId":"1414","endLine":46,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1530","line":46,"column":22,"nodeType":"1413","messageId":"1414","endLine":46,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":113,"column":33,"nodeType":"1432","messageId":"1433","endLine":113,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":115,"column":71,"nodeType":"1432","messageId":"1433","endLine":115,"endColumn":73},{"ruleId":"1411","severity":1,"message":"1531","line":139,"column":9,"nodeType":"1413","messageId":"1414","endLine":139,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":165,"column":15,"nodeType":"1462","endLine":173,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":166,"column":34,"nodeType":"1432","messageId":"1433","endLine":166,"endColumn":36},{"ruleId":"1460","severity":1,"message":"1461","line":197,"column":19,"nodeType":"1462","endLine":204,"endColumn":21},{"ruleId":"1460","severity":1,"message":"1461","line":230,"column":17,"nodeType":"1462","endLine":237,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1452","line":247,"column":13,"nodeType":"1450","endLine":252,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1532","line":252,"column":6,"nodeType":"1454","endLine":252,"endColumn":15,"suggestions":"1619"},{"ruleId":"1445","severity":1,"message":"1452","line":253,"column":13,"nodeType":"1450","endLine":257,"endColumn":4},{"ruleId":"1460","severity":1,"message":"1461","line":325,"column":23,"nodeType":"1462","endLine":328,"endColumn":25},{"ruleId":"1448","severity":1,"message":"1449","line":52,"column":28,"nodeType":"1450","messageId":"1451","endLine":52,"endColumn":30},{"ruleId":"1448","severity":1,"message":"1449","line":56,"column":44,"nodeType":"1450","messageId":"1451","endLine":56,"endColumn":46},{"ruleId":"1430","severity":1,"message":"1431","line":61,"column":50,"nodeType":"1432","messageId":"1433","endLine":61,"endColumn":52},{"ruleId":"1445","severity":1,"message":"1452","line":102,"column":13,"nodeType":"1450","endLine":107,"endColumn":4},{"ruleId":"1460","severity":1,"message":"1461","line":158,"column":9,"nodeType":"1462","endLine":161,"endColumn":11},{"ruleId":"1460","severity":1,"message":"1461","line":164,"column":13,"nodeType":"1462","endLine":167,"endColumn":15},{"ruleId":"1430","severity":1,"message":"1431","line":187,"column":42,"nodeType":"1432","messageId":"1433","endLine":187,"endColumn":44},{"ruleId":"1460","severity":1,"message":"1461","line":203,"column":23,"nodeType":"1462","endLine":206,"endColumn":25},{"ruleId":"1430","severity":1,"message":"1431","line":215,"column":52,"nodeType":"1432","messageId":"1433","endLine":215,"endColumn":54},{"ruleId":"1430","severity":1,"message":"1431","line":238,"column":43,"nodeType":"1432","messageId":"1433","endLine":238,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":258,"column":45,"nodeType":"1432","messageId":"1433","endLine":258,"endColumn":47},{"ruleId":"1430","severity":1,"message":"1431","line":259,"column":33,"nodeType":"1432","messageId":"1433","endLine":259,"endColumn":35},{"ruleId":"1460","severity":1,"message":"1461","line":272,"column":17,"nodeType":"1462","endLine":275,"endColumn":19},{"ruleId":"1460","severity":1,"message":"1461","line":277,"column":19,"nodeType":"1462","endLine":277,"endColumn":58},{"ruleId":"1460","severity":1,"message":"1461","line":281,"column":19,"nodeType":"1462","endLine":281,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":283,"column":19,"nodeType":"1462","endLine":283,"endColumn":57},{"ruleId":"1460","severity":1,"message":"1461","line":289,"column":19,"nodeType":"1462","endLine":289,"endColumn":63},{"ruleId":"1411","severity":1,"message":"1420","line":1,"column":27,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":36},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":2,"column":17,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":2,"column":26,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1440","line":3,"column":8,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1434","line":22,"column":61,"nodeType":"1432","messageId":"1433","endLine":22,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":22,"column":84,"nodeType":"1432","messageId":"1433","endLine":22,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":25,"column":190,"nodeType":"1432","messageId":"1433","endLine":25,"endColumn":192},{"ruleId":"1430","severity":1,"message":"1431","line":25,"column":213,"nodeType":"1432","messageId":"1433","endLine":25,"endColumn":215},{"ruleId":"1430","severity":1,"message":"1434","line":28,"column":61,"nodeType":"1432","messageId":"1433","endLine":28,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":28,"column":84,"nodeType":"1432","messageId":"1433","endLine":28,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":31,"column":189,"nodeType":"1432","messageId":"1433","endLine":31,"endColumn":191},{"ruleId":"1430","severity":1,"message":"1431","line":31,"column":212,"nodeType":"1432","messageId":"1433","endLine":31,"endColumn":214},{"ruleId":"1430","severity":1,"message":"1434","line":34,"column":61,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":84,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":37,"column":190,"nodeType":"1432","messageId":"1433","endLine":37,"endColumn":192},{"ruleId":"1430","severity":1,"message":"1431","line":37,"column":213,"nodeType":"1432","messageId":"1433","endLine":37,"endColumn":215},{"ruleId":"1430","severity":1,"message":"1434","line":40,"column":61,"nodeType":"1432","messageId":"1433","endLine":40,"endColumn":63},{"ruleId":"1430","severity":1,"message":"1431","line":40,"column":84,"nodeType":"1432","messageId":"1433","endLine":40,"endColumn":86},{"ruleId":"1430","severity":1,"message":"1434","line":43,"column":190,"nodeType":"1432","messageId":"1433","endLine":43,"endColumn":192},{"ruleId":"1430","severity":1,"message":"1431","line":43,"column":213,"nodeType":"1432","messageId":"1433","endLine":43,"endColumn":215},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1437","line":3,"column":10,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1438","line":3,"column":17,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1419","line":3,"column":26,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":32},{"ruleId":"1411","severity":1,"message":"1440","line":4,"column":8,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":40,"column":31,"nodeType":"1432","messageId":"1433","endLine":40,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1431","line":82,"column":20,"nodeType":"1432","messageId":"1433","endLine":82,"endColumn":22},{"ruleId":"1445","severity":1,"message":"1620","line":101,"column":8,"nodeType":"1454","endLine":101,"endColumn":33,"suggestions":"1621"},{"ruleId":"1430","severity":1,"message":"1431","line":143,"column":28,"nodeType":"1432","messageId":"1433","endLine":143,"endColumn":30},{"ruleId":"1430","severity":1,"message":"1431","line":200,"column":44,"nodeType":"1432","messageId":"1433","endLine":200,"endColumn":46},{"ruleId":"1430","severity":1,"message":"1431","line":200,"column":102,"nodeType":"1432","messageId":"1433","endLine":200,"endColumn":104},{"ruleId":"1430","severity":1,"message":"1431","line":200,"column":162,"nodeType":"1432","messageId":"1433","endLine":200,"endColumn":164},{"ruleId":"1460","severity":1,"message":"1461","line":201,"column":17,"nodeType":"1462","endLine":201,"endColumn":156},{"ruleId":"1430","severity":1,"message":"1431","line":203,"column":43,"nodeType":"1432","messageId":"1433","endLine":203,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":203,"column":103,"nodeType":"1432","messageId":"1433","endLine":203,"endColumn":105},{"ruleId":"1430","severity":1,"message":"1431","line":203,"column":161,"nodeType":"1432","messageId":"1433","endLine":203,"endColumn":163},{"ruleId":"1460","severity":1,"message":"1461","line":204,"column":17,"nodeType":"1462","endLine":204,"endColumn":156},{"ruleId":"1430","severity":1,"message":"1431","line":206,"column":44,"nodeType":"1432","messageId":"1433","endLine":206,"endColumn":46},{"ruleId":"1430","severity":1,"message":"1431","line":206,"column":102,"nodeType":"1432","messageId":"1433","endLine":206,"endColumn":104},{"ruleId":"1430","severity":1,"message":"1431","line":206,"column":160,"nodeType":"1432","messageId":"1433","endLine":206,"endColumn":162},{"ruleId":"1460","severity":1,"message":"1461","line":207,"column":17,"nodeType":"1462","endLine":207,"endColumn":156},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1564","line":4,"column":5,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1565","line":9,"column":10,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1566","line":9,"column":16,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1567","line":10,"column":10,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1568","line":10,"column":16,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1569","line":11,"column":10,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1570","line":11,"column":19,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1557","line":21,"column":9,"nodeType":"1413","messageId":"1414","endLine":21,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1558","line":51,"column":9,"nodeType":"1413","messageId":"1414","endLine":51,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":68,"column":36,"nodeType":"1432","messageId":"1433","endLine":68,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":80,"column":36,"nodeType":"1432","messageId":"1433","endLine":80,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":96,"column":34,"nodeType":"1432","messageId":"1433","endLine":96,"endColumn":36},{"ruleId":"1445","severity":1,"message":"1559","line":129,"column":6,"nodeType":"1454","endLine":129,"endColumn":8,"suggestions":"1622"},{"ruleId":"1445","severity":1,"message":"1561","line":191,"column":6,"nodeType":"1454","endLine":191,"endColumn":12,"suggestions":"1623"},{"ruleId":"1411","severity":1,"message":"1436","line":1,"column":38,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":44},{"ruleId":"1411","severity":1,"message":"1534","line":45,"column":9,"nodeType":"1413","messageId":"1414","endLine":45,"endColumn":12},{"ruleId":"1411","severity":1,"message":"1420","line":1,"column":27,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":36},{"ruleId":"1411","severity":1,"message":"1557","line":18,"column":9,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1558","line":56,"column":9,"nodeType":"1413","messageId":"1414","endLine":56,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":73,"column":36,"nodeType":"1432","messageId":"1433","endLine":73,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":85,"column":36,"nodeType":"1432","messageId":"1433","endLine":85,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":101,"column":34,"nodeType":"1432","messageId":"1433","endLine":101,"endColumn":36},{"ruleId":"1445","severity":1,"message":"1559","line":134,"column":6,"nodeType":"1454","endLine":134,"endColumn":8,"suggestions":"1624"},{"ruleId":"1430","severity":1,"message":"1434","line":32,"column":42,"nodeType":"1432","messageId":"1433","endLine":32,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1434","line":69,"column":20,"nodeType":"1432","messageId":"1433","endLine":69,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1434","line":69,"column":48,"nodeType":"1432","messageId":"1433","endLine":69,"endColumn":50},{"ruleId":"1430","severity":1,"message":"1434","line":82,"column":20,"nodeType":"1432","messageId":"1433","endLine":82,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1434","line":82,"column":48,"nodeType":"1432","messageId":"1433","endLine":82,"endColumn":50},{"ruleId":"1448","severity":1,"message":"1449","line":95,"column":34,"nodeType":"1450","messageId":"1451","endLine":95,"endColumn":36},{"ruleId":"1411","severity":1,"message":"1505","line":23,"column":19,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1506","line":72,"column":9,"nodeType":"1413","messageId":"1414","endLine":72,"endColumn":22},{"ruleId":"1460","severity":1,"message":"1461","line":82,"column":11,"nodeType":"1462","endLine":85,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":86,"column":11,"nodeType":"1462","endLine":86,"endColumn":59},{"ruleId":"1411","severity":1,"message":"1507","line":118,"column":9,"nodeType":"1413","messageId":"1414","endLine":118,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":124,"column":29,"nodeType":"1432","messageId":"1433","endLine":124,"endColumn":31},{"ruleId":"1430","severity":1,"message":"1434","line":136,"column":42,"nodeType":"1432","messageId":"1433","endLine":136,"endColumn":44},{"ruleId":"1430","severity":1,"message":"1434","line":150,"column":43,"nodeType":"1432","messageId":"1433","endLine":150,"endColumn":45},{"ruleId":"1430","severity":1,"message":"1431","line":172,"column":49,"nodeType":"1432","messageId":"1433","endLine":172,"endColumn":51},{"ruleId":"1430","severity":1,"message":"1431","line":173,"column":50,"nodeType":"1432","messageId":"1433","endLine":173,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1434","line":175,"column":41,"nodeType":"1432","messageId":"1433","endLine":175,"endColumn":43},{"ruleId":"1430","severity":1,"message":"1434","line":226,"column":21,"nodeType":"1432","messageId":"1433","endLine":226,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1452","line":299,"column":13,"nodeType":"1450","endLine":304,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1625","line":304,"column":6,"nodeType":"1454","endLine":304,"endColumn":18,"suggestions":"1626"},{"ruleId":"1445","severity":1,"message":"1452","line":318,"column":13,"nodeType":"1450","endLine":350,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1434","line":325,"column":21,"nodeType":"1432","messageId":"1433","endLine":325,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1510","line":350,"column":6,"nodeType":"1454","endLine":350,"endColumn":8,"suggestions":"1627"},{"ruleId":"1445","severity":1,"message":"1628","line":359,"column":6,"nodeType":"1454","endLine":359,"endColumn":20,"suggestions":"1629"},{"ruleId":"1411","severity":1,"message":"1512","line":369,"column":11,"nodeType":"1413","messageId":"1414","endLine":369,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":395,"column":25,"nodeType":"1432","messageId":"1433","endLine":395,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":403,"column":25,"nodeType":"1432","messageId":"1433","endLine":403,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":418,"column":27,"nodeType":"1432","messageId":"1433","endLine":418,"endColumn":29},{"ruleId":"1460","severity":1,"message":"1461","line":429,"column":13,"nodeType":"1462","endLine":429,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":433,"column":13,"nodeType":"1462","endLine":433,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":467,"column":27,"nodeType":"1462","endLine":472,"endColumn":29},{"ruleId":"1460","severity":1,"message":"1461","line":473,"column":27,"nodeType":"1462","endLine":476,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1630","line":5,"column":10,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1502","line":9,"column":17,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1503","line":28,"column":17,"nodeType":"1413","messageId":"1414","endLine":28,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1504","line":55,"column":16,"nodeType":"1413","messageId":"1414","endLine":55,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":122,"column":28,"nodeType":"1432","messageId":"1433","endLine":122,"endColumn":30},{"ruleId":"1445","severity":1,"message":"1452","line":128,"column":13,"nodeType":"1450","endLine":137,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1631","line":137,"column":6,"nodeType":"1454","endLine":137,"endColumn":51,"suggestions":"1632"},{"ruleId":"1430","severity":1,"message":"1434","line":143,"column":20,"nodeType":"1432","messageId":"1433","endLine":143,"endColumn":22},{"ruleId":"1445","severity":1,"message":"1633","line":171,"column":6,"nodeType":"1454","endLine":171,"endColumn":20,"suggestions":"1634"},{"ruleId":"1430","severity":1,"message":"1434","line":217,"column":24,"nodeType":"1432","messageId":"1433","endLine":217,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":243,"column":46,"nodeType":"1432","messageId":"1433","endLine":243,"endColumn":48},{"ruleId":"1430","severity":1,"message":"1434","line":249,"column":26,"nodeType":"1432","messageId":"1433","endLine":249,"endColumn":28},{"ruleId":"1430","severity":1,"message":"1431","line":262,"column":46,"nodeType":"1432","messageId":"1433","endLine":262,"endColumn":48},{"ruleId":"1430","severity":1,"message":"1434","line":268,"column":26,"nodeType":"1432","messageId":"1433","endLine":268,"endColumn":28},{"ruleId":"1430","severity":1,"message":"1431","line":282,"column":45,"nodeType":"1432","messageId":"1433","endLine":282,"endColumn":47},{"ruleId":"1430","severity":1,"message":"1434","line":288,"column":26,"nodeType":"1432","messageId":"1433","endLine":288,"endColumn":28},{"ruleId":"1460","severity":1,"message":"1461","line":307,"column":19,"nodeType":"1462","endLine":311,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1514","line":5,"column":8,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1635","line":54,"column":10,"nodeType":"1413","messageId":"1414","endLine":54,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1636","line":54,"column":21,"nodeType":"1413","messageId":"1414","endLine":54,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1431","line":122,"column":34,"nodeType":"1432","messageId":"1433","endLine":122,"endColumn":36},{"ruleId":"1430","severity":1,"message":"1431","line":145,"column":26,"nodeType":"1432","messageId":"1433","endLine":145,"endColumn":28},{"ruleId":"1448","severity":1,"message":"1449","line":163,"column":35,"nodeType":"1450","messageId":"1451","endLine":163,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":164,"column":63,"nodeType":"1432","messageId":"1433","endLine":164,"endColumn":65},{"ruleId":"1430","severity":1,"message":"1431","line":170,"column":32,"nodeType":"1432","messageId":"1433","endLine":170,"endColumn":34},{"ruleId":"1445","severity":1,"message":"1452","line":231,"column":13,"nodeType":"1450","endLine":237,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1637","line":237,"column":6,"nodeType":"1454","endLine":237,"endColumn":16,"suggestions":"1638"},{"ruleId":"1445","severity":1,"message":"1452","line":240,"column":13,"nodeType":"1450","endLine":274,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1434","line":242,"column":18,"nodeType":"1432","messageId":"1433","endLine":242,"endColumn":20},{"ruleId":"1445","severity":1,"message":"1639","line":274,"column":6,"nodeType":"1454","endLine":274,"endColumn":10,"suggestions":"1640"},{"ruleId":"1445","severity":1,"message":"1452","line":277,"column":13,"nodeType":"1450","endLine":288,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1641","line":288,"column":6,"nodeType":"1454","endLine":288,"endColumn":8,"suggestions":"1642"},{"ruleId":"1445","severity":1,"message":"1452","line":328,"column":13,"nodeType":"1450","endLine":330,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1552","line":330,"column":6,"nodeType":"1454","endLine":330,"endColumn":20,"suggestions":"1643"},{"ruleId":"1445","severity":1,"message":"1452","line":332,"column":13,"nodeType":"1450","endLine":334,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1554","line":334,"column":6,"nodeType":"1454","endLine":334,"endColumn":17,"suggestions":"1644"},{"ruleId":"1430","severity":1,"message":"1431","line":338,"column":20,"nodeType":"1432","messageId":"1433","endLine":338,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":340,"column":27,"nodeType":"1432","messageId":"1433","endLine":340,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":354,"column":89,"nodeType":"1432","messageId":"1433","endLine":354,"endColumn":91},{"ruleId":"1460","severity":1,"message":"1461","line":363,"column":15,"nodeType":"1462","endLine":363,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":366,"column":15,"nodeType":"1462","endLine":366,"endColumn":58},{"ruleId":"1460","severity":1,"message":"1461","line":396,"column":11,"nodeType":"1462","endLine":400,"endColumn":13},{"ruleId":"1430","severity":1,"message":"1431","line":415,"column":22,"nodeType":"1432","messageId":"1433","endLine":415,"endColumn":24},{"ruleId":"1430","severity":1,"message":"1431","line":452,"column":76,"nodeType":"1432","messageId":"1433","endLine":452,"endColumn":78},{"ruleId":"1460","severity":1,"message":"1461","line":459,"column":13,"nodeType":"1462","endLine":462,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":498,"column":11,"nodeType":"1462","endLine":498,"endColumn":81},{"ruleId":"1460","severity":1,"message":"1461","line":555,"column":13,"nodeType":"1462","endLine":558,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":560,"column":15,"nodeType":"1462","endLine":563,"endColumn":17},{"ruleId":"1460","severity":1,"message":"1461","line":627,"column":11,"nodeType":"1462","endLine":631,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":657,"column":11,"nodeType":"1462","endLine":657,"endColumn":66},{"ruleId":"1460","severity":1,"message":"1461","line":694,"column":15,"nodeType":"1462","endLine":694,"endColumn":75},{"ruleId":"1430","severity":1,"message":"1431","line":702,"column":54,"nodeType":"1432","messageId":"1433","endLine":702,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":709,"column":54,"nodeType":"1432","messageId":"1433","endLine":709,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":716,"column":54,"nodeType":"1432","messageId":"1433","endLine":716,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":723,"column":54,"nodeType":"1432","messageId":"1433","endLine":723,"endColumn":56},{"ruleId":"1430","severity":1,"message":"1431","line":730,"column":19,"nodeType":"1432","messageId":"1433","endLine":730,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1431","line":734,"column":60,"nodeType":"1432","messageId":"1433","endLine":734,"endColumn":62},{"ruleId":"1460","severity":1,"message":"1461","line":737,"column":15,"nodeType":"1462","endLine":740,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":739,"column":33,"nodeType":"1432","messageId":"1433","endLine":739,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":744,"column":60,"nodeType":"1432","messageId":"1433","endLine":744,"endColumn":62},{"ruleId":"1460","severity":1,"message":"1461","line":747,"column":15,"nodeType":"1462","endLine":750,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":749,"column":33,"nodeType":"1432","messageId":"1433","endLine":749,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":754,"column":60,"nodeType":"1432","messageId":"1433","endLine":754,"endColumn":62},{"ruleId":"1460","severity":1,"message":"1461","line":757,"column":15,"nodeType":"1462","endLine":760,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":759,"column":33,"nodeType":"1432","messageId":"1433","endLine":759,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":765,"column":17,"nodeType":"1432","messageId":"1433","endLine":765,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":766,"column":17,"nodeType":"1432","messageId":"1433","endLine":766,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":767,"column":17,"nodeType":"1432","messageId":"1433","endLine":767,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":768,"column":17,"nodeType":"1432","messageId":"1433","endLine":768,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1452","line":33,"column":13,"nodeType":"1450","endLine":47,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":34,"column":27,"nodeType":"1432","messageId":"1433","endLine":34,"endColumn":29},{"ruleId":"1445","severity":1,"message":"1452","line":58,"column":13,"nodeType":"1450","endLine":60,"endColumn":4},{"ruleId":"1460","severity":1,"message":"1461","line":78,"column":17,"nodeType":"1462","endLine":81,"endColumn":19},{"ruleId":"1448","severity":1,"message":"1449","line":89,"column":55,"nodeType":"1450","messageId":"1451","endLine":89,"endColumn":57},{"ruleId":"1430","severity":1,"message":"1431","line":98,"column":38,"nodeType":"1432","messageId":"1433","endLine":98,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1431","line":105,"column":38,"nodeType":"1432","messageId":"1433","endLine":105,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1431","line":105,"column":53,"nodeType":"1432","messageId":"1433","endLine":105,"endColumn":55},{"ruleId":"1430","severity":1,"message":"1431","line":105,"column":68,"nodeType":"1432","messageId":"1433","endLine":105,"endColumn":70},{"ruleId":"1460","severity":1,"message":"1461","line":123,"column":19,"nodeType":"1462","endLine":123,"endColumn":41},{"ruleId":"1460","severity":1,"message":"1461","line":137,"column":17,"nodeType":"1462","endLine":137,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":139,"column":19,"nodeType":"1462","endLine":139,"endColumn":73},{"ruleId":"1460","severity":1,"message":"1461","line":143,"column":19,"nodeType":"1462","endLine":143,"endColumn":78},{"ruleId":"1430","severity":1,"message":"1434","line":8,"column":16,"nodeType":"1432","messageId":"1433","endLine":8,"endColumn":18},{"ruleId":"1430","severity":1,"message":"1431","line":44,"column":20,"nodeType":"1432","messageId":"1433","endLine":44,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1556","line":8,"column":9,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":26},{"ruleId":"1430","severity":1,"message":"1431","line":10,"column":23,"nodeType":"1432","messageId":"1433","endLine":10,"endColumn":25},{"ruleId":"1547","severity":1,"message":"1548","line":11,"column":18,"nodeType":"1432","messageId":"1549","endLine":11,"endColumn":19},{"ruleId":"1547","severity":1,"message":"1548","line":13,"column":18,"nodeType":"1432","messageId":"1549","endLine":13,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":20,"column":17,"nodeType":"1432","messageId":"1433","endLine":20,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1645","line":5,"column":7,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1431","line":30,"column":93,"nodeType":"1432","messageId":"1433","endLine":30,"endColumn":95},{"ruleId":"1430","severity":1,"message":"1431","line":45,"column":105,"nodeType":"1432","messageId":"1433","endLine":45,"endColumn":107},{"ruleId":"1430","severity":1,"message":"1431","line":54,"column":105,"nodeType":"1432","messageId":"1433","endLine":54,"endColumn":107},{"ruleId":"1430","severity":1,"message":"1431","line":60,"column":93,"nodeType":"1432","messageId":"1433","endLine":60,"endColumn":95},{"ruleId":"1646","severity":1,"message":"1647","line":77,"column":72,"nodeType":"1648","messageId":"1649","endLine":77,"endColumn":74},{"ruleId":"1646","severity":1,"message":"1647","line":77,"column":90,"nodeType":"1648","messageId":"1649","endLine":77,"endColumn":92},{"ruleId":"1430","severity":1,"message":"1431","line":85,"column":93,"nodeType":"1432","messageId":"1433","endLine":85,"endColumn":95},{"ruleId":"1430","severity":1,"message":"1431","line":95,"column":93,"nodeType":"1432","messageId":"1433","endLine":95,"endColumn":95},{"ruleId":"1430","severity":1,"message":"1431","line":96,"column":21,"nodeType":"1432","messageId":"1433","endLine":96,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":109,"column":116,"nodeType":"1432","messageId":"1433","endLine":109,"endColumn":118},{"ruleId":"1430","severity":1,"message":"1431","line":110,"column":36,"nodeType":"1432","messageId":"1433","endLine":110,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1434","line":114,"column":38,"nodeType":"1432","messageId":"1433","endLine":114,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1431","line":141,"column":12,"nodeType":"1432","messageId":"1433","endLine":141,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1431","line":143,"column":19,"nodeType":"1432","messageId":"1433","endLine":143,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1497","line":1,"column":17,"nodeType":"1413","messageId":"1414","endLine":1,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1650","line":3,"column":10,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1535","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1514","line":10,"column":8,"nodeType":"1413","messageId":"1414","endLine":10,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1651","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1517","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1596","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1516","line":14,"column":8,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1524","line":15,"column":8,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1525","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1536","line":17,"column":8,"nodeType":"1413","messageId":"1414","endLine":17,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1652","line":19,"column":8,"nodeType":"1413","messageId":"1414","endLine":19,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1537","line":20,"column":8,"nodeType":"1413","messageId":"1414","endLine":20,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1653","line":21,"column":8,"nodeType":"1413","messageId":"1414","endLine":21,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1654","line":22,"column":8,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1655","line":23,"column":8,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1656","line":24,"column":8,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1657","line":31,"column":9,"nodeType":"1413","messageId":"1414","endLine":31,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1658","line":38,"column":9,"nodeType":"1413","messageId":"1414","endLine":38,"endColumn":19},{"ruleId":"1430","severity":1,"message":"1431","line":70,"column":27,"nodeType":"1432","messageId":"1433","endLine":70,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":71,"column":22,"nodeType":"1432","messageId":"1433","endLine":71,"endColumn":24},{"ruleId":"1460","severity":1,"message":"1461","line":79,"column":15,"nodeType":"1462","endLine":79,"endColumn":60},{"ruleId":"1430","severity":1,"message":"1434","line":100,"column":72,"nodeType":"1432","messageId":"1433","endLine":100,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1431","line":102,"column":19,"nodeType":"1432","messageId":"1433","endLine":102,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1434","line":108,"column":72,"nodeType":"1432","messageId":"1433","endLine":108,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1434","line":111,"column":72,"nodeType":"1432","messageId":"1433","endLine":111,"endColumn":74},{"ruleId":"1411","severity":1,"message":"1513","line":3,"column":10,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1514","line":6,"column":8,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1515","line":7,"column":8,"nodeType":"1413","messageId":"1414","endLine":7,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1516","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1517","line":9,"column":8,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1518","line":11,"column":8,"nodeType":"1413","messageId":"1414","endLine":11,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1519","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1520","line":13,"column":8,"nodeType":"1413","messageId":"1414","endLine":13,"endColumn":22},{"ruleId":"1411","severity":1,"message":"1521","line":14,"column":8,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1522","line":15,"column":8,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1523","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1524","line":17,"column":8,"nodeType":"1413","messageId":"1414","endLine":17,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1525","line":18,"column":8,"nodeType":"1413","messageId":"1414","endLine":18,"endColumn":13},{"ruleId":"1411","severity":1,"message":"1526","line":24,"column":9,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":21},{"ruleId":"1411","severity":1,"message":"1618","line":24,"column":23,"nodeType":"1413","messageId":"1414","endLine":24,"endColumn":39},{"ruleId":"1411","severity":1,"message":"1528","line":29,"column":10,"nodeType":"1413","messageId":"1414","endLine":29,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1529","line":47,"column":10,"nodeType":"1413","messageId":"1414","endLine":47,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1530","line":47,"column":22,"nodeType":"1413","messageId":"1414","endLine":47,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":116,"column":33,"nodeType":"1432","messageId":"1433","endLine":116,"endColumn":35},{"ruleId":"1430","severity":1,"message":"1431","line":118,"column":71,"nodeType":"1432","messageId":"1433","endLine":118,"endColumn":73},{"ruleId":"1411","severity":1,"message":"1659","line":123,"column":9,"nodeType":"1413","messageId":"1414","endLine":123,"endColumn":28},{"ruleId":"1411","severity":1,"message":"1531","line":142,"column":9,"nodeType":"1413","messageId":"1414","endLine":142,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":169,"column":15,"nodeType":"1462","endLine":177,"endColumn":17},{"ruleId":"1430","severity":1,"message":"1431","line":170,"column":34,"nodeType":"1432","messageId":"1433","endLine":170,"endColumn":36},{"ruleId":"1460","severity":1,"message":"1461","line":201,"column":19,"nodeType":"1462","endLine":208,"endColumn":21},{"ruleId":"1460","severity":1,"message":"1461","line":234,"column":17,"nodeType":"1462","endLine":241,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1452","line":279,"column":13,"nodeType":"1450","endLine":284,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1532","line":284,"column":6,"nodeType":"1454","endLine":284,"endColumn":15,"suggestions":"1660"},{"ruleId":"1445","severity":1,"message":"1452","line":285,"column":13,"nodeType":"1450","endLine":287,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1661","line":287,"column":6,"nodeType":"1454","endLine":287,"endColumn":10,"suggestions":"1662"},{"ruleId":"1445","severity":1,"message":"1452","line":288,"column":13,"nodeType":"1450","endLine":290,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1661","line":290,"column":6,"nodeType":"1454","endLine":290,"endColumn":8,"suggestions":"1663"},{"ruleId":"1460","severity":1,"message":"1461","line":358,"column":23,"nodeType":"1462","endLine":361,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1443","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":19},{"ruleId":"1448","severity":1,"message":"1449","line":32,"column":18,"nodeType":"1450","messageId":"1451","endLine":32,"endColumn":20},{"ruleId":"1430","severity":1,"message":"1431","line":33,"column":21,"nodeType":"1432","messageId":"1433","endLine":33,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1452","line":49,"column":13,"nodeType":"1450","endLine":82,"endColumn":4},{"ruleId":"1430","severity":1,"message":"1431","line":55,"column":23,"nodeType":"1432","messageId":"1433","endLine":55,"endColumn":25},{"ruleId":"1430","severity":1,"message":"1431","line":76,"column":29,"nodeType":"1432","messageId":"1433","endLine":76,"endColumn":31},{"ruleId":"1445","severity":1,"message":"1664","line":82,"column":6,"nodeType":"1454","endLine":82,"endColumn":33,"suggestions":"1665"},{"ruleId":"1666","severity":1,"message":"1667","line":156,"column":7,"nodeType":"1668","messageId":"1669","endLine":157,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1440","line":3,"column":8,"nodeType":"1413","messageId":"1414","endLine":3,"endColumn":17},{"ruleId":"1411","severity":1,"message":"1650","line":6,"column":28,"nodeType":"1413","messageId":"1414","endLine":6,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1670","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1419","line":9,"column":10,"nodeType":"1413","messageId":"1414","endLine":9,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1671","line":61,"column":19,"nodeType":"1413","messageId":"1414","endLine":61,"endColumn":29},{"ruleId":"1411","severity":1,"message":"1672","line":62,"column":10,"nodeType":"1413","messageId":"1414","endLine":62,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1673","line":62,"column":20,"nodeType":"1413","messageId":"1414","endLine":62,"endColumn":31},{"ruleId":"1411","severity":1,"message":"1674","line":63,"column":10,"nodeType":"1413","messageId":"1414","endLine":63,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1675","line":63,"column":18,"nodeType":"1413","messageId":"1414","endLine":63,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1434","line":125,"column":38,"nodeType":"1432","messageId":"1433","endLine":125,"endColumn":40},{"ruleId":"1430","severity":1,"message":"1431","line":234,"column":14,"nodeType":"1432","messageId":"1433","endLine":234,"endColumn":16},{"ruleId":"1445","severity":1,"message":"1676","line":343,"column":6,"nodeType":"1454","endLine":343,"endColumn":39,"suggestions":"1677"},{"ruleId":"1430","severity":1,"message":"1434","line":382,"column":19,"nodeType":"1432","messageId":"1433","endLine":382,"endColumn":21},{"ruleId":"1445","severity":1,"message":"1678","line":389,"column":6,"nodeType":"1454","endLine":389,"endColumn":18,"suggestions":"1679"},{"ruleId":"1460","severity":1,"message":"1461","line":452,"column":39,"nodeType":"1462","endLine":452,"endColumn":121},{"ruleId":"1460","severity":1,"message":"1461","line":453,"column":39,"nodeType":"1462","endLine":453,"endColumn":120},{"ruleId":"1460","severity":1,"message":"1461","line":454,"column":39,"nodeType":"1462","endLine":454,"endColumn":123},{"ruleId":"1460","severity":1,"message":"1461","line":455,"column":39,"nodeType":"1462","endLine":455,"endColumn":119},{"ruleId":"1460","severity":1,"message":"1461","line":456,"column":39,"nodeType":"1462","endLine":456,"endColumn":125},{"ruleId":"1460","severity":1,"message":"1461","line":479,"column":15,"nodeType":"1462","endLine":479,"endColumn":118},{"ruleId":"1460","severity":1,"message":"1461","line":492,"column":15,"nodeType":"1462","endLine":492,"endColumn":91},{"ruleId":"1411","severity":1,"message":"1680","line":5,"column":10,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1681","line":40,"column":24,"nodeType":"1413","messageId":"1414","endLine":40,"endColumn":39},{"ruleId":"1445","severity":1,"message":"1682","line":123,"column":6,"nodeType":"1454","endLine":123,"endColumn":16,"suggestions":"1683"},{"ruleId":"1445","severity":1,"message":"1682","line":133,"column":6,"nodeType":"1454","endLine":133,"endColumn":8,"suggestions":"1684"},{"ruleId":"1445","severity":1,"message":"1685","line":143,"column":6,"nodeType":"1454","endLine":143,"endColumn":20,"suggestions":"1686"},{"ruleId":"1445","severity":1,"message":"1687","line":148,"column":6,"nodeType":"1454","endLine":148,"endColumn":19,"suggestions":"1688"},{"ruleId":"1430","severity":1,"message":"1431","line":161,"column":21,"nodeType":"1432","messageId":"1433","endLine":161,"endColumn":23},{"ruleId":"1460","severity":1,"message":"1461","line":201,"column":11,"nodeType":"1462","endLine":201,"endColumn":61},{"ruleId":"1460","severity":1,"message":"1461","line":218,"column":15,"nodeType":"1462","endLine":218,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":220,"column":15,"nodeType":"1462","endLine":220,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":221,"column":15,"nodeType":"1462","endLine":221,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":243,"column":15,"nodeType":"1462","endLine":243,"endColumn":123},{"ruleId":"1411","severity":1,"message":"1680","line":5,"column":10,"nodeType":"1413","messageId":"1414","endLine":5,"endColumn":26},{"ruleId":"1411","severity":1,"message":"1689","line":42,"column":21,"nodeType":"1413","messageId":"1414","endLine":42,"endColumn":33},{"ruleId":"1430","severity":1,"message":"1431","line":53,"column":14,"nodeType":"1432","messageId":"1433","endLine":53,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":64,"column":14,"nodeType":"1432","messageId":"1433","endLine":64,"endColumn":16},{"ruleId":"1646","severity":1,"message":"1647","line":69,"column":24,"nodeType":"1648","messageId":"1649","endLine":69,"endColumn":26},{"ruleId":"1646","severity":1,"message":"1647","line":69,"column":44,"nodeType":"1648","messageId":"1649","endLine":69,"endColumn":46},{"ruleId":"1430","severity":1,"message":"1431","line":79,"column":14,"nodeType":"1432","messageId":"1433","endLine":79,"endColumn":16},{"ruleId":"1445","severity":1,"message":"1690","line":99,"column":6,"nodeType":"1454","endLine":99,"endColumn":10,"suggestions":"1691"},{"ruleId":"1445","severity":1,"message":"1690","line":151,"column":6,"nodeType":"1454","endLine":151,"endColumn":8,"suggestions":"1692"},{"ruleId":"1445","severity":1,"message":"1685","line":161,"column":6,"nodeType":"1454","endLine":161,"endColumn":20,"suggestions":"1693"},{"ruleId":"1445","severity":1,"message":"1687","line":166,"column":6,"nodeType":"1454","endLine":166,"endColumn":19,"suggestions":"1694"},{"ruleId":"1430","severity":1,"message":"1431","line":173,"column":14,"nodeType":"1432","messageId":"1433","endLine":173,"endColumn":16},{"ruleId":"1430","severity":1,"message":"1431","line":183,"column":36,"nodeType":"1432","messageId":"1433","endLine":183,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1431","line":185,"column":21,"nodeType":"1432","messageId":"1433","endLine":185,"endColumn":23},{"ruleId":"1460","severity":1,"message":"1461","line":222,"column":11,"nodeType":"1462","endLine":222,"endColumn":61},{"ruleId":"1460","severity":1,"message":"1461","line":239,"column":15,"nodeType":"1462","endLine":239,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":241,"column":15,"nodeType":"1462","endLine":241,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":242,"column":15,"nodeType":"1462","endLine":242,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":264,"column":15,"nodeType":"1462","endLine":264,"endColumn":120},{"ruleId":"1460","severity":1,"message":"1461","line":286,"column":27,"nodeType":"1462","endLine":286,"endColumn":100},{"ruleId":"1460","severity":1,"message":"1461","line":291,"column":29,"nodeType":"1462","endLine":291,"endColumn":69},{"ruleId":"1411","severity":1,"message":"1443","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1650","line":4,"column":28,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1695","line":23,"column":10,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1696","line":53,"column":6,"nodeType":"1454","endLine":53,"endColumn":33,"suggestions":"1697"},{"ruleId":"1430","severity":1,"message":"1431","line":57,"column":12,"nodeType":"1432","messageId":"1433","endLine":57,"endColumn":14},{"ruleId":"1430","severity":1,"message":"1431","line":70,"column":34,"nodeType":"1432","messageId":"1433","endLine":70,"endColumn":36},{"ruleId":"1430","severity":1,"message":"1431","line":85,"column":34,"nodeType":"1432","messageId":"1433","endLine":85,"endColumn":36},{"ruleId":"1445","severity":1,"message":"1698","line":97,"column":6,"nodeType":"1454","endLine":97,"endColumn":20,"suggestions":"1699"},{"ruleId":"1445","severity":1,"message":"1700","line":147,"column":6,"nodeType":"1454","endLine":147,"endColumn":8,"suggestions":"1701"},{"ruleId":"1460","severity":1,"message":"1461","line":172,"column":11,"nodeType":"1462","endLine":176,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":178,"column":13,"nodeType":"1462","endLine":178,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1431","line":207,"column":47,"nodeType":"1432","messageId":"1433","endLine":207,"endColumn":49},{"ruleId":"1411","severity":1,"message":"1443","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1650","line":4,"column":28,"nodeType":"1413","messageId":"1414","endLine":4,"endColumn":40},{"ruleId":"1411","severity":1,"message":"1613","line":14,"column":10,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":24},{"ruleId":"1411","severity":1,"message":"1702","line":14,"column":26,"nodeType":"1413","messageId":"1414","endLine":14,"endColumn":43},{"ruleId":"1411","severity":1,"message":"1614","line":15,"column":10,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1703","line":15,"column":22,"nodeType":"1413","messageId":"1414","endLine":15,"endColumn":35},{"ruleId":"1411","severity":1,"message":"1704","line":16,"column":10,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":27},{"ruleId":"1411","severity":1,"message":"1705","line":16,"column":29,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":49},{"ruleId":"1411","severity":1,"message":"1503","line":20,"column":17,"nodeType":"1413","messageId":"1414","endLine":20,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1502","line":29,"column":17,"nodeType":"1413","messageId":"1414","endLine":29,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1504","line":37,"column":16,"nodeType":"1413","messageId":"1414","endLine":37,"endColumn":23},{"ruleId":"1430","severity":1,"message":"1431","line":137,"column":30,"nodeType":"1432","messageId":"1433","endLine":137,"endColumn":32},{"ruleId":"1445","severity":1,"message":"1706","line":147,"column":6,"nodeType":"1454","endLine":147,"endColumn":68,"suggestions":"1707"},{"ruleId":"1445","severity":1,"message":"1708","line":153,"column":6,"nodeType":"1454","endLine":153,"endColumn":20,"suggestions":"1709"},{"ruleId":"1445","severity":1,"message":"1706","line":212,"column":6,"nodeType":"1454","endLine":212,"endColumn":8,"suggestions":"1710"},{"ruleId":"1460","severity":1,"message":"1461","line":228,"column":11,"nodeType":"1462","endLine":232,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":234,"column":13,"nodeType":"1462","endLine":234,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1431","line":261,"column":37,"nodeType":"1432","messageId":"1433","endLine":261,"endColumn":39},{"ruleId":"1430","severity":1,"message":"1434","line":267,"column":25,"nodeType":"1432","messageId":"1433","endLine":267,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":281,"column":37,"nodeType":"1432","messageId":"1433","endLine":281,"endColumn":39},{"ruleId":"1430","severity":1,"message":"1434","line":287,"column":25,"nodeType":"1432","messageId":"1433","endLine":287,"endColumn":27},{"ruleId":"1430","severity":1,"message":"1431","line":302,"column":36,"nodeType":"1432","messageId":"1433","endLine":302,"endColumn":38},{"ruleId":"1430","severity":1,"message":"1434","line":308,"column":25,"nodeType":"1432","messageId":"1433","endLine":308,"endColumn":27},{"ruleId":"1411","severity":1,"message":"1437","line":2,"column":10,"nodeType":"1413","messageId":"1414","endLine":2,"endColumn":15},{"ruleId":"1411","severity":1,"message":"1535","line":8,"column":8,"nodeType":"1413","messageId":"1414","endLine":8,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1596","line":12,"column":8,"nodeType":"1413","messageId":"1414","endLine":12,"endColumn":16},{"ruleId":"1411","severity":1,"message":"1536","line":16,"column":8,"nodeType":"1413","messageId":"1414","endLine":16,"endColumn":19},{"ruleId":"1411","severity":1,"message":"1537","line":19,"column":8,"nodeType":"1413","messageId":"1414","endLine":19,"endColumn":14},{"ruleId":"1411","severity":1,"message":"1655","line":22,"column":8,"nodeType":"1413","messageId":"1414","endLine":22,"endColumn":18},{"ruleId":"1411","severity":1,"message":"1656","line":23,"column":8,"nodeType":"1413","messageId":"1414","endLine":23,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1597","line":28,"column":53,"nodeType":"1413","messageId":"1414","endLine":28,"endColumn":61},{"ruleId":"1411","severity":1,"message":"1599","line":30,"column":5,"nodeType":"1413","messageId":"1414","endLine":30,"endColumn":23},{"ruleId":"1411","severity":1,"message":"1538","line":40,"column":10,"nodeType":"1413","messageId":"1414","endLine":40,"endColumn":20},{"ruleId":"1411","severity":1,"message":"1711","line":52,"column":23,"nodeType":"1413","messageId":"1414","endLine":52,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":112,"column":50,"nodeType":"1432","messageId":"1433","endLine":112,"endColumn":52},{"ruleId":"1430","severity":1,"message":"1434","line":114,"column":46,"nodeType":"1432","messageId":"1433","endLine":114,"endColumn":48},{"ruleId":"1430","severity":1,"message":"1431","line":116,"column":40,"nodeType":"1432","messageId":"1433","endLine":116,"endColumn":42},{"ruleId":"1448","severity":1,"message":"1449","line":128,"column":35,"nodeType":"1450","messageId":"1451","endLine":128,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":129,"column":21,"nodeType":"1432","messageId":"1433","endLine":129,"endColumn":23},{"ruleId":"1445","severity":1,"message":"1600","line":159,"column":6,"nodeType":"1454","endLine":159,"endColumn":19,"suggestions":"1712"},{"ruleId":"1445","severity":1,"message":"1602","line":185,"column":6,"nodeType":"1454","endLine":185,"endColumn":29,"suggestions":"1713"},{"ruleId":"1411","severity":1,"message":"1539","line":192,"column":9,"nodeType":"1413","messageId":"1414","endLine":192,"endColumn":25},{"ruleId":"1411","severity":1,"message":"1540","line":204,"column":9,"nodeType":"1413","messageId":"1414","endLine":204,"endColumn":22},{"ruleId":"1430","severity":1,"message":"1431","line":224,"column":35,"nodeType":"1432","messageId":"1433","endLine":224,"endColumn":37},{"ruleId":"1430","severity":1,"message":"1431","line":237,"column":17,"nodeType":"1432","messageId":"1433","endLine":237,"endColumn":19},{"ruleId":"1445","severity":1,"message":"1604","line":240,"column":6,"nodeType":"1454","endLine":240,"endColumn":19,"suggestions":"1714"},{"ruleId":"1430","severity":1,"message":"1431","line":247,"column":19,"nodeType":"1432","messageId":"1433","endLine":247,"endColumn":21},{"ruleId":"1445","severity":1,"message":"1715","line":252,"column":6,"nodeType":"1454","endLine":252,"endColumn":20,"suggestions":"1716"},{"ruleId":"1445","severity":1,"message":"1452","line":297,"column":13,"nodeType":"1450","endLine":303,"endColumn":4},{"ruleId":"1445","severity":1,"message":"1717","line":303,"column":6,"nodeType":"1454","endLine":303,"endColumn":8,"suggestions":"1718"},{"ruleId":"1430","severity":1,"message":"1431","line":315,"column":27,"nodeType":"1432","messageId":"1433","endLine":315,"endColumn":29},{"ruleId":"1430","severity":1,"message":"1431","line":316,"column":22,"nodeType":"1432","messageId":"1433","endLine":316,"endColumn":24},{"ruleId":"1460","severity":1,"message":"1461","line":324,"column":15,"nodeType":"1462","endLine":324,"endColumn":60},{"ruleId":"1460","severity":1,"message":"1461","line":327,"column":15,"nodeType":"1462","endLine":327,"endColumn":58},{"ruleId":"1430","severity":1,"message":"1434","line":348,"column":72,"nodeType":"1432","messageId":"1433","endLine":348,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1431","line":350,"column":19,"nodeType":"1432","messageId":"1433","endLine":350,"endColumn":21},{"ruleId":"1430","severity":1,"message":"1434","line":356,"column":72,"nodeType":"1432","messageId":"1433","endLine":356,"endColumn":74},{"ruleId":"1430","severity":1,"message":"1434","line":359,"column":72,"nodeType":"1432","messageId":"1433","endLine":359,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":368,"column":11,"nodeType":"1462","endLine":368,"endColumn":61},{"ruleId":"1460","severity":1,"message":"1461","line":385,"column":15,"nodeType":"1462","endLine":385,"endColumn":72},{"ruleId":"1460","severity":1,"message":"1461","line":387,"column":15,"nodeType":"1462","endLine":387,"endColumn":74},{"ruleId":"1460","severity":1,"message":"1461","line":388,"column":15,"nodeType":"1462","endLine":388,"endColumn":79},{"ruleId":"1460","severity":1,"message":"1461","line":487,"column":11,"nodeType":"1462","endLine":490,"endColumn":13},{"ruleId":"1460","severity":1,"message":"1461","line":505,"column":13,"nodeType":"1462","endLine":508,"endColumn":15},{"ruleId":"1460","severity":1,"message":"1461","line":518,"column":15,"nodeType":"1462","endLine":518,"endColumn":65},{"ruleId":"1460","severity":1,"message":"1461","line":520,"column":15,"nodeType":"1462","endLine":520,"endColumn":117},{"ruleId":"1460","severity":1,"message":"1461","line":523,"column":15,"nodeType":"1462","endLine":523,"endColumn":54},{"ruleId":"1460","severity":1,"message":"1461","line":529,"column":15,"nodeType":"1462","endLine":529,"endColumn":58},{"ruleId":"1460","severity":1,"message":"1461","line":535,"column":15,"nodeType":"1462","endLine":535,"endColumn":59},{"ruleId":"1460","severity":1,"message":"1461","line":581,"column":15,"nodeType":"1462","endLine":581,"endColumn":75},"no-unused-vars","'EasyrouteProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1719"],"no-negated-in-lhs",["1720"],"'Button' is defined but never used.","'useEffect' is defined but never used.","'Login' is defined but never used.","'Home' is defined but never used.","'MusicSlider' is defined but never used.","'Search' is defined but never used.","'IconListItem' is defined but never used.","'Carousel' is defined but never used.","'RouterOutlet' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'getdata' is assigned a value but never used.","'useRef' is defined but never used.","'Input' is defined but never used.","'message' is defined but never used.","'Slider' is defined but never used.","'HTTPUtils' is defined but never used.","'PersonalSuggest' is defined but never used.","'SubHome' is defined but never used.","'useParams' is defined but never used.","'setHomeTags' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setActiveHomeTag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.pathname] as a second argument to the useEffect Hook.",["1721"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'search_suggest'. Either include it or remove the dependency array.","ArrayExpression",["1722"],"React Hook useEffect has missing dependencies: 'searchKeyword' and 'search_suggest'. Either include them or remove the dependency array.",["1723"],"React Hook useEffect has missing dependencies: 'isHover' and 'leftClickDiv'. Either include them or remove the dependency array.",["1724"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fastActive' is defined but never used.","'fastNoActive' is defined but never used.","'backFastActive' is defined but never used.","'backFastNoActive' is defined but never used.","'mutedActive' is defined but never used.","'mutedNoActive' is defined but never used.","'listActive' is defined but never used.","'listNoActive' is defined but never used.","'allLoopActive' is defined but never used.","'allLoopNoActive' is defined but never used.","'singleLoopActive' is defined but never used.","'singleLoopNoActive' is defined but never used.","'noLoopActive' is defined but never used.","'noLoopNoActive' is defined but never used.","'add' is defined but never used.","'noAdd' is defined but never used.","'joinNext' is defined but never used.","'noJoinNext' is defined but never used.","'like' is defined but never used.","'noLike' is defined but never used.","'itemPlay' is defined but never used.","'MV' is defined but never used.","'MusicSliderComponent' is defined but never used.","'covertTime' is assigned a value but never used.","'setSliderEnd' is assigned a value but never used.","'getMusicacbtnEle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isFirst'. Either include it or remove the dependency array.",["1725"],"'Playlist' is defined but never used.","'router' is assigned a value but never used.","'allMV' is assigned a value but never used.","'setAllMV' is assigned a value but never used.","'newMV' is assigned a value but never used.","'setNewMV' is assigned a value but never used.","'useState' is defined but never used.","'NewestSong' is defined but never used.","'PlaylistDetail' is defined but never used.","'Test' is defined but never used.","'ArtistDetail' is defined but never used.","'setTypes' is assigned a value but never used.","'setAreas' is assigned a value but never used.","'setCats' is assigned a value but never used.","'setAreaCat' is assigned a value but never used.","'SongsListItem' is assigned a value but never used.","'newData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAlbumArea'. Either include it or remove the dependency array.",["1726"],"React Hook useEffect has a missing dependency: 'getTopAlbum'. Either include it or remove the dependency array.",["1727"],"'timer' is assigned a value but never used.","'Cookies' is defined but never used.","'SubPng' is defined but never used.","'NoShoucangPng' is defined but never used.","'DownloadPng' is defined but never used.","'PlayPng' is defined but never used.","'PicListNoActivePng' is defined but never used.","'PicListActivePng' is defined but never used.","'PicNoActivePng' is defined but never used.","'PicActivePng' is defined but never used.","'ListNoActivePng' is defined but never used.","'ListActivePng' is defined but never used.","'DownPng' is defined but never used.","'UpPng' is defined but never used.","'exchangeTime' is assigned a value but never used.","'exchagneDuration' is assigned a value but never used.","'account' is assigned a value but never used.","'userEvents' is assigned a value but never used.","'setUserEvents' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserEvent', 'getUserFolloweds', 'getUserFollows', and 'getUserPlaylists'. Either include them or remove the dependency array.",["1728"],"'dur' is assigned a value but never used.","'AddPng' is defined but never used.","'ShoucangPng' is defined but never used.","'ZanPng' is defined but never used.","'commentVal' is assigned a value but never used.","'commentValChange' is assigned a value but never used.","'headerComment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPlaylistComments', 'getPlaylistDetail', and 'id'. Either include them or remove the dependency array.",["1729"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'getArtistAlbum' and 'getArtistMV'. Either include them or remove the dependency array.",["1730"],"React Hook useEffect has a missing dependency: 'getArtistAlbum'. Either include it or remove the dependency array.",["1731"],"React Hook useEffect has a missing dependency: 'getArtistMV'. Either include it or remove the dependency array.",["1732"],"'is_have_timestamp' is assigned a value but never used.","'sliderRoundBtn' is assigned a value but never used.","'sliderBack' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'setWidth'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1733"],"React Hook useEffect has a missing dependency: 'handleBackWidth'. Either include it or remove the dependency array.",["1734"],["1735"],"'interval_id' is assigned a value but never used.","'play' is assigned a value but never used.","'setPlay' is assigned a value but never used.","'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","'isReset' is assigned a value but never used.","'setIsReset' is assigned a value but never used.",["1719"],["1720"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1736"],"'$' is defined but never used.","React Hook useEffect contains a call to 'setActiveHomeTag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.route.routes, props.location.pathname] as a second argument to the useEffect Hook.",["1737"],["1738"],["1739"],"'mp3Path' is defined but never used.","'hongyanPath' is defined but never used.",["1740"],"'mutedAudio' is assigned a value but never used.","'len' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMusicUrl'. Either include it or remove the dependency array.",["1741"],"React Hook useEffect has missing dependencies: 'playPreOrNextSong', 'props.activeSong', and 'props.songs'. Either include them or remove the dependency array.",["1742"],"React Hook useEffect has a missing dependency: 'isOnPlaying'. Either include it or remove the dependency array.",["1743"],"'PersonalCenter' is defined but never used.","'VideoSlider' is defined but never used.","'MVDetail' is defined but never used.","'VideoDetail' is defined but never used.","'Video' is defined but never used.","'SharePng' is defined but never used.","'getSongs' is defined but never used.","'Tools' is defined but never used.","'is_scroll_listener' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSongsDetailDesc'. Either include it or remove the dependency array.",["1744"],"React Hook useEffect has a missing dependency: 'allSongsData'. Either include it or remove the dependency array.",["1745"],"React Hook useEffect has missing dependencies: 'getPlaylistComments' and 'tabIndex'. Either include them or remove the dependency array.",["1746"],"React Hook useEffect has missing dependencies: 'commentPage', 'subcribersPage', and 'tabIndex'. Either include them or remove the dependency array. You can also do a functional update 'setCommentPage(c => ...)' if you only need 'commentPage' in the 'setCommentPage' call.",["1747"],"React Hook useEffect has a missing dependency: 'getPlaylistSubcribers'. Either include it or remove the dependency array.",["1748"],"React Hook useEffect has missing dependencies: 'getPlaylistComments', 'getPlaylistDetail', 'getPlaylistSubcribers', and 'handleScroll'. Either include them or remove the dependency array.",["1749"],"'params' is assigned a value but never used.","'videoGroupList' is assigned a value but never used.","'selGroupID' is assigned a value but never used.","'selectVideoGroup' is assigned a value but never used.","'changeGroupListHeight' is assigned a value but never used.","'item' is assigned a value but never used.","'exchangeDuration' is assigned a value but never used.",["1750"],"React Hook useEffect has missing dependencies: 'isHover' and 'rightClickDiv'. Either include them or remove the dependency array.",["1751"],["1752"],["1753"],["1754"],"React Hook useEffect has missing dependencies: 'getAlbumArea' and 'getTopAlbum'. Either include them or remove the dependency array.",["1755"],["1756"],"React Hook useEffect has a missing dependency: 'geneCorStucData'. Either include it or remove the dependency array.",["1757"],"'Pagination' is defined but never used.","React Hook useEffect has a missing dependency: 'getArtistsList'. Either include it or remove the dependency array.",["1758"],"React Hook useEffect has a missing dependency: 'dataPage'. Either include it or remove the dependency array. You can also do a functional update 'setDataPage(d => ...)' if you only need 'dataPage' in the 'setDataPage' call.",["1759"],"'isOnReset' is assigned a value but never used.","'setIsOnReset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getArtistAlbum', 'getArtistDetail', 'getArtistDetailDesc', 'getArtistMV', and 'getSimiArtist'. Either include them or remove the dependency array.",["1760"],"React Hook useEffect has a missing dependency: 'artistID'. Either include it or remove the dependency array.",["1761"],"React Hook useEffect has missing dependencies: 'getArtistAlbum', 'getArtistDetail', 'getArtistDetailDesc', 'getArtistMV', 'getSimiArtist', and 'id'. Either include them or remove the dependency array.",["1762"],["1763"],["1764"],"'dataStr' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'exchangeTime' is defined but never used.","'AddWhitePng' is defined but never used.","'NoZanPng' is defined but never used.","'ShareRound' is defined but never used.","'CommentRoundPng' is defined but never used.","'GenderMale' is defined but never used.","'GenderFemale' is defined but never used.","'addSong' is assigned a value but never used.","'deleteSong' is assigned a value but never used.","'headerPictureChange' is assigned a value but never used.",["1765"],"React Hook useEffect has a missing dependency: 'getPersonalInfo'. Either include it or remove the dependency array.",["1766"],["1767"],"React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setSongData' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["1768"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'TestMp4' is defined but never used.","'setPlayImg' is assigned a value but never used.","'thumbImg' is assigned a value but never used.","'setThumbImg' is assigned a value but never used.","'subImg' is assigned a value but never used.","'setSubImg' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'videoVolume'. Either include it or remove the dependency array.",["1769"],"React Hook useEffect has a missing dependency: 'videoPath'. Either include it or remove the dependency array.",["1770"],"'exchangeDuration' is defined but never used.","'setCommentLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMVComments', 'getMVData', and 'getMVURL'. Either include them or remove the dependency array.",["1771"],["1772"],"React Hook useEffect has a missing dependency: 'commentPage'. Either include it or remove the dependency array. You can also do a functional update 'setCommentPage(c => ...)' if you only need 'commentPage' in the 'setCommentPage' call.",["1773"],"React Hook useEffect has a missing dependency: 'getMVComments'. Either include it or remove the dependency array.",["1774"],"'setPageLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMVComments', 'getMVData', 'getMVURL', and 'getRelatedVideo'. Either include them or remove the dependency array.",["1775"],["1776"],["1777"],["1778"],"'isHasMoreData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getVideoGroup'. Either include it or remove the dependency array.",["1779"],"React Hook useEffect has a missing dependency: 'videoDataPage'. Either include it or remove the dependency array. You can also do a functional update 'setVideoDataPage(v => ...)' if you only need 'videoDataPage' in the 'setVideoDataPage' call.",["1780"],"React Hook useEffect has a missing dependency: 'getAllVideo'. Either include it or remove the dependency array.",["1781"],"'setVideoGroupList' is assigned a value but never used.","'setSelGroupID' is assigned a value but never used.","'isSpreadGroupList' is assigned a value but never used.","'setIsSpreadGroupList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllMV'. Either include it or remove the dependency array.",["1782"],"React Hook useEffect has a missing dependency: 'mvDataPage'. Either include it or remove the dependency array. You can also do a functional update 'setMVDataPage(m => ...)' if you only need 'mvDataPage' in the 'setMVDataPage' call.",["1783"],["1784"],"'setSongsIdData' is assigned a value but never used.",["1785"],["1786"],["1787"],"React Hook useEffect has missing dependencies: 'commentPage' and 'tabIndex'. Either include them or remove the dependency array. You can also do a functional update 'setCommentPage(c => ...)' if you only need 'commentPage' in the 'setCommentPage' call.",["1788"],"React Hook useEffect has missing dependencies: 'getAlbumBasicData', 'getAlbumDetailData', 'getPlaylistComments', and 'handleScroll'. Either include them or remove the dependency array.",["1789"],"no-global-assign","no-unsafe-negation",{"desc":"1790","fix":"1791"},{"desc":"1792","fix":"1793"},{"desc":"1794","fix":"1795"},{"desc":"1796","fix":"1797"},{"desc":"1798","fix":"1799"},{"desc":"1800","fix":"1801"},{"desc":"1802","fix":"1803"},{"desc":"1804","fix":"1805"},{"desc":"1806","fix":"1807"},{"desc":"1808","fix":"1809"},{"desc":"1810","fix":"1811"},{"desc":"1812","fix":"1813"},{"desc":"1814","fix":"1815"},{"desc":"1816","fix":"1817"},{"desc":"1814","fix":"1818"},{"desc":"1819","fix":"1820"},{"desc":"1821","fix":"1822"},{"desc":"1792","fix":"1823"},{"desc":"1794","fix":"1824"},{"desc":"1798","fix":"1825"},{"desc":"1826","fix":"1827"},{"desc":"1828","fix":"1829"},{"desc":"1830","fix":"1831"},{"desc":"1832","fix":"1833"},{"desc":"1834","fix":"1835"},{"desc":"1836","fix":"1837"},{"desc":"1838","fix":"1839"},{"desc":"1840","fix":"1841"},{"desc":"1842","fix":"1843"},{"desc":"1804","fix":"1844"},{"desc":"1845","fix":"1846"},{"desc":"1814","fix":"1847"},{"desc":"1816","fix":"1848"},{"desc":"1814","fix":"1849"},{"desc":"1850","fix":"1851"},{"desc":"1802","fix":"1852"},{"desc":"1853","fix":"1854"},{"desc":"1855","fix":"1856"},{"desc":"1857","fix":"1858"},{"desc":"1859","fix":"1860"},{"desc":"1861","fix":"1862"},{"desc":"1863","fix":"1864"},{"desc":"1810","fix":"1865"},{"desc":"1812","fix":"1866"},{"desc":"1804","fix":"1867"},{"desc":"1868","fix":"1869"},{"desc":"1870","fix":"1871"},{"desc":"1872","fix":"1873"},{"desc":"1874","fix":"1875"},{"desc":"1876","fix":"1877"},{"desc":"1878","fix":"1879"},{"desc":"1880","fix":"1881"},{"desc":"1882","fix":"1883"},{"desc":"1884","fix":"1885"},{"desc":"1886","fix":"1887"},{"desc":"1888","fix":"1889"},{"desc":"1882","fix":"1890"},{"desc":"1884","fix":"1891"},{"desc":"1892","fix":"1893"},{"desc":"1894","fix":"1895"},{"desc":"1896","fix":"1897"},{"desc":"1898","fix":"1899"},{"desc":"1900","fix":"1901"},{"desc":"1902","fix":"1903"},{"desc":"1832","fix":"1904"},{"desc":"1834","fix":"1905"},{"desc":"1836","fix":"1906"},{"desc":"1907","fix":"1908"},{"desc":"1909","fix":"1910"},"Add dependencies array: [props.location.pathname]",{"range":"1911","text":"1912"},"Update the dependencies array to be: [searchKeyword, search_suggest]",{"range":"1913","text":"1914"},"Update the dependencies array to be: [isSearchFocus, searchKeyword, search_suggest]",{"range":"1915","text":"1916"},"Update the dependencies array to be: [index, isHover, leftClickDiv]",{"range":"1917","text":"1918"},"Update the dependencies array to be: [duration, isFirst]",{"range":"1919","text":"1920"},"Update the dependencies array to be: [getAlbumArea, paramsDate]",{"range":"1921","text":"1922"},"Update the dependencies array to be: [getTopAlbum]",{"range":"1923","text":"1924"},"Update the dependencies array to be: [getUserEvent, getUserFolloweds, getUserFollows, getUserPlaylists, profile]",{"range":"1925","text":"1926"},"Update the dependencies array to be: [getPlaylistComments, getPlaylistDetail, id]",{"range":"1927","text":"1928"},"Update the dependencies array to be: [getArtistAlbum, getArtistMV]",{"range":"1929","text":"1930"},"Update the dependencies array to be: [albumsOffset, getArtistAlbum]",{"range":"1931","text":"1932"},"Update the dependencies array to be: [getArtistMV, mvsOffset]",{"range":"1933","text":"1934"},"Update the dependencies array to be: [props, setWidth]",{"range":"1935","text":"1936"},"Update the dependencies array to be: [handleBackWidth, play]",{"range":"1937","text":"1938"},{"range":"1939","text":"1936"},"Update the dependencies array to be: [props]",{"range":"1940","text":"1941"},"Add dependencies array: [props.route.routes, props.location.pathname]",{"range":"1942","text":"1943"},{"range":"1944","text":"1914"},{"range":"1945","text":"1916"},{"range":"1946","text":"1920"},"Update the dependencies array to be: [getMusicUrl, props.activeSong.data.id]",{"range":"1947","text":"1948"},"Update the dependencies array to be: [currentAudioTime, playPreOrNextSong, props.activeSong, props.songs]",{"range":"1949","text":"1950"},"Update the dependencies array to be: [canPlay, isOnPlaying]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [getSongsDetailDesc, songsIdData]",{"range":"1953","text":"1954"},"Update the dependencies array to be: [allSongsData, currentPage, pageSize]",{"range":"1955","text":"1956"},"Update the dependencies array to be: [commentPage, getPlaylistComments, tabIndex]",{"range":"1957","text":"1958"},"Update the dependencies array to be: [arriveBottom, commentPage, subcribersPage, tabIndex]",{"range":"1959","text":"1960"},"Update the dependencies array to be: [getPlaylistSubcribers, subcribersPage]",{"range":"1961","text":"1962"},"Update the dependencies array to be: [getPlaylistComments, getPlaylistDetail, getPlaylistSubcribers, handleScroll]",{"range":"1963","text":"1964"},{"range":"1965","text":"1926"},"Update the dependencies array to be: [index, bannerData, left, isHover, rightClickDiv]",{"range":"1966","text":"1967"},{"range":"1968","text":"1936"},{"range":"1969","text":"1938"},{"range":"1970","text":"1936"},"Update the dependencies array to be: [getAlbumArea, getTopAlbum, paramsDate]",{"range":"1971","text":"1972"},{"range":"1973","text":"1924"},"Update the dependencies array to be: [arriveBottom, geneCorStucData]",{"range":"1974","text":"1975"},"Update the dependencies array to be: [activeArea, activeType, activeCat, dataPage, getArtistsList]",{"range":"1976","text":"1977"},"Update the dependencies array to be: [arriveBottom, dataPage]",{"range":"1978","text":"1979"},"Update the dependencies array to be: [artistID, getArtistAlbum, getArtistDetail, getArtistDetailDesc, getArtistMV, getSimiArtist]",{"range":"1980","text":"1981"},"Update the dependencies array to be: [artistID, id]",{"range":"1982","text":"1983"},"Update the dependencies array to be: [getArtistAlbum, getArtistDetail, getArtistDetailDesc, getArtistMV, getSimiArtist, id]",{"range":"1984","text":"1985"},{"range":"1986","text":"1932"},{"range":"1987","text":"1934"},{"range":"1988","text":"1926"},"Update the dependencies array to be: [getPersonalInfo, id]",{"range":"1989","text":"1990"},"Update the dependencies array to be: [getPersonalInfo]",{"range":"1991","text":"1992"},"Update the dependencies array to be: [props.type, props.data.id, props.data]",{"range":"1993","text":"1994"},"Update the dependencies array to be: [fullscreenKeyType, onFullscreen, videoVolume]",{"range":"1995","text":"1996"},"Update the dependencies array to be: [props.path, videoPath]",{"range":"1997","text":"1998"},"Update the dependencies array to be: [getMVComments, getMVData, getMVURL, props.id]",{"range":"1999","text":"2000"},"Update the dependencies array to be: [getMVComments, getMVData, getMVURL]",{"range":"2001","text":"2002"},"Update the dependencies array to be: [arriveBottom, commentPage]",{"range":"2003","text":"2004"},"Update the dependencies array to be: [commentPage, getMVComments]",{"range":"2005","text":"2006"},"Update the dependencies array to be: [getMVComments, getMVData, getMVURL, getRelatedVideo, id]",{"range":"2007","text":"2008"},"Update the dependencies array to be: [getMVComments, getMVData, getMVURL, getRelatedVideo]",{"range":"2009","text":"2010"},{"range":"2011","text":"2004"},{"range":"2012","text":"2006"},"Update the dependencies array to be: [getVideoGroup, selGroupID, videoDataPage]",{"range":"2013","text":"2014"},"Update the dependencies array to be: [arriveBottom, videoDataPage]",{"range":"2015","text":"2016"},"Update the dependencies array to be: [getAllVideo]",{"range":"2017","text":"2018"},"Update the dependencies array to be: [activeArea.name, activeType.name, activeCat.name, mvDataPage, getAllMV]",{"range":"2019","text":"2020"},"Update the dependencies array to be: [arriveBottom, mvDataPage]",{"range":"2021","text":"2022"},"Update the dependencies array to be: [getAllMV]",{"range":"2023","text":"2024"},{"range":"2025","text":"1954"},{"range":"2026","text":"1956"},{"range":"2027","text":"1958"},"Update the dependencies array to be: [arriveBottom, commentPage, tabIndex]",{"range":"2028","text":"2029"},"Update the dependencies array to be: [getAlbumBasicData, getAlbumDetailData, getPlaylistComments, handleScroll]",{"range":"2030","text":"2031"},[1002,1002],", [props.location.pathname]",[1157,1172],"[searchKeyword, search_suggest]",[1431,1446],"[isSearchFocus, searchKeyword, search_suggest]",[1049,1056],"[index, isHover, leftClickDiv]",[5498,5508],"[duration, isFirst]",[8425,8437],"[getAlbumArea, paramsDate]",[9429,9431],"[getTopAlbum]",[8366,8375],"[getUserEvent, getUserFolloweds, getUserFollows, getUserPlaylists, profile]",[3748,3750],"[getPlaylistComments, getPlaylistDetail, id]",[5798,5800],"[getArtistAlbum, getArtistMV]",[7099,7113],"[albumsOffset, getArtistAlbum]",[7210,7221],"[getArtistMV, mvsOffset]",[4450,4452],"[props, setWidth]",[6229,6235],"[handleBackWidth, play]",[4414,4416],[6911,6913],"[props]",[1068,1068],", [props.route.routes, props.location.pathname]",[1181,1196],[1455,1470],[7225,7235],[11005,11031],"[getMusicUrl, props.activeSong.data.id]",[11340,11358],"[currentAudioTime, playPreOrNextSong, props.activeSong, props.songs]",[11514,11523],"[canPlay, isOnPlaying]",[5689,5702],"[getSongsDetailDesc, songsIdData]",[6357,6380],"[allSongsData, currentPage, pageSize]",[7580,7593],"[commentPage, getPlaylistComments, tabIndex]",[7998,8012],"[arriveBottom, commentPage, subcribersPage, tabIndex]",[9925,9941],"[getPlaylistSubcribers, subcribersPage]",[10336,10338],"[getPlaylistComments, getPlaylistDetail, getPlaylistSubcribers, handleScroll]",[8366,8375],[3890,3915],"[index, bannerData, left, isHover, rightClickDiv]",[4450,4452],[6229,6235],[4459,4461],[9149,9161],"[getAlbumArea, getTopAlbum, paramsDate]",[10553,10555],[10720,10734],"[arriveBottom, geneCorStucData]",[3258,3303],"[activeArea, activeType, activeCat, dataPage, getArtistsList]",[4224,4238],"[arriveBottom, dataPage]",[7071,7081],"[artistID, getArtistAlbum, getArtistDetail, getArtistDetailDesc, getArtistMV, getSimiArtist]",[8051,8055],"[artistID, id]",[8432,8434],"[getArtistAlbum, getArtistDetail, getArtistDetailDesc, getArtistMV, getSimiArtist, id]",[9776,9790],[9887,9898],[9306,9315],[9374,9378],"[getPersonalInfo, id]",[9436,9438],"[getPersonalInfo]",[2467,2494],"[props.type, props.data.id, props.data]",[10113,10146],"[fullscreenKeyType, onFullscreen, videoVolume]",[11243,11255],"[props.path, videoPath]",[3080,3090],"[getMVComments, getMVData, getMVURL, props.id]",[3317,3319],"[getMVComments, getMVData, getMVURL]",[3463,3477],"[arriveBottom, commentPage]",[3573,3586],"[commentPage, getMVComments]",[2564,2568],"[getMVComments, getMVData, getMVURL, getRelatedVideo, id]",[3907,3909],"[getMVComments, getMVData, getMVURL, getRelatedVideo]",[4053,4067],[4163,4176],[1612,1639],"[getVideoGroup, selGroupID, videoDataPage]",[2811,2825],"[arriveBottom, videoDataPage]",[4084,4086],"[getAllVideo]",[4009,4071],"[activeArea.name, activeType.name, activeCat.name, mvDataPage, getAllMV]",[4190,4204],"[arriveBottom, mvDataPage]",[5582,5584],"[getAllMV]",[5729,5742],[6397,6420],[7669,7682],[7988,8002],"[arriveBottom, commentPage, tabIndex]",[9398,9400],"[getAlbumBasicData, getAlbumDetailData, getPlaylistComments, handleScroll]"]